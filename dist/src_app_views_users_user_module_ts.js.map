{"version":3,"file":"src_app_views_users_user_module_ts.js","mappings":"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","sources":["./src/app/shared/services/user.service.ts","./src/app/views/users/models/user-model.ts","./src/app/views/users/user-detail/user-detail.component.ts","./src/app/views/users/user-detail/user-detail.component.html","./src/app/views/users/user-list/user-list.component.ts","./src/app/views/users/user-list/user-list.component.html","./src/app/views/users/user-routing.module.ts","./src/app/views/users/user.module.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n    url = 'https://api-cosmetic-w32d.onrender.com/api/Users';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAllUsers(): Observable<any> {\r\n        return this.http.get(this.url);\r\n    }\r\n\r\n    createUser(user: any): Observable<any> {\r\n        return this.http.post(this.url, user).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                console.error('Error en la solicitud:', error);\r\n                return throwError('Ocurrió un error al crear el usuario. Por favor, inténtalo de nuevo.');\r\n            })\r\n        );\r\n    }\r\n\r\n    updateUser(id: number, updatedData: any): Observable<any> {\r\n        return this.http.put(`${this.url}/${id}`, updatedData).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                console.error('Error en la solicitud:', error);\r\n                return throwError('Ocurrió un error al actualizar el usuario. Por favor, inténtalo de nuevo.');\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    checkEmailAvailability(email: string): Observable<boolean> {\r\n        return this.http.get<boolean>(`${this.url}-check-email?email=${email}`);\r\n    }\r\n    \r\n\r\n    getUsersById(id: number): Observable<any> {\r\n        return this.http.get<any>(`${this.url}/${id}`);\r\n    }\r\n\r\n\r\n    userChangeStatus(id: any): Observable<any> {\r\n        return this.http.put<boolean>(`${this.url}/state/${id}`, {});\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class UserFormModel {\r\n    id_user: string;\r\n    id_role: string;\r\n    id_employee: string;\r\n    creation_date_user: Date;\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    state_user: string;\r\n    observation_user: string;\r\n\r\n\r\n\r\n\r\n    constructor(response) {\r\n        this.id_user = response.id_user;\r\n        this.id_role = response.id_role;\r\n        this.id_employee = response.id_employee;\r\n        this.creation_date_user = response.creation_date_user;\r\n        this.username = response.username;\r\n        this.email = response.email;\r\n        this.password = response.password;\r\n        this.state_user = response.state_user;\r\n       this.observation_user = response.observation_user\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { UsersService } from 'src/app/shared/services/user.service';\r\nimport { UserFormModel } from '../models/user-model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-user-detail',\r\n    templateUrl: './user-detail.component.html',\r\n    styleUrls: ['./user-detail.component.scss']\r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n\r\n    userForm: FormGroup;\r\n    userFormSub: Subscription;\r\n    loading: boolean = false;\r\n    formBasic: FormGroup;\r\n    viewMode: 'new' | 'edit' | 'print' = 'new';\r\n    id: string;\r\n    isNew: boolean;\r\n    invoice: any = {};\r\n    invoiceForm: UntypedFormGroup;\r\n    invoiceFormSub: Subscription;\r\n    subTotal: number;\r\n    saving: boolean;\r\n    userData: UserFormModel;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private fb: UntypedFormBuilder,\r\n        private toastr: ToastrService,\r\n        private usersService: UsersService\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id_user'];\r\n        this.isNew = !this.id;\r\n        this.setViewMode();\r\n        this.inicializateForm(Number(this.id));\r\n    }\r\n\r\n    private inicializateForm(id: number): void {\r\n        this.userForm = this.formBuilder.group({\r\n\r\n\r\n            id_user: [],\r\n            id_role: [],\r\n            id_employee: [],\r\n            username: ['', [Validators.required, Validators.maxLength(80)], [this.validateNameSimbolAndNumber]],\r\n            email: ['', [Validators.required, Validators.email, Validators.maxLength(80)]],\r\n            observation_user: ['', [Validators.required, Validators.maxLength(100)]],\r\n            state_user: [],\r\n            creation_date_user: [],\r\n            password: [],\r\n        });\r\n\r\n        if (this.viewMode == 'print') {\r\n            this.userForm.disable();\r\n        }\r\n\r\n        if (this.viewMode == 'edit') {\r\n            this.id_user.disable();\r\n            this.id_role.disable();\r\n            this.id_employee.disable();\r\n        }\r\n\r\n        if (this.viewMode != 'new') {\r\n            this.getUserByID(id);\r\n        }\r\n\r\n    }\r\n\r\n    private getUserByID(id: number): void {\r\n        this.loading = true;\r\n        this.usersService.getUsersById(id).subscribe({\r\n            next: (response: any) => {\r\n                this.userData = new UserFormModel(response);\r\n                this.setDataUser();\r\n            },\r\n            error: (err) => {\r\n                console.log('err', err);\r\n                this.loading = false;\r\n            },\r\n            complete: () => {\r\n                this.loading = false;\r\n            },\r\n        });\r\n    }\r\n\r\n    private setDataUser(): void {\r\n        if (this.userData) {\r\n            this.id_user.setValue(this.userData.id_user),\r\n                this.id_role.setValue(this.userData.id_role),\r\n                this.id_employee.setValue(this.userData.id_employee),\r\n                this.username.setValue(this.userData.username),\r\n                this.email.setValue(this.userData.email),\r\n                this.password.setValue(this.userData.password),\r\n                this.state_user.setValue(this.userData.state_user),\r\n                this.observation_user.setValue(this.userData.observation_user),\r\n\r\n                this.userForm.setValue(this.userData)\r\n        }\r\n    }\r\n\r\n    createUser() {\r\n        if (this.userForm.valid) {\r\n            const userData = this.userForm.value;\r\n            this.loading = true;\r\n            this.usersService.createUser(userData).subscribe(\r\n                (response) => {\r\n                    this.loading = false;\r\n                    console.log(\"Éxito al crear usuario: \", response);\r\n                    this.submit();\r\n                },\r\n                (error) => {\r\n                    this.loading = false;\r\n                    console.error(\"Error al crear el usuario: \", this.toastr.error);\r\n                    const errorMessage = error.error ? error.error : 'Ocurrió un error al crear el usuario.';\r\n                    this.toastr.error(errorMessage, 'Error');\r\n                }\r\n            );\r\n        } else {\r\n            this.toastr.error('Por favor, complete todos los campos correctamente.', 'Error de validación', { progressBar: true, timeOut: 3000 });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    validateNameSimbolAndNumber(control: FormControl) {\r\n        const nameValue = control.value;\r\n        const combinedPattern = /^[\\wáéíóúñÑ´\\s]+$/;\r\n\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                if (combinedPattern.test(nameValue)) {\r\n                    const numberCount = (nameValue.match(/\\d/g) || []).length;\r\n                    if (numberCount <= 1) {\r\n                        resolve(null); // Válido\r\n                    } else {\r\n                        resolve({ invalidName: true }); // No válido\r\n                    }\r\n                } else {\r\n                    resolve({ invalidName: true }); // No válido\r\n                }\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public checkEmailAvailability(): void {\r\n        if (this.email && this.email instanceof AbstractControl) {\r\n            this.validateEmail(this.email).then((result) => {\r\n                if (result) {\r\n                    this.email.setErrors(result);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    validateEmail(control: AbstractControl) {\r\n        const email = control.value.toLowerCase();\r\n        const validDomains = ['gmail.com', 'hotmail.com', 'outlook.com', 'yahoo.com'];\r\n        const domain = email.split('@')[1];\r\n\r\n        if (!email) {\r\n            return Promise.resolve(null); // Correo vacío es válido\r\n        }\r\n\r\n        if (validDomains.includes(domain)) {\r\n            return new Promise((resolve) => {\r\n                if (!control.value) {\r\n                    resolve(null);\r\n                } else {\r\n                    this.usersService.checkEmailAvailability(control.value).subscribe(\r\n                        (isAvailable) => {\r\n                            if (isAvailable) {\r\n                                resolve(null); // El correo es válido y está disponible\r\n                            } else {\r\n                                resolve({ emailTaken: true }); // El correo no está disponible\r\n                            }\r\n                        },\r\n                        (error) => {\r\n                            resolve({ emailTaken: true });\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n        } else {\r\n            return Promise.resolve({ invalidDomain: true }); // No es un correo válido en el dominio permitido\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    saveUserChanges(id: number, updatedData: any) {\r\n        this.usersService.updateUser(id, updatedData).subscribe(\r\n            (response) => {\r\n                this.loading = false;\r\n                this.submit();\r\n            },\r\n            (error) => {\r\n                this.loading = false;\r\n                console.error(\"Error al crear usuario: \", this.toastr.error);\r\n                const errorMessage = error.error ? error.error : 'Ocurrió un error al crear el usuario.';\r\n                this.toastr.error(errorMessage, 'Error');\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    public submitUser(): void {\r\n        if (this.viewMode == 'new') {\r\n            this.createUser();\r\n        } else if (this.viewMode == 'edit') {\r\n            this.saveChanges();\r\n        }\r\n    }\r\n\r\n\r\n    saveChanges() {\r\n        console.log('editar')\r\n\r\n        if (this.userForm.valid) {\r\n            const id = Number(this.id); // Convierte el ID a número\r\n            const updatedData = {\r\n\r\n                username: this.userForm.get('username').value,\r\n                password: this.userForm.get('password').value,\r\n                email: this.email.value,\r\n                observation_user: this.userForm.get('observation_user').value,\r\n            };\r\n            this.saveUserChanges(id, updatedData);\r\n        } else {\r\n            this.toastr.error('Por favor, complete todos los campos correctamente.', 'Error de validación', { progressBar: true, timeOut: 3000 });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    cancel() {\r\n\r\n        this.router.navigateByUrl('/users');\r\n    }\r\n\r\n    submit() {\r\n        if (!this.loading) {\r\n            this.loading = true;\r\n            setTimeout(() => {\r\n                this.loading = false;\r\n                this.toastr.success('Usuario registrado con éxito.', 'Éxito', { progressBar: true, timeOut: 3000 });\r\n                setTimeout(() => {\r\n                    this.router.navigateByUrl('/users');\r\n                }, 3000);\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    setViewMode() {\r\n        const currentRoute = this.router.url;\r\n        if (currentRoute.includes('/new')) {\r\n            this.viewMode = 'new';\r\n        } else if (currentRoute.includes('/edit/')) {\r\n            this.viewMode = 'edit';\r\n        } else if (currentRoute.includes('/print/')) {\r\n            this.viewMode = 'print';\r\n        }\r\n    }\r\n\r\n\r\n\r\n    print() {\r\n        if (window) {\r\n            window.print();\r\n        }\r\n    }\r\n\r\n\r\n    get email() {\r\n        return this.userForm.get('email');\r\n    }\r\n\r\n    get id_user() {\r\n        return this.userForm.get('id_user');\r\n    }\r\n\r\n    get id_role() {\r\n        return this.userForm.get('id_role');\r\n    }\r\n    get id_employee() {\r\n        return this.userForm.get('id_employee');\r\n    }\r\n    get username() {\r\n        return this.userForm.get('username');\r\n    }\r\n    get state_user() {\r\n        return this.userForm.get('state_user');\r\n    }\r\n    get creation_date_user() {\r\n        return this.userForm.get('creation_date_user');\r\n    }\r\n    get observation_user() {\r\n        return this.userForm.get('observation_user');\r\n    }\r\n\r\n    get password() {\r\n        return this.userForm.get('password');\r\n    }\r\n\r\n\r\n\r\n}","<div class=\"breadcrumb\">\r\n  <h1 *ngIf=\"viewMode === 'new'\">Registrar usuario</h1>\r\n  <h1 *ngIf=\"viewMode === 'edit'\">Editar usuario</h1>\r\n  <h1 *ngIf=\"viewMode === 'print'\">Ver detalle de usuario</h1>\r\n  <ul>\r\n    <li><a [routerLink]=\"['/users']\">Usuarios</a></li>\r\n    <li *ngIf=\"viewMode === 'new'\">Registrar usuario</li>\r\n    <li *ngIf=\"viewMode === 'edit'\">Editar usuario</li>\r\n    <li *ngIf=\"viewMode === 'print'\">Ver detalle de usuario</li>\r\n  </ul>\r\n</div>\r\n\r\n<div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n<!-- Contenido común a todas las vistas -->\r\n<div class=\"form-container\">\r\n  <!-- Vista de crear usuarios -->\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-title mb-3\">Formulario de usuarios</div>\r\n          <form [formGroup]=\"userForm\" (ngSubmit)=\"submitUser()\">\r\n            <div class=\"row\">\r\n\r\n              <div class=\"col-md-6 form-group mb-3\">\r\n                <label for=\"id_role\">ID de rol</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"id_role\"\r\n                  formControlName=\"id_role\"\r\n                />\r\n              </div>\r\n              <div class=\"col-md-6 form-group mb-3\">\r\n                <label for=\"id_employee\">Id empleado</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"id_employee\"\r\n                  formControlName=\"id_employee\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"col-md-6 form-group mb-3\">\r\n                <label for=\"username\"\r\n                  >Nombre de usuario<span class=\"text-danger\">*</span></label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"username\"\r\n                  formControlName=\"username\"\r\n                  required\r\n                />\r\n                <div\r\n                  *ngIf=\"\r\n                    userForm.get('username').touched &&\r\n                    userForm.get('username').hasError('required')\r\n                  \"\r\n                  class=\"error-message\"\r\n                >\r\n                  El campo nombre es obligatorio.\r\n                </div>\r\n                <div\r\n                  *ngIf=\"userForm.get('username').hasError('invalidName')\"\r\n                  class=\"error-message\"\r\n                >\r\n                  El campo nombre no puede tener simbolos y solo puede tener 1\r\n                  numero.\r\n                </div>\r\n\r\n                <div\r\n                  *ngIf=\"userForm.get('username').hasError('maxlength')\"\r\n                  class=\"error-message\"\r\n                >\r\n                  El campo nombre no puede superar los 80 caracteres.\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-6 form-group mb-3\">\r\n                <label for=\"email\"\r\n                  >Correo<span class=\"text-danger\">*</span></label\r\n                >\r\n                <input\r\n                  type=\"email\"\r\n                  class=\"form-control\"\r\n                  id=\"email\"\r\n                  formControlName=\"email\"\r\n                  (change)=\"(checkEmailAvailability)\"\r\n                />\r\n                <div\r\n                  *ngIf=\"\r\n                    userForm.get('email').touched &&\r\n                    userForm.get('email').hasError('required')\r\n                  \"\r\n                  class=\"error-message\"\r\n                >\r\n                  El campo correo es obligatorio.\r\n                </div>\r\n                <div\r\n                  *ngIf=\"userForm.get('email').hasError('email')\"\r\n                  class=\"error-message\"\r\n                >\r\n                  El campo correo debe ser un formato de correo electrónico\r\n                  válido.\r\n                </div>\r\n                <div\r\n                  *ngIf=\"userForm.get('email').hasError('invalidDomain')\"\r\n                  class=\"error-message\"\r\n                >\r\n                  El dominio del correo no es válido.\r\n                </div>\r\n                <div\r\n                  *ngIf=\"userForm.get('email').hasError('maxlength')\"\r\n                  class=\"error-message\"\r\n                >\r\n                  El campo correo no puede superar los 80 caracteres.\r\n                </div>\r\n                <div\r\n                  *ngIf=\"userForm.get('email').hasError('emailTaken')\"\r\n                  class=\"error-message\"\r\n                >\r\n                  El correo electrónico ya está en uso.\r\n                </div>\r\n              </div>\r\n\r\n              <div *ngIf=\"viewMode == 'print'\" class=\"col-md-6 form-group mb-3\">\r\n                <label for=\"state_user\"\r\n                  >Estado<span class=\"text-danger\">*</span></label\r\n                >\r\n                <input\r\n                  class=\"form-control\"\r\n                  id=\"state_user\"\r\n                  formControlName=\"state_user\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"col-md-6 form-group mb-3\">\r\n                <label for=\"password\">Contraseña</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"password\"\r\n                  formControlName=\"password\"\r\n                />\r\n              </div>\r\n\r\n              <div class=\"col-md-6 form-group mb-3\">\r\n                <label for=\"observation_user\"\r\n                  >Observación<span class=\"text-danger\">*</span></label\r\n                >\r\n                <textarea\r\n                  class=\"form-control\"\r\n                  id=\"observation_user\"\r\n                  formControlName=\"observation_user\"\r\n                  required\r\n                ></textarea>\r\n                <div\r\n                  *ngIf=\"\r\n                    userForm.get('observation_user').touched &&\r\n                    userForm.get('observation_user').hasError('required')\r\n                  \"\r\n                  class=\"error-message\"\r\n                >\r\n                  El campo observación es obligatorio.\r\n                </div>\r\n                <div\r\n                  *ngIf=\"userForm.get('observation_user').hasError('maxlength')\"\r\n                  class=\"error-message\"\r\n                >\r\n                  El campo observación no puede superar los 100 caracteres.\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group text-right\" style=\"text-align: right\">\r\n                <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"cancel()\">Cancelar</button>\r\n                <btn-loading *ngIf=\"viewMode !== 'print'\" btnClass=\"btn btn-primary m-1 custom-button\" > {{viewMode == 'new' ? 'Registrar usuario' : 'Editar usuario' }} \r\n                </btn-loading>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { UsersService } from 'src/app/shared/services/user.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-user-list',\r\n    templateUrl: './user-list.component.html',\r\n    styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n    loading: boolean;\r\n    searchControl: UntypedFormControl = new UntypedFormControl();\r\n    listUsers: any[];\r\n    filteredUsers: any[];\r\n    pageSize: number = 10;\r\n    currentPage: number = 1;\r\n    modalAbierto = false;\r\n\r\n\r\n    constructor(\r\n        private _userService: UsersService,\r\n        private modalService: NgbModal,\r\n        private toastr: ToastrService,) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getUsers();\r\n        this.searchControl.valueChanges\r\n            .pipe(debounceTime(200))\r\n            .subscribe(value => {\r\n                this.filterData(value);\r\n            });\r\n    }\r\n\r\n\r\n\r\n    getUsers() {\r\n        this._userService.getAllUsers().subscribe(data => {\r\n            this.listUsers = data.sort((a, b) => a.id_user - b.id_user);\r\n            this.filteredUsers = [...this.listUsers];\r\n        }, error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    filterData(value: string) {\r\n        if (value) {\r\n            value = value.toLowerCase();\r\n        } else {\r\n            this.filteredUsers = [...this.listUsers];\r\n            return;\r\n        }\r\n\r\n        this.filteredUsers = this.listUsers.filter(user => {\r\n            const nombreMatch = user.username.toLowerCase().includes(value);\r\n            const correoMatch = user.email.toLowerCase().includes(value);\r\n            const estadoMatch = user.state_user.toLowerCase().includes(value);\r\n\r\n            return   nombreMatch || correoMatch || estadoMatch;\r\n        });\r\n\r\n        this.currentPage = 1;\r\n    }\r\n\r\n    @ViewChild('deleteConfirmModal', { static: true }) deleteConfirmModal: any;\r\n\r\n    openModal(idUser: number) {\r\n        if (!this.modalAbierto) {\r\n            this.modalAbierto = true;\r\n            this.modalService.open(this.deleteConfirmModal, { centered: true }).result.then(\r\n                (result) => {\r\n                    if (result === 'Ok') {\r\n                        this._userService.userChangeStatus(idUser).subscribe(\r\n                            (data) => {\r\n                                // this.loading = false;\r\n                                // this.toastr.success('Cambio de estado realizado con éxito.', 'Proceso Completado', { progressBar: true, timeOut: 2000 });\r\n                                console.log(data);\r\n\r\n                                setTimeout(() => {\r\n                                    \r\n                                    location.reload();\r\n                                });\r\n                            },\r\n                            (error) => {\r\n                                this.loading = false;\r\n                                this.toastr.error('Fallo al realizar el cambio de estado.', 'Error', { progressBar: true, timeOut: 2000 });\r\n                                console.error('Error al cambiar de estado:', error);\r\n                            }\r\n                        );\r\n                    } else if (result === 'Cancel') {\r\n                        this.modalAbierto = false;\r\n                        setTimeout(() => {\r\n                            location.reload();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                (reason) => {\r\n                    this.modalAbierto = false;\r\n                    location.reload();\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n}","<div class=\"\">\r\n    <div class=\"breadcrumb\">\r\n        <h1>Listar usuarios</h1>\r\n        <ul>\r\n            <li><a href=\"#\">Servicios</a></li>\r\n            <li>Usuarios</li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n    <div class=\"row mb-3\">\r\n        <div class=\"col-md-12 mb-3\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <button class=\"btn btn-primary float-right\" [routerLink]=\"['/users/new']\">Crear nuevo usuario</button>\r\n                </div>\r\n                <div class=\"col-md-6 d-flex justify-content-end\">\r\n                    <input _ngcontent-vet-c167=\"\" id=\"search\" placeholder=\"Buscar usuario\" type=\"text\"\r\n                        class=\"form-control  ng-valid ng-touched ng-dirty\" [formControl]=\"searchControl\"\r\n                        style=\"width: 50%;\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card o-hidden\">\r\n                <ngx-datatable style=\"height: 460px;\" class=\"material fullscreen\" [columnMode]=\"'force'\" [headerHeight]=\"50\"\r\n                    [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\" [rows]=\"filteredUsers\">\r\n                    <ngx-datatable-column name=\"id_user\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"100\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            Id usuario\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            {{ row.id_user }}\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n                    <ngx-datatable-column name=\"username\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"200\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            Nombre usuario\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            {{ row.username }}\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n                    <ngx-datatable-column name=\"email\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"180\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            Correo\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            {{ row.email }}\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n\r\n                    <ngx-datatable-column name=\"state_user\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"20\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            Estado\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            {{ row.state_user }}\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n\r\n                    <ngx-datatable-column name=\"actions\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"50\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            Acciones\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            <button class=\"btn btn-dark m-1\" [routerLink]=\"['/users/print', row.id_user]\">\r\n                                <i class=\"i-Eye\"></i>\r\n                            </button>\r\n                            <button class=\"btn btn-info m-1\" [routerLink]=\"['/users/edit', row.id_user]\">\r\n                                <i class=\"i-Pen-4\"></i>\r\n                            </button>\r\n                            <label class=\"switch switch-success me-3\" (click)=\"openModal(row.id_user)\">\r\n                                <input type=\"checkbox\" [checked]=\"row.state_user === 'Activo'\">\r\n                                <span class=\"slider\"></span>\r\n                            </label>\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n                </ngx-datatable>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #deleteConfirmModal let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-title\">Cambiar estado usuario</h4>\r\n       \r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p><strong>¿Está seguro de que desea cambiar el estado del usuario?</strong></p>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-danger ml-2\"\r\n            (click)=\"modal.dismiss('cancel')\">Cancelar</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-primary -m1 custom-button\"\r\n            (click)=\"modal.close('Ok')\">Aceptar</button>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserDetailComponent } from './user-detail/user-detail.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: UserListComponent\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: UserDetailComponent\r\n    },\r\n    {\r\n        path: 'edit/:id_user',\r\n        component: UserDetailComponent\r\n    },\r\n    {\r\n        path: 'print/:id_user',\r\n        component: UserDetailComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }","\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { UserDetailComponent } from './user-detail/user-detail.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule ,\r\n        FormsModule,\r\n        NgxDatatableModule,\r\n        ReactiveFormsModule,\r\n        SharedComponentsModule,\r\n        NgbModule,\r\n        UserRoutingModule\r\n    ],\r\n    declarations: [UserDetailComponent,  UserListComponent]\r\n})\r\nexport class UserModule { }"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}