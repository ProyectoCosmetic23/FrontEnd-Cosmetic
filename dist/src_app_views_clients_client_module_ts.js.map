{"version":3,"file":"src_app_views_clients_client_module_ts.js","mappings":"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","sources":["./src/app/shared/services/client.service.ts","./src/app/views/clients/client-detail/client-detail.component.ts","./src/app/views/clients/client-detail/client-detail.component.html","./src/app/views/clients/client-list/client-list-component.ts","./src/app/views/clients/client-list/client-list-component.html","./src/app/views/clients/client-routing.module.ts","./src/app/views/clients/client.module.ts","./src/app/views/clients/models/client.model.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ClientsService {\r\n    url = 'https://api-cosmetic-w32d.onrender.com/api/clients';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAllClients(): Observable<any> {\r\n        return this.http.get(this.url);\r\n    }\r\n\r\n    createClient(client: any): Observable<any> {\r\n        return this.http.post(this.url, client).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                console.error('Error en la solicitud:', error);\r\n                return throwError('Ocurrió un error al crear el cliente. Por favor, inténtalo de nuevo.');\r\n            })\r\n        );\r\n    }\r\n\r\n    updateClient(id: number, updatedData: any): Observable<any> {\r\n        return this.http.put(`${this.url}/${id}`, updatedData).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                console.error('Error en la solicitud:', error);\r\n                return throwError('Ocurrió un error al actualizar el cliente. Por favor, inténtalo de nuevo.');\r\n            })\r\n        );\r\n    }\r\n\r\n    checkCedulaAvailability(nit_or_id_client: string): Observable<boolean> {\r\n        return this.http.get<boolean>(`${this.url}-check-cedula?cedula=${nit_or_id_client}`);\r\n    }\r\n\r\n    checkEmailAvailability(email_client: string): Observable<boolean> {\r\n        return this.http.get<boolean>(`${this.url}-check-email?email=${email_client}`);\r\n    }\r\n\r\n    getClientsById(id: number): Observable<any> {\r\n        return this.http.get<any>(`${this.url}/${id}`);\r\n    }\r\n\r\n\r\n    clientChangeStatus(id: any): Observable<any> {\r\n        return this.http.put<boolean>(`${this.url}/change-status/${id}`, {});\r\n\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { ClientsService } from 'src/app/shared/services/client.service';\r\nimport { ClientFormModel } from '../models/client.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-cliente-detail',\r\n    templateUrl: './client-detail.component.html',\r\n    styleUrls: ['./client-detail.component.scss']\r\n})\r\nexport class ClientDetailComponent implements OnInit {\r\n\r\n    clientForm: FormGroup;\r\n    clientFormSub: Subscription;\r\n    loading: boolean = false;\r\n    formBasic: FormGroup;\r\n    viewMode: 'new' | 'edit' | 'print' = 'new';\r\n    id: string;\r\n    isNew: boolean;\r\n    invoice: any = {};\r\n    invoiceForm: UntypedFormGroup;\r\n    invoiceFormSub: Subscription;\r\n    subTotal: number;\r\n    saving: boolean;\r\n    clientData: ClientFormModel;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private fb: UntypedFormBuilder,\r\n        private toastr: ToastrService,\r\n        private clientsService: ClientsService\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id_client'];\r\n        this.isNew = !this.id;\r\n        this.setViewMode();\r\n        this.inicializateForm(Number(this.id));\r\n    }\r\n\r\n    private inicializateForm(id: number): void {\r\n        this.clientForm = this.formBuilder.group({\r\n            nit_or_id_client: ['', [Validators.required, Validators.maxLength(10), Validators.minLength(7), Validators.pattern('^[0-9]+$')]],\r\n            name_client: ['', [Validators.required, Validators.maxLength(80)], [this.validateNameSimbolAndNumber]],\r\n            last_name_client: ['', [Validators.required, Validators.maxLength(80)], [this.validateNameSimbolAndNumber]],\r\n            email_client: ['', [Validators.required, Validators.email, Validators.maxLength(80)]],\r\n            address_client: ['', [Validators.required, Validators.maxLength(80)]],\r\n            phone_client: ['', [Validators.required, Validators.maxLength(80), Validators.pattern('^[0-9]{10}$')]],\r\n            state_client: []\r\n        });\r\n\r\n        if (this.viewMode == 'print') {\r\n            this.clientForm.disable();\r\n        }\r\n\r\n        if (this.viewMode == 'edit') {\r\n            this.nit_or_id_client.disable();\r\n        }\r\n\r\n        if (this.viewMode != 'new') {\r\n            this.getClientByID(id);\r\n        }\r\n\r\n    }\r\n\r\n    private getClientByID(id: number): void {\r\n        this.loading = true;\r\n        this.clientsService.getClientsById(id).subscribe({\r\n            next: (response: any) => {\r\n                this.clientData = new ClientFormModel(response);\r\n                this.setDataClient();\r\n            },\r\n            error: (err) => {\r\n                console.log('err', err);\r\n                this.loading = false;\r\n            },\r\n            complete: () => {\r\n                this.loading = false;\r\n            },\r\n        });\r\n    }\r\n\r\n    // private setDataClient(): void {\r\n    //     if (this.clientData) {\r\n    //         this.clientForm.setValue(this.clientData)\r\n    //         console.log(this.clientForm)\r\n    //     }\r\n    // }\r\n\r\n        private setDataClient(): void {\r\n        if (this.clientData) {\r\n            this.nit_or_id_client.setValue(this.clientData.nit_or_id_client)\r\n            this.clientForm.setValue(this.clientData)\r\n        }\r\n    }\r\n\r\n    createClient() {\r\n        if (this.clientForm.valid) {\r\n            const clientData = this.clientForm.value;\r\n            this.loading = true;\r\n            this.clientsService.createClient(clientData).subscribe(\r\n                (response) => {\r\n                    this.loading = false;\r\n                    console.log(\"Éxito al crear cliente: \", response);\r\n                    this.submit();\r\n                },\r\n                (error) => {\r\n                    this.loading = false;\r\n                    console.error(\"Error al crear cliente: \", this.toastr.error);\r\n                    const errorMessage = error.error ? error.error : 'Ocurrió un error al crear el cliente.';\r\n                    this.toastr.error(errorMessage, 'Error');\r\n                }\r\n            );\r\n        } else {\r\n            this.toastr.error('Por favor, complete todos los campos correctamente.', 'Error de validación', { progressBar: true, timeOut: 3000 });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    validateNameSimbolAndNumber(control: FormControl) {\r\n        const nameValue = control.value;\r\n        const combinedPattern = /^[\\wáéíóúñÑ´\\s]+$/;\r\n\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                if (combinedPattern.test(nameValue)) {\r\n                    const numberCount = (nameValue.match(/\\d/g) || []).length;\r\n                    if (numberCount <= 1) {\r\n                        resolve(null); // Válido\r\n                    } else {\r\n                        resolve({ invalidName: true }); // No válido\r\n                    }\r\n                } else {\r\n                    resolve({ invalidName: true }); // No válido\r\n                }\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public checkEmailAvailability(): void {\r\n        if (this.email_client && this.email_client instanceof AbstractControl) {\r\n            this.validateEmail(this.email_client).then((result) => {\r\n                if (result) {\r\n                    this.email_client.setErrors(result);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    validateEmail(control: AbstractControl) {\r\n        const email = control.value.toLowerCase();\r\n        const validDomains = ['gmail.com', 'hotmail.com', 'outlook.com', 'yahoo.com'];\r\n        const domain = email.split('@')[1];\r\n\r\n        if (!email) {\r\n            return Promise.resolve(null); // Correo vacío es válido\r\n        }\r\n\r\n        if (validDomains.includes(domain)) {\r\n            return new Promise((resolve) => {\r\n                if (!control.value) {\r\n                    resolve(null);\r\n                } else {\r\n                    this.clientsService.checkEmailAvailability(control.value).subscribe(\r\n                        (isAvailable) => {\r\n                            if (isAvailable) {\r\n                                resolve(null); // El correo es válido y está disponible\r\n                            } else {\r\n                                resolve({ emailTaken: true }); // El correo no está disponible\r\n                            }\r\n                        },\r\n                        (error) => {\r\n                            resolve({ emailTaken: true });\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n        } else {\r\n            return Promise.resolve({ invalidDomain: true }); // No es un correo válido en el dominio permitido\r\n        }\r\n    }\r\n\r\n    public checkCedulaAvailability(): void {\r\n        if (this.nit_or_id_client && this.nit_or_id_client instanceof AbstractControl) {\r\n            this.validateCedulaAvailability(this.nit_or_id_client).then((result) => {\r\n                if (result) {\r\n                    this.nit_or_id_client.setErrors(result);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    validateCedulaAvailability(control: AbstractControl) {\r\n        return new Promise((resolve) => {\r\n            if (!control.value) {\r\n                resolve(null);\r\n            } else {\r\n                this.clientsService.checkCedulaAvailability(control.value).subscribe(\r\n                    (isAvailable) => {\r\n                        if (isAvailable) {\r\n                            resolve(null);\r\n                        } else {\r\n                            resolve({ cedulaTaken: true });\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        resolve({ cedulaTaken: true });\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    saveClientsChanges(id: number, updatedData: any) {\r\n        this.clientsService.updateClient(id, updatedData).subscribe(\r\n            (response) => {\r\n                this.loading = false;\r\n                this.submit();\r\n            },\r\n            (error) => {\r\n                this.loading = false;\r\n                console.error(\"Error al crear cliente: \", this.toastr.error);\r\n                const errorMessage = error.error ? error.error : 'Ocurrió un error al crear el cliente.';\r\n                this.toastr.error(errorMessage, 'Error');\r\n            }\r\n        );\r\n    }\r\n\r\n    public submitClient(): void {\r\n        if (this.viewMode == 'new') {\r\n            this.createClient();\r\n        } else if (this.viewMode == 'edit') {\r\n            this.saveChanges();\r\n        }\r\n    }\r\n\r\n    saveChanges() {\r\n        console.log('editar')\r\n        if (this.clientForm.valid) {\r\n            const id = Number(this.id); // Convierte el ID a número\r\n            const updatedData = {\r\n                nit_or_id_client: this.nit_or_id_client.value,\r\n                name_client: this.clientForm.get('name_client').value,\r\n                email_client: this.email_client.value,\r\n                address_client: this.clientForm.get('address_client').value,\r\n                phone_client: this.clientForm.get('phone_client').value,\r\n            };\r\n            this.saveClientsChanges(id, updatedData);\r\n        } else {\r\n            this.toastr.error('Por favor, complete todos los campos correctamente.', 'Error de validación', { progressBar: true, timeOut: 3000 });\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.router.navigateByUrl('/clients');\r\n    }\r\n\r\n    submit() {\r\n        if (!this.loading) {\r\n            this.loading = true;\r\n            setTimeout(() => {\r\n                this.loading = false;\r\n                this.toastr.success('Cliente registrado con éxito.', 'Éxito', { progressBar: true, timeOut: 3000 });\r\n                setTimeout(() => {\r\n                    this.router.navigateByUrl('/clients');\r\n                }, 3000);\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    setViewMode() {\r\n        const currentRoute = this.router.url;\r\n        if (currentRoute.includes('/new')) {\r\n            this.viewMode = 'new';\r\n        } else if (currentRoute.includes('/edit/')) {\r\n            this.viewMode = 'edit';\r\n        } else if (currentRoute.includes('/print/')) {\r\n            this.viewMode = 'print';\r\n        }\r\n    }\r\n\r\n\r\n\r\n    print() {\r\n        if (window) {\r\n            window.print();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    get nit_or_id_client () {\r\n        return this.clientForm.get('nit_or_id_client');\r\n    }\r\n\r\n    get nombre() {\r\n        return this.clientForm.get('name_client');\r\n    }\r\n\r\n    get email_client() {\r\n        return this.clientForm.get('email_client');\r\n    }\r\n\r\n    get last_name_client () {\r\n        return this.clientForm.get('last_name_client');\r\n    }\r\n\r\n    get phone_client () {\r\n        return this.clientForm.get('phone_client');\r\n    }\r\n\r\n    get address_client () {\r\n        return this.clientForm.get('address_client');\r\n    }\r\n\r\n    get state_client () {\r\n        return this.clientForm.get('state_client');\r\n    }\r\n}","<div class=\"breadcrumb\">\r\n    <h1 *ngIf=\"viewMode === 'new'\">Registrar cliente</h1>\r\n    <h1 *ngIf=\"viewMode === 'edit'\">Editar cliente</h1>\r\n    <h1 *ngIf=\"viewMode === 'print'\">Ver detalle de cliente</h1>\r\n    <ul>\r\n    <li><a [routerLink]=\"['/clients']\">Clientes</a></li>\r\n    <li *ngIf=\"viewMode === 'new'\">Registrar cliente</li>\r\n    <li *ngIf=\"viewMode === 'edit'\">Editar cliente</li>\r\n    <li *ngIf=\"viewMode === 'print'\">Ver detalle de cliente</li>\r\n    </ul>\r\n</div>\r\n\r\n\r\n<div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n<!-- Contenido común a todas las vistas -->\r\n<div class=\"form-container\">\r\n<!-- Vista de crear clientes -->\r\n<div class=\"row\">\r\n<div class=\"col-md-12\">\r\n    <div class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n            <div class=\"card-title mb-3\">Formulario de clientes</div>\r\n            <form [formGroup]=\"clientForm\" (ngSubmit)=\"submitClient()\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 form-group mb-3\">\r\n                        <label for=\"nit_or_id_client\">Cédula o nit <span class=\"text-danger\">*</span></label>\r\n                        <input type=\"text\"  class=\"form-control\" id=\"nit_or_id_client\" formControlName=\"nit_or_id_client\" (change)=\"checkCedulaAvailability()\">\r\n                        <div *ngIf=\"clientForm.get('nit_or_id_client').touched && clientForm.get(' nit_or_id_client').hasError('required')\" class=\"error-message\">\r\n                            El campo cédula o nit es obligatorio.\r\n                        </div>\r\n                        <div *ngIf=\"clientForm.get('nit_or_id_client').hasError('minlength')\" class=\"error-message\">\r\n                            La cédula debe contener minimo 7 caracteres.\r\n                        </div>\r\n                        <div *ngIf=\"clientForm.get('nit_or_id_client').hasError('maxlength')\" class=\"error-message\">\r\n                            El campo cédula no puede superar los 10 caracteres.\r\n                        </div>\r\n                        <div *ngIf=\"clientForm.get('nit_or_id_client').hasError('pattern')\" class=\"error-message\">\r\n                            El campo cédula debe contener solo números.\r\n                        </div>\r\n                        <div *ngIf=\"clientForm.get('nit_or_id_client').hasError('cedulaTaken')\" class=\"error-message\">La cédula ya está en uso.</div>\r\n                    </div>\r\n                    <div class=\"col-md-6 form-group mb-3\">\r\n                        <label for=\"name_client\">Nombre<span class=\"text-danger\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"name_client\" formControlName=\"name_client\" required>\r\n                        <div *ngIf=\"clientForm.get('name_client').touched && clientForm.get('name_client').hasError('required')\"class=\"error-message\">\r\n                            El campo nombre es obligatorio.\r\n                        </div>\r\n                        <div *ngIf=\"clientForm.get('name_client').hasError('invalidName')\"class=\"error-message\">\r\n                            El campo nombre no puede tener simbolos y solo puede tener 1  número.\r\n                        </div>\r\n                        \r\n                        <div *ngIf=\"clientForm.get('name_client').hasError('maxlength')\"class=\"error-message\">\r\n                            El campo nombre no puede superar los 80 caracteres.\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6 form-group mb-3\">\r\n                        <label for=\"last_name_client\">Apellidos cliente<span class=\"text-danger\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"last_name_client\" formControlName=\"last_name_client\" required>\r\n                       \r\n                    </div>\r\n                    \r\n                    \r\n                    <div class=\"col-md-6 form-group mb-3\">\r\n                        <label for=\"email_client\">Correo<span class=\"text-danger\">*</span></label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"email_client\" formControlName=\"email_client\" (change)=\"checkEmailAvailability\">\r\n                        <div *ngIf=\"clientForm.get('email_client').touched && clientForm.get('email_client').hasError('required')\"class=\"error-message\">\r\n                            El campo correo es obligatorio.\r\n                        </div>\r\n                        <div *ngIf=\"clientForm.get('email_client').hasError('email')\"class=\"error-message\">\r\n                            El campo correo debe ser un formato de correo electrónico válido.\r\n                        </div>\r\n                        <div *ngIf=\"clientForm.get('email_client').hasError('invalidDomain')\" class=\"error-message\">El dominio del correo no es válido.</div>\r\n                        <div *ngIf=\"clientForm.get('email_client').hasError('maxlength')\"class=\"error-message\">\r\n                            El campo correo no puede superar los 80 caracteres.\r\n                        </div>\r\n                        <div *ngIf=\"clientForm.get('email_client').hasError('emailTaken')\"class=\"error-message\">El correo electrónico ya está en uso.</div>\r\n\r\n                    </div>\r\n                    \r\n                    <div class=\"col-md-6 form-group mb-3\">\r\n                        <label for=\"address_client\">Dirección<span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" id=\"address_client\" formControlName=\"address_client\" required>\r\n                        <div *ngIf=\"clientForm.get('address_client').touched && clientForm.get('address_client').hasError('required')\"class=\"error-message\">\r\n                            El campo dirección es obligatorio.\r\n                        </div>\r\n                        <div *ngIf=\"clientForm.get('address_client').hasError('maxlength')\"class=\"error-message\">\r\n                            El campo dirección no puede superar los 80 carácteres.\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div class=\"col-md-6 form-group mb-3\">\r\n                        <label for=\"phone_client\">Teléfono<span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" id=\"phone_client\" formControlName=\"phone_client\" required>\r\n                        <div *ngIf=\"clientForm.get('phone_client').touched && clientForm.get('phone_client').hasError('required')\"class=\"error-message\">\r\n                            El campo teléfono es obligatorio.\r\n                        </div>\r\n                        <div *ngIf=\"clientForm.get('phone_client').hasError('maxlength')\"class=\"error-message\">\r\n                            El campo teléfono no puede superar los 80 caracteres.\r\n                        </div>\r\n                        <div *ngIf=\"clientForm.get('phone_client').hasError('pattern')\"class=\"error-message\">\r\n                            El campo teléfono debe seguir un formato válido.\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"viewMode == 'print'\" class=\"col-md-6 form-group mb-3\">\r\n                        <label for=\"state_client\">Estado<span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" id=\"state_client\" placeholder=\"state_client\" formControlName=\"state_client\">\r\n                    </div>\r\n\r\n                    \r\n              \r\n                    \r\n                    <div class=\"form-group text-right\" style=\"text-align: right;\">\r\n                        <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"cancel()\">Cancelar</button>\r\n                        <btn-loading *ngIf=\"viewMode !== 'print'\" btnClass=\"btn btn-primary m-1 custom-button\" [loading]=\"loading\"> {{viewMode == 'new' ? 'Registrar cliente' : 'Editar cliente' }} \r\n                        </btn-loading>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { ClientsService } from 'src/app/shared/services/client.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-client-list',\r\n    templateUrl: './client-list-component.html',\r\n    styleUrls: ['./client-list-component.scss']\r\n})\r\nexport class ClientListComponent implements OnInit {\r\n    loading: boolean;\r\n    searchControl: UntypedFormControl = new UntypedFormControl();\r\n    listClients: any[];\r\n    filteredClients: any[];\r\n    pageSize: number = 10;\r\n    currentPage: number = 1;\r\n    modalAbierto = false;\r\n\r\n\r\n    constructor(\r\n        private _clientService: ClientsService,\r\n        private modalService: NgbModal,\r\n        private toastr: ToastrService,) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getClients();\r\n        this.searchControl.valueChanges\r\n            .pipe(debounceTime(200))\r\n            .subscribe(value => {\r\n                this.filterData(value);\r\n            });\r\n    }\r\n\r\n\r\n\r\n    getClients() {\r\n        this._clientService.getAllClients().subscribe(data => {\r\n            this.listClients = data.sort((a, b) => a.id_client - b.id_client);\r\n            this.filteredClients = [...this.listClients];\r\n        }, error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    filterData(value: string) {\r\n        if (value) {\r\n            value = value.toLowerCase();\r\n        } else {\r\n            this.filteredClients = [...this.listClients];\r\n            return;\r\n        }\r\n\r\n        this.filteredClients = this.listClients.filter(client => {\r\n            const cedulaMatch = client.nit_or_id_client.toLowerCase().includes(value);\r\n            const nombreMatch = client.name_client.toLowerCase().includes(value);\r\n            const correoMatch = client.email_client.toLowerCase().includes(value);\r\n            const estadoMatch = client.state_client.toLowerCase().includes(value);\r\n\r\n            return cedulaMatch || nombreMatch || correoMatch || estadoMatch;\r\n        });\r\n\r\n        this.currentPage = 1;\r\n    }\r\n\r\n    @ViewChild('deleteConfirmModal', { static: true }) deleteConfirmModal: any;\r\n\r\n    openModal(idClient: number) {\r\n        if (!this.modalAbierto) {\r\n            this.modalAbierto = true;\r\n            this.modalService.open(this.deleteConfirmModal, { centered: true }).result.then(\r\n                (result) => {\r\n                    if (result === 'Ok') {\r\n                        this._clientService.clientChangeStatus(idClient).subscribe(\r\n                            (data) => {\r\n                                this.loading = false;\r\n                                // this.toastr.success('Cambio de estado realizado con éxito.', 'Proceso Completado', { progressBar: true, timeOut: 2000 });\r\n                                // console.log(data);\r\n\r\n                                setTimeout(() => {\r\n                                    location.reload();\r\n                                });\r\n                            },\r\n                            (error) => {\r\n                                this.loading = false;\r\n                                this.toastr.error('Fallo al realizar el cambio de estado.', 'Error', { progressBar: true, timeOut: 2000 });\r\n                                console.error('Error al cambiar de estado:', error);\r\n                            }\r\n                        );\r\n                    } else if (result === 'Cancel') {\r\n                        this.modalAbierto = false;\r\n                        setTimeout(() => {\r\n                            location.reload();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                (reason) => {\r\n                    this.modalAbierto = false;\r\n                    location.reload();\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n}","<div class=\"\">\r\n    <div class=\"breadcrumb\">\r\n        <h1>Clientes</h1>\r\n        <ul>\r\n            <li><a href=\"#\">Ventas</a></li>\r\n            <li>Clientes</li>\r\n        </ul>\r\n        </div>\r\n    \r\n        <div class=\"separator-breadcrumb border-top\"></div>\r\n        <div class=\"col-md-12 mb-3\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <button class=\"btn btn-primary float-right\" [routerLink]=\"['/clients/new']\">Crear nuevo Cliente</button>\r\n                </div>\r\n                <div class=\"col-md-6 d-flex justify-content-end\">\r\n                    <input _ngcontent-vet-c167=\"\" id=\"search\" placeholder=\"Buscar cliente\" type=\"text\"\r\n                        class=\"form-control  ng-valid ng-touched ng-dirty\" [formControl]=\"searchControl\"\r\n                        style=\"width: 50%;\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n\r\n        <div class=\"row mb-3\">\r\n        \r\n        <div class=\"col-md-12\">\r\n            <div class=\"card o-hidden\">\r\n                <ngx-datatable style=\"height: 460px;\" class=\"material fullscreen\" [columnMode]=\"'force'\" [headerHeight]=\"50\"\r\n                [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\"[rows]=\"filteredClients\">\r\n                <ngx-datatable-column name=\"nit_or_id_client\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"100\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Cédula o nit\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.nit_or_id_client }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"name_client\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"200\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Nombres\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.name_client}} {{ row.last_name_client}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"email_client\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"180\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Correo\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.email_client }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n               \r\n                <ngx-datatable-column name=\"state_client\"  [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"20\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Estado\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.state_client}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n\r\n                <ngx-datatable-column name=\"actions\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"50\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Acciones\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        <button class=\"btn btn-dark m-1\" [routerLink]=\"['/clients/print', row.id_client]\">\r\n                            <i class=\"i-Eye\"></i>\r\n                        </button>\r\n                        <button class=\"btn btn-info m-1\" [routerLink]=\"['/clients/edit', row.id_client]\">\r\n                            <i class=\"i-Pen-4\"></i>\r\n                        </button>\r\n                        <label class=\"switch switch-success me-3\" (click)=\"openModal(row.id_client)\">\r\n                            <input type=\"checkbox\" [checked]=\"row.state_client === 'Activo'\">\r\n                            <span class=\"slider\"></span>\r\n                        </label>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                </ngx-datatable>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #deleteConfirmModal let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-title\">Cambiar estado cliente</h4>\r\n\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p><strong>¿Está seguro de cambiar el estado del cliente?</strong></p>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-danger ml-2\"\r\n            (click)=\"modal.dismiss('cancel')\">Cancelar</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-primary -m1 custom-button\"\r\n            (click)=\"modal.close('Ok')\">Aceptar</button>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ClientDetailComponent } from './client-detail/client-detail.component';\r\nimport { ClientListComponent } from './client-list/client-list-component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ClientListComponent\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: ClientDetailComponent\r\n    },\r\n    {\r\n        path: 'edit/:id_client',\r\n        component: ClientDetailComponent\r\n    },\r\n    {\r\n        path: 'print/:id_client',\r\n        component: ClientDetailComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ClientRoutingModule { }","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { ClientDetailComponent } from './client-detail/client-detail.component';\r\nimport { ClientListComponent } from './client-list/client-list-component';\r\nimport { ClientRoutingModule } from './client-routing.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        NgxDatatableModule,\r\n        ReactiveFormsModule,\r\n        SharedComponentsModule,\r\n        NgbModule,\r\n        ClientRoutingModule\r\n    ],\r\n    declarations: [ClientDetailComponent,  ClientListComponent]\r\n})\r\nexport class ClientModule { }","export class ClientFormModel {\r\n    nit_or_id_client: string;\r\n    name_client: string;\r\n    last_name_client: string;\r\n    email_client: string;\r\n    phone_client: string;\r\n    address_client: string;\r\n    state_client: string;\r\n    \r\n\r\n    constructor(response) {\r\n        this.nit_or_id_client = response.nit_or_id_client;\r\n        this.name_client = response.name_client;\r\n        this.last_name_client = response.last_name_client;\r\n        this.email_client = response.email_client;\r\n        this.phone_client = response.phone_client;\r\n        this.address_client = response.address_client;\r\n        this.state_client = response.state_client;\r\n    }\r\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}