{"version":3,"file":"src_app_views_categorias_category_module_ts.js","mappings":"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","sources":["./src/app/shared/services/category.service.ts","./src/app/views/categorias/category-detail/category-detail.component.ts","./src/app/views/categorias/category-detail/category-detail.component.html","./src/app/views/categorias/category-list/category-list.component.ts","./src/app/views/categorias/category-list/category-list.component.html","./src/app/views/categorias/category-routing.module.ts","./src/app/views/categorias/category.module.ts","./src/app/views/categorias/models/category.model.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoriesService {\r\n\r\n  //Url de la api\r\n  url ='https://api-cosmetic-w32d.onrender.com/api/categories';\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n\r\n  // Trae toas las categories\r\n  getAllCategory():Observable<any>{\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  //Ruta para verificar si ya esxite una categoria\r\n  getValidateCategoryExist(name_category: boolean): Observable<boolean>{\r\n    return this.http.get<boolean>(`${this.url}-validate-categoryexist?name_category=${name_category}`);\r\n  }\r\n\r\n\r\n//Ruta para crear una categoria\r\n\r\n  createCategory(categoriaData: any):Observable<any>{\r\n    return this.http.post(this.url, categoriaData)\r\n  }\r\n\r\n\r\n\r\n\r\n  getCategoryById(id: number): Observable<any> {\r\n    if (isNaN(id) || id <= 0) {\r\n      // Aquí puedes manejar el caso en el que 'id' no sea un número válido o sea negativo.\r\n      return throwError('ID de categoría no válido');\r\n    }\r\n  \r\n    return this.http.get<any>(`${this.url}/${id}`);\r\n  }\r\n  \r\n\r\n\r\n  CategoryChangeStatus(id: any): Observable<any> {\r\n    return this.http.put(this.url + '/change-status' + id, {});\r\n  }\r\n\r\n\r\n\r\n\r\n  categoryPut(id: any):Observable<any>{\r\n    return this.http.put(this.url + '/' + id, {});\r\n  }\r\n\r\n\r\n  updateCategory(id: number, updatedData: any): Observable<any> {\r\n    return this.http.put(`${this.url}/${id}`, updatedData).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        console.error('Error en la solicitud:', error);\r\n        return throwError('Ocurrió un error al actualizar la categoría. Por favor, inténtalo de nuevo.');\r\n      })\r\n    );\r\n  }\r\n  \r\n\r\n}","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl,UntypedFormGroup, UntypedFormBuilder, UntypedFormArray  } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CategoriesService } from 'src/app/shared/services/category.service';\r\nimport { Utils } from 'src/app/shared/utils';\r\nimport { CategoryFormMode } from '../models/category.model';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-category-print',\r\n  templateUrl: './category-detail.component.html',\r\n  styleUrls: ['./category-detail.component.scss']\r\n})\r\nexport class CategoryDetailComponent implements OnInit {\r\n  categoryForm: FormGroup;\r\n  categoryFormEdit: UntypedFormGroup;\r\n  categoryFormSub: Subscription;\r\n  loading: boolean;\r\n  categoryExists: boolean;\r\n  viewMode: 'new' | 'edit' | 'print' = 'new';\r\n  saving: boolean;\r\n  categories: any = {};\r\n  isNew: boolean;\r\n  id: string;\r\n  categoryData: CategoryFormMode;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private categoriesService: CategoriesService,\r\n\r\n  ) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id_category'];\r\n    console.log(this.id);\r\n    this.isNew = !this.id;\r\n    this.setViewMode();\r\n    this.inicializateForm(Number(this.id));\r\n}\r\n\r\nprivate inicializateForm(id: number): void {\r\n    this.categoryForm = this.formBuilder.group({\r\n        id_category: [''],\r\n        name_category:['',[ Validators.required, Validators.maxLength(80),Validators.pattern('^[a-zA-ZáéíóúñÑ ]+$'),], (control) => this.validateCategoryExist(control)],\r\n        observation_category: ['', [Validators.required,Validators.maxLength(100)]],\r\n        state_category: [],\r\n        creation_date_category: []\r\n    });\r\n\r\n    if (this.viewMode == 'print') {\r\n        this.categoryForm.disable();\r\n    }\r\n\r\n    if (this.viewMode == 'edit') {\r\n        this.stateCategory.disable();\r\n        this.dateCategory.disable();\r\n    }\r\n\r\n    if (this.viewMode != 'new') {\r\n        this.getCategoryById(id);\r\n    }\r\n\r\n}\r\n\r\n\r\nprivate getCategoryById(id: number): void {\r\n  this.loading = true;\r\n  this.categoriesService.getCategoryById(id).subscribe({\r\n      next: (response: any) => {\r\n          this.categoryData = new CategoryFormMode(response);\r\n          this.setDataCategory();\r\n      },\r\n      error: (err) => {\r\n          console.log('err', err);\r\n          this.loading = false;\r\n      },\r\n      complete: () => {\r\n          this.loading = false;\r\n      },\r\n  });\r\n}\r\n\r\nprivate setDataCategory(): void {\r\n  if (this.categoryData) {\r\n      this.idCategory.setValue(this.categoryData.id_category)\r\n      this.categoryForm.setValue(this.categoryData)\r\n      this.dateCategory.setValue(Utils.ngbDateToDate(this.categoryForm.value.creation_date_category));\r\n \r\n  }\r\n}\r\n\r\ncreateCategory() {\r\n  if (this.categoryForm.valid) {\r\n      const categoryData = this.categoryForm.value;\r\n      this.loading = true;\r\n      this.categoriesService.createCategory(categoryData).subscribe(\r\n          (response) => {\r\n              this.loading = false;\r\n              console.log(\"Éxito al crear caetgoría: \", response);\r\n              this.submit();\r\n          },\r\n          (error) => {\r\n              this.loading = false;\r\n              console.error(\"Error al crear caetgoría: \", this.toastr.error);\r\n              const errorMessage = error.error ? error.error : 'Ocurrió un error al crear el caetgoría.';\r\n              this.toastr.error(errorMessage, 'Error');\r\n          }\r\n      );\r\n  } else {\r\n      this.toastr.error('Por favor, complete todos los campos correctamente.', 'Error de validación', { progressBar: true, timeOut: 3000 });\r\n  }\r\n}\r\n\r\n\r\nvalidateCategoryExist(control: FormControl) {\r\n  return new Promise((resolve) => {\r\n    if (!control.value) {\r\n      resolve(true);\r\n    } else {\r\n      this.categoriesService.getValidateCategoryExist(control.value).subscribe(\r\n        (isAvailable) => {\r\n          this.categoryExists = isAvailable;\r\n          resolve(this.categoryExists ? { categoryTaken: true } : null);\r\n        },\r\n        (error) => {\r\n          \r\n          this.categoryExists = true;\r\n          resolve({ categoryTaken: true });\r\n        }\r\n      );\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n  saveCategoryChanges(id: number, updatedData: any) {\r\n    this.categoriesService.updateCategory(id, updatedData).subscribe(\r\n        (response) => {\r\n            this.loading = false;\r\n            this.submit();\r\n        },\r\n        (error) => {\r\n            this.loading = false;\r\n            console.error(\"Error al crear caetgoría: \", this.toastr.error);\r\n            const errorMessage = error.error ? error.error : 'Ocurrió un error al crear el caetgoría.';\r\n            this.toastr.error(errorMessage, 'Error');\r\n        }\r\n    );\r\n  }\r\n\r\n\r\npublic submitCategory(): void {\r\n  if (this.viewMode == 'new') {\r\n      this.createCategory();\r\n  } else if (this.viewMode == 'edit') {\r\n      this.saveChanges();\r\n  }\r\n}\r\n\r\n\r\nsaveChanges() {\r\n  console.log('editar');\r\n\r\n  if (this.categoryForm.valid) {\r\n    const id = Number(this.id); // Convierte el ID a número\r\n    const updatedData = {\r\n      id_category: this.idCategory.value,\r\n      name_category: this.categoryForm.get('name_category').value,\r\n      observation_category: this.categoryForm.get('observation_category').value,\r\n    };\r\n    this.saveCategoryChanges(id, updatedData);\r\n  } else {\r\n    this.toastr.error('Por favor, complete todos los campos correctamente.', 'Error de validación', { progressBar: true, timeOut: 3000 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n  cancel() {\r\n\r\n    this.router.navigateByUrl('/categories');\r\n  }\r\n\r\n\r\n      \r\n  submit() {\r\n  if (!this.loading) {\r\n    this.loading = true;\r\n    setTimeout(() => {\r\n        this.loading = false;\r\n        this.toastr.success('Categoría registrada con éxito.', 'Éxito', { progressBar: true, timeOut: 3000 });\r\n        setTimeout(() => {\r\n            this.router.navigateByUrl('/categories');\r\n        }, 3000);\r\n    }, 3000);\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n    setViewMode() {\r\n      const currentRoute = this.router.url;\r\n      if (currentRoute.includes('/new')) {\r\n        this.viewMode = 'new'; // Corrige la ortografía de 'new-category'\r\n      } else if (currentRoute.includes('/edit/')) {\r\n        this.viewMode = 'edit'; // Corrige la ortografía de 'edit-category'\r\n\r\n      } else if (currentRoute.includes('/detail/')) {\r\n        this.viewMode = 'print';\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  print() {\r\n    if (window) {\r\n        window.print();\r\n    }\r\n  }\r\n\r\n  get idCategory() {\r\n    return this.categoryForm.get('id_category');\r\n  }\r\n\r\n  get stateCategory() {\r\n    return this.categoryForm.get('state_category');\r\n  }\r\n\r\n get dateCategory() {\r\n  return this.categoryForm.get('creation_date_category');\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","<div class=\"breadcrumb\">\r\n  <h1 *ngIf=\"viewMode === 'new'\">Registrar Categoría</h1>\r\n  <h1 *ngIf=\"viewMode === 'edit'\">Editar Categoría</h1>\r\n  <h1 *ngIf=\"viewMode === 'print'\">Ver Detalle de Categoría</h1>\r\n  <ul>\r\n    <li><a [routerLink]=\"['/categories']\">Categorías</a></li>\r\n    <li *ngIf=\"viewMode === 'new'\">Registrar Categoría</li>\r\n    <li *ngIf=\"viewMode === 'edit'\">Editar Categoría</li>\r\n    <li *ngIf=\"viewMode === 'print'\">Ver Detalle de Categoría</li>\r\n  </ul>\r\n</div>\r\n\r\n<div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n<!-- Contenido común a todas las vistas -->\r\n<div class=\"form-container\">\r\n  <!-- Vista de crear empleados -->\r\n  <div class=\"row\">\r\n    <div class=\"col-md-8\"> <!-- Cambiado a 8 columnas -->\r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-title mb-3\">Formulario de Categorías</div>\r\n          <form [formGroup]=\"categoryForm\" (ngSubmit)=\"submitCategory()\">\r\n            \r\n              <div class=\"col-md-6 form-group mb-3\">\r\n                <label for=\"name_category\">Nombre de Categoría<span class=\"text-danger\">*</span></label>\r\n                <input type=\"text\" class=\"form-control\" id=\"name_category\" placeholder=\"Nombre de empleado\" formControlName=\"name_category\" required>\r\n                <div *ngIf=\"categoryForm.get('name_category').touched && categoryForm.get('name_category').hasError('required')\"class=\"error-message\">\r\n                  El campo Nombre es obligatorio.\r\n              </div>\r\n              <div *ngIf=\"categoryForm.get('name_category').hasError('pattern')\"class=\"error-message\">\r\n                  El campo Nombre no puede tener tener numeros ni simbolos.\r\n              </div>\r\n              \r\n              <div *ngIf=\"categoryForm.get('name_category').hasError('maxlength')\"class=\"error-message\">\r\n                  El campo Nombre no puede superar los 80 caracteres.\r\n              </div>\r\n\r\n              <div *ngIf=\"viewMode === 'new'\">\r\n                <div *ngIf=\"categoryExists\" class=\"error-message\">El nombre de categoría ya existe.</div>\r\n              </div>\r\n              \r\n              </div>\r\n\r\n              <div *ngIf=\"viewMode == 'print'\" class=\"col-md-6 form-group mb-3\">\r\n                <label for=\"state_category\">Estado<span class=\"text-danger\">*</span></label>\r\n                <input class=\"form-control\" id=\"state_category\" placeholder=\"Fecha de Creacion\" formControlName=\"state_category\">\r\n                <!-- Resto del código para el campo de estado -->\r\n              </div>\r\n\r\n              <div class=\"col-md-6 form-group mb-3\">\r\n                <label for=\"observation\">Observación</label>\r\n                <textarea class=\"form-control\" id=\"observation_category\" placeholder=\"Observación\" formControlName=\"observation_category\"></textarea>\r\n                <div *ngIf=\"categoryForm.get('observation_category').hasError('maxlength')\"class=\"error-message\">\r\n                  El campo Observación no puede superar los 100 caracteres.\r\n              </div>\r\n              </div>\r\n\r\n              <div class=\"form-group text-right\" style=\"text-align: right;\">\r\n                <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"cancel()\">Cancelar</button>\r\n                <btn-loading *ngIf=\"viewMode !== 'print'\" btnClass=\"btn btn-primary m-1 custom-button\" [loading]=\"loading\">\r\n                  {{viewMode == 'new' ? 'Registrar Categoría' : 'Editar Categoría'}}\r\n                </btn-loading>\r\n              </div>\r\n            \r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CategoriesService } from 'src/app/shared/services/category.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { UntypedFormControl } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-category-list',\r\n    templateUrl: './category-list.component.html',\r\n    styleUrls: ['./category-list.component.scss']\r\n})\r\nexport class CategoryListComponent {\r\n    loading: boolean;\r\n    listCategories: any[] = [];\r\n    modalAbierto = false;\r\n    searchControl: UntypedFormControl = new UntypedFormControl();\r\n    filteredCategories: any[] = [];\r\n    currentPage = 1; // Propiedad para rastrear la página actual\r\n    itemsPerPage = 6; // El número de filas por página\r\n    countLabel: number;\r\n\r\n    constructor(\r\n        private _categoriesService: CategoriesService,\r\n        private modalService: NgbModal,\r\n        private toastr: ToastrService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getCategories();\r\n    }\r\n\r\n    getCategories() {\r\n        this._categoriesService.getAllCategory().subscribe(\r\n            (data) => {\r\n                this.listCategories = data;\r\n                console.log(this.listCategories);\r\n                this.sortListCategoriesById();\r\n                this.adjustListCategories();\r\n            },\r\n            (error) => {\r\n                console.error('Error al obtener Categorías:', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    @ViewChild(DatatableComponent)\r\n    table: DatatableComponent;\r\n\r\n    // Luego, puedes actualizar el valor visual de count según tus necesidades\r\n    actualizarCountLabel() {\r\n        this.countLabel = this.listCategories.length;\r\n    }\r\n\r\n    adjustListCategories() {\r\n        const totalRows = this.listCategories.length;\r\n        const remainingRows = 6 - (totalRows % 6);\r\n\r\n        for (let i = 0; i < remainingRows; i++) {\r\n            this.listCategories.push({}); // Agrega filas vacías\r\n        }\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    sortListCategoriesById() {\r\n        this.listCategories.sort((a, b) => {\r\n            if (a.id_categoríae < b.id_categoríae) {\r\n                return -1;\r\n            }\r\n            if (a.id_categoríae > b.id_categoríae) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    loadData() {\r\n        const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n        let endIndex = startIndex + this.itemsPerPage;\r\n\r\n        const totalPages = Math.ceil(this.listCategories.length / this.itemsPerPage);\r\n\r\n        if (this.currentPage === totalPages) {\r\n            const remainingRows = this.listCategories.length % this.itemsPerPage;\r\n            if (remainingRows > 0) {\r\n                endIndex = startIndex + remainingRows;\r\n            }\r\n        }\r\n\r\n        // Ajusta endIndex para que sea el próximo número divisible por 6\r\n        const rowsToAdd = 6 - (endIndex % 6);\r\n        endIndex += rowsToAdd;\r\n\r\n        this.filteredCategories = this.listCategories.slice(startIndex, endIndex);\r\n\r\n        console.log('load data charged');\r\n    }\r\n\r\n    onPageChange(event: any) {\r\n        console.log('onPageChange event:', event);\r\n        this.currentPage = event.offset + 1;\r\n        this.loadData();\r\n    }\r\n\r\n    @ViewChild('deleteConfirmModal', { static: true }) deleteConfirmModal: any;\r\n\r\n    openModal(idRole: number) {\r\n        this._categoriesService.getCategoryById(idRole).subscribe(\r\n            (data) => {\r\n                if (!this.modalAbierto) {\r\n                    this.modalAbierto = true;\r\n                    this.modalService.open(this.deleteConfirmModal, { centered: true }).result.then(\r\n                        (result) => {\r\n                            if (result === 'Ok') {\r\n                                this._categoriesService.CategoryChangeStatus(idRole).subscribe(\r\n                                    (data) => {\r\n                                        this.loading = false;\r\n                                        this.toastr.success('Cambio de estado realizado con éxito.', 'Proceso Completado', {\r\n                                            progressBar: true,\r\n                                            timeOut: 2000\r\n                                        });\r\n                                        setTimeout(() => {\r\n                                            location.reload();\r\n                                        }, 2000);\r\n                                    },\r\n                                    (error) => {\r\n                                        this.loading = false;\r\n                                        this.toastr.error('Fallo al realizar el cambio de estado.', 'Error', {\r\n                                            progressBar: true,\r\n                                            timeOut: 2000\r\n                                        });\r\n                                        console.error('Error al cambiar de estado:', error);\r\n                                    }\r\n                                );\r\n                            } else if (result === 'Cancel') {\r\n                                this.modalAbierto = false;\r\n                                setTimeout(() => {\r\n                                    location.reload();\r\n                                }, 2000);\r\n                            }\r\n                        },\r\n                        (reason) => {\r\n                            this.modalAbierto = false;\r\n                            location.reload();\r\n                        }\r\n                    );\r\n                }\r\n            },\r\n            (error) => {\r\n                console.error('Error al obtener el categoría:', error);\r\n            }\r\n        );\r\n    }\r\n}","<div class=\"breadcrumb\">\r\n    <h1>Categorías de Productos</h1>\r\n    <ul>\r\n        <li><a [routerLink]=\"['/purchases']\">Compras</a></li>\r\n        <li><a [routerLink]=\"['/categories']\">Categorías</a></li>\r\n    </ul>\r\n</div>\r\n\r\n<div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n<div class=\"row mb-3\">\r\n    <div class=\"col-md-12 mb-3 d-flex justify-content-between align-items-center\">\r\n        <div class=\"col-md-4\">\r\n            <div class=\"form-group\">\r\n                <button class=\"btn btn-primary\" [routerLink]=\"['/categories/new']\">Crear Categoría</button>\r\n            </div>\r\n        \r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div class=\"form-group\">\r\n                <input id=\"category\" placeholder=\"Buscar Categoría\" [formControl]=\"searchControl\" class=\"form-control\"\r\n                    type=\"category\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-12\">\r\n        <div class=\"card o-hidden\">\r\n            <ngx-datatable class=\"material fullscreen\" \r\n            style=\"height: 460px;\" \r\n            [columnMode]=\"'force'\"\r\n             [headerHeight]=\"50\"\r\n                [footerHeight]=\"50\"\r\n                 [rowHeight]=\"60\" \r\n                 [scrollbarV]=\"true\" \r\n                 [rows]=\"listCategories\" \r\n                 [externalPaging]=\"true\"\r\n                [count]=\"listCategories.length\"\r\n                 [limit]=\"itemsPerPage\" \r\n                 [offset]=\"(currentPage - 1) * itemsPerPage\"\r\n                (page)=\"onPageChange($event)\">\r\n                <ngx-datatable-column name=\"name_category\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"450\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Nombre \r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\">\r\n                        <ng-container *ngIf=\"row && row.id_category\">\r\n                            {{ rowIndex + 1 }}. {{ row.name_category }}\r\n                        </ng-container>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"state_category\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"350\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Estado \r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        <ng-container *ngIf=\"row && row.id_category\">\r\n                            {{ row.state_category }}\r\n                        </ng-container>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"actions\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"350\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Acciones\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        <ng-container *ngIf=\"row && row.id_category\">\r\n                            <button class=\"btn btn-dark m-1\" [routerLink]=\"['/categories/detail', row.id_category]\">\r\n                                <i class=\"i-Eye\"></i>\r\n                            </button>\r\n                            <button class=\"btn btn-info m-1\" [routerLink]=\"['/categories/edit', row.id_category]\">\r\n                                <i class=\"i-Pen-4\"></i>\r\n                            </button>\r\n                            <label class=\"switch switch-success me-3\" (click)=\"openModal(row.id_category)\">\r\n                                <input type=\"checkbox\" [checked]=\"row.state_category === 'Activo'\" [ngClass]=\"{'switch-success me-3': row.state_category === 'Activo', 'switch-danger me-3': row.state_category === 'Inactivo'}\">\r\n                                <span class=\"slider\"></span>\r\n                            </label>\r\n                            \r\n                            \r\n                            \r\n                        </ng-container>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n            </ngx-datatable>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #deleteConfirmModal let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-title\">Cambiar Estado de la Categoría</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\"\r\n            (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p><strong>¿Está seguro de que desea cambiar el estado de  esta categoría?</strong></p>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\"\r\n            (click)=\"modal.dismiss('cancel')\">Cancelar</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\"\r\n            (click)=\"modal.close('Ok')\">Aceptar</button>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CategoryDetailComponent } from './category-detail/category-detail.component';\r\nimport { CategoryListComponent } from './category-list/category-list.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CategoryListComponent\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: CategoryDetailComponent\r\n    },\r\n    {\r\n        path: 'edit/:id_category',\r\n        component: CategoryDetailComponent\r\n    },\r\n    {\r\n        path: 'detail/:id_category',\r\n        component: CategoryDetailComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CategoryRoutingModule { }\r\n","import { CommonModule,DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms'; // Importa solo ReactiveFormsModule\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { CategoryDetailComponent } from './category-detail/category-detail.component';\r\nimport { CategoryListComponent } from './category-list/category-list.component';\r\nimport { CategoryRoutingModule } from './category-routing.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule, // Solo importa ReactiveFormsModule\r\n    SharedComponentsModule,\r\n    NgbModule,\r\n    CategoryRoutingModule\r\n\r\n    \r\n  ],\r\n  declarations: [CategoryDetailComponent, CategoryListComponent],\r\n  providers: [DatePipe]\r\n})\r\nexport class CategoryModule { }\r\n","export class CategoryFormMode {\r\n    id_category: string;\r\n    name_category: string;\r\n    observation_category: string;\r\n    state_category: string;\r\n    creation_date_category: Date\r\n\r\n    constructor(response){\r\n        this.name_category = response.name_category;\r\n        this.creation_date_category = new Date(response.creation_date_category);\r\n        this.state_category = response.state_category;\r\n        this.id_category = response.id_category;\r\n        this.observation_category = response.observation_category;\r\n\r\n    }\r\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}