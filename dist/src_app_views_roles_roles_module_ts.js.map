{"version":3,"file":"src_app_views_roles_roles_module_ts.js","mappings":";;;;;;;;;;;;;;;;;AAOO,MAAM,YAAY;IAGvB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF1B,QAAG,GAAG,kDAAkD,CAAC;IAGrD,CAAC;IAEL,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,WAAW,CAAC,EAAO;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,UAAU,CAAC,QAAa;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,CAAC,CAAC;IAClD,CAAC;IAED,QAAQ,CAAC,EAAO,EAAE,QAAa;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,UAAU,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,EAAO;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,gBAAgB,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7D,CAAC;;wEAzBU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;;;ACJkD;AAKH;;;;;;;;;ICLjE,qEAA+B;IAAA,wEAAa;IAAA,4DAAK;;;IACjD,qEAAgC;IAAA,qEAAU;IAAA,4DAAK;;;IAC/C,qEAAiC;IAAA,6EAAkB;IAAA,4DAAK;;;IAGtD,qEAA+B;IAAA,wEAAa;IAAA,4DAAK;;;IACjD,qEAAgC;IAAA,qEAAU;IAAA,4DAAK;;;IAC/C,qEAAiC;IAAA,6EAAkB;IAAA,4DAAK;;;IAI5D,yEAKC;IAEG,oEAAgD;IAClD,4DAAM;;;;IAaQ,4EASE;IAJA,sTAAU,6FAA2B,KAAC;IALxC,4DASE;;;IAHA,qHAAyB;;;;IAI3B,4EAQE;IAHA,oTAAS,6FAA2B,KAAC;IALvC,4DAQE;;;IAFA,sJAAwD;;;IAI5D,0EAAwD;IAC/B,uDAAsB;IAAA,4DAAI;;;IAA1B,0DAAsB;IAAtB,yFAAsB;;;;IAMzC,sEAeC;IAES,uDAAY;IAAA,4DAAO;IACzB,4EAKE;IADA,4WAAU,mGAA6B,KAAC;IAJ1C,4DAKE;IACF,sEAA+B;IACjC,4DAAQ;;;;IARA,0DAAY;IAAZ,2EAAY;IAGhB,0DAAiC;IAAjC,kGAAiC;;;IAU7C,0EAA2D;IAClC,gGAAgC;IAAA,4DAAI;;;IAWzD,kFAIG;IAAA,oEAAS;IAAA,4DACX;;;IAFC,oFAAmB;;;IAGrB,kFAIG;IAAA,qEAAU;IAAA,4DACZ;;;IAFC,oFAAmB;;;;;;IAxFvC,sEAA6D;IAKtB,4EAAiB;IAAA,4DAAM;IACpD,2EAAsD;IAAxB,ySAAY,4EAAU,KAAC;IACnD,yEAAiB;IAEW,0EAAc;IAAA,4DAAQ;IAC9C,8HASE;IACF,8HAQE;IACJ,4DAAM;IACN,0HAEM;IACN,0EAAuB;IAGO,wEAAO;IAAA,4DAAM;IACrC,0HA0BM;IACR,4DAAM;IAGV,0HAEM;IACN,0EAAuB;IAMjB,oEACF;IAAA,4DAAS;IACT,sEAA+B;IAC/B,0IAKC;IACD,0IAKC;IACH,4DAAM;;;IArFN,0DAAuB;IAAvB,uFAAuB;IAKpB,0DAA+C;IAA/C,yHAA+C;IAU/C,0DAA0B;IAA1B,6FAA0B;IASH,0DAA0B;IAA1B,6FAA0B;IAUjD,0DAWP;IAXO,0IAWP;IAgB8B,0DAA6B;IAA7B,gGAA6B;IAOnD,0DAAyB;IAAzB,8IAAyB;IAMxB,0DAAwB;IAAxB,2FAAwB;IAMxB,0DAAyB;IAAzB,4FAAyB;;AD1FvC,MAAM,oBAAoB;IA2B/B,YACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,EAAe,EACf,aAA2B,EAC3B,MAAqB;QALrB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QACf,kBAAa,GAAb,aAAa,CAAc;QAC3B,WAAM,GAAN,MAAM,CAAe;QA/B/B,sBAAiB,GAAY,KAAK,CAAC;QAEnC,aAAQ,GAA6B,KAAK,CAAC;QAE3C,qBAAgB,GAAW,EAAE,CAAC;QAE9B,UAAK,GAAQ,EAAE,CAAC;QAKhB,4BAAuB,GAAY,KAAK,CAAC;QACzC,yBAAoB,GAAY,KAAK,CAAC;QACtC,SAAI,GAAS;YACX,SAAS,EAAE,EAAE;YACb,UAAU,EAAE,QAAQ;YACpB,YAAY,EAAE,EAAE;SACjB,CAAC;QACF,qBAAgB,GAAG,EAAE,CAAC;QACtB,aAAQ,GAAG;YACT,SAAS,EAAE,EAAE;YACb,UAAU,EAAE,QAAQ;YACpB,YAAY,EAAE,EAAE;SACjB,CAAC;QAUA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,cAAc,CAAC,IAAS,EAAE;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YACV,SAAS,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;YACzB,UAAU,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;SAC3B,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QACrC,IAAI,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;aAAM,IAAI,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC1C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;SACxB;aAAM,IAAI,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC5C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;SACzB;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QACrC,IAAI,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YACxE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAC/C,CAAC,IAAI,EAAE,EAAE;gBACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC/C,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;gBAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACjC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACR,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACjC,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAED,qBAAqB,CAAC,MAAc;QAClC,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC1C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAClD,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,MAAM,CAC1B,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACpD;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpC;QACD,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,CAAC,uBAAuB,GAAG,WAAW,GAAG,CAAC,CAAC;QAC/C,IAAI,WAAW,GAAG,CAAC,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;SAC3C;IACH,CAAC;IAED,mBAAmB,CAAC,KAAU;QAC5B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC,CAAC,+BAA+B;QAElE,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAEtC,oCAAoC;QACpC,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,gBAAgB,GAAG,qDAAqD,CAAC;YAC9E,OAAO;SACR;QAED,+BAA+B;QAC/B,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,gBAAgB,GAAG,+CAA+C,CAAC;YACxE,OAAO;SACR;QAED,8BAA8B;QAC9B,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,gBAAgB,GAAG,8CAA8C,CAAC;YACvE,OAAO;SACR;QAED,+BAA+B;QAC/B,IAAI,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YAChC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,gBAAgB,GAAG,+CAA+C,CAAC;YACxE,OAAO;SACR;QAED,oEAAoE;QACpE,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,UAAU,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAED,QAAQ;QACN,IACE,IAAI,CAAC,gBAAgB,CAAC,MAAM,IAAI,CAAC;YACjC,IAAI,CAAC,uBAAuB,IAAI,IAAI;YACpC,IAAI,CAAC,oBAAoB,IAAI,IAAI,EACjC;YACA,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,2BAA2B,EAAE,OAAO,EAAE;oBACtD,WAAW,EAAE,IAAI;iBAClB,CAAC,CAAC;aACJ;iBAAM,IACL,IAAI,CAAC,gBAAgB,CAAC,MAAM,IAAI,CAAC;gBACjC,IAAI,CAAC,uBAAuB,IAAI,IAAI,EACpC;gBACA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oCAAoC,EAAE,OAAO,EAAE;oBAC/D,WAAW,EAAE,IAAI;iBAClB,CAAC,CAAC;aACJ;SACF;aAAM;YACL,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,EAAE;gBAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;iBAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAE;gBAClC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;SACF;IACH,CAAC;IAED,UAAU;QACR,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACpD,CAAC,IAAI,EAAE,EAAE;gBACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,EAAE,oBAAoB,EAAE;wBACjE,WAAW,EAAE,IAAI;wBACjB,OAAO,EAAE,IAAI;qBACd,CAAC,CAAC;oBACH,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACnC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACX,CAAC,EAAE,IAAI,CAAC,CAAC;YACX,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACR,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB,EAAE,OAAO,EAAE;oBACnD,WAAW,EAAE,IAAI;iBAClB,CAAC,CAAC;gBACH,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;YACjD,CAAC,CACF,CAAC;SACH;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,QAAQ;QACN,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAClC,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC5B,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC3B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC3D,CAAC,IAAI,EAAE,EAAE;oBACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBAErB,0EAA0E;oBAC1E,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;oBAEtD,IAAI,CAAC,MAAM,CAAC,OAAO,CACjB,4BAA4B,EAC5B,oBAAoB,EACpB;wBACE,WAAW,EAAE,IAAI;wBACjB,OAAO,EAAE,IAAI;qBACd,CACF,CAAC;oBAEF,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACnC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACX,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;oBACR,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,OAAO,EAAE;wBACxD,WAAW,EAAE,IAAI;qBAClB,CAAC,CAAC;oBACH,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;gBACtD,CAAC,CACF,CAAC;aACH;iBAAM;gBACL,OAAO,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;aAC5D;SACF;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;;wFApPU,oBAAoB;kHAApB,oBAAoB;QCnBjC,yEAAwB;QACtB,8GAAiD;QACjD,8GAA+C;QAC/C,8GAAwD;QACxD,qEAAI;QAC+B,gEAAK;QAAA,4DAAI;QAC1C,8GAAiD;QACjD,8GAA+C;QAC/C,gHAAwD;QAC1D,4DAAK;QAGP,kHASM;QAEN,oHAmGM;;QAzHC,0DAAwB;QAAxB,wFAAwB;QACxB,0DAAyB;QAAzB,yFAAyB;QACzB,0DAA0B;QAA1B,0FAA0B;QAEtB,0DAAyB;QAAzB,6IAAyB;QAC3B,0DAAwB;QAAxB,wFAAwB;QACxB,0DAAyB;QAAzB,yFAAyB;QACzB,0DAA0B;QAA1B,0FAA0B;QAKhC,0DAEA;QAFA,sJAEA;QAQG,0DAAqD;QAArD,yHAAqD;;;;;;;;;;;;;;;;;;;;;;;;ACvBc;AAIZ;AACT;;;;;;;;;;;ICKpD,yEAAsD;IAElD,oEAAgD;IAClD,4DAAM;;;IAmDM,2EACF;;;IAOE,wEAAyC;IACvC,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,6FACF;;;IAFA,sJAEe;;;IAFA,4FAAwB;;;IAYvC,2EACF;;;IAME,wEAAyC;IACvC,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,8FACF;;;IAFA,sJAEe;;;IAFA,4FAAwB;;;IAWG,qEAAS;;;;IAajD,6EAOC;IACC,mEAAuB;IACzB,4DAAS;;;IAHP,8JAA2C;;;;IAI7C,4EAOC;IADC,6ZAAS,gHAAsC,KAAC;IAEhD,uEAGE;IAEJ,4DAAQ;;;IAHJ,0DAAuC;IAAvC,oGAAuC;;;;IA3B7C,wEAAyC;IACvC,6EAGC;IACC,mEAAqB;IACvB,4DAAS;IACT,0JASS;IACT,wJAaQ;IACV,qEAAe;;;IA5BX,0DAA6C;IAA7C,8JAA6C;IAK5C,0DAGD;IAHC,uIAGD;IAOC,0DAGD;IAHC,uIAGD;;;IArBJ,sJA+Be;;;IA/BA,4FAAwB;;;;;IA5FrD,sEAAwC;IAQ5B,4EACF;IAAA,4DAAS;IAGb,0EAAsB;IAElB,uEAME;IACJ,4DAAM;IAGV,2EAAuB;IAejB,+SAAQ,sFAAoB,KAAC;IAE7B,4FAKC;IACC,wIAEc;IACd,wIASc;IAChB,4DAAuB;IACvB,4FAKC;IACC,wIAEc;IACd,wIAQc;IAChB,4DAAuB;IACvB,4FAKC;IACC,wIAAmE;IACnE,wIAqCc;IAChB,4DAAuB;;;IAtHS,0DAA6B;IAA7B,8IAA6B;IAU3D,0DAA6B;IAA7B,6FAA6B;IAY/B,0DAAsB;IAAtB,+EAAsB;IAcpB,0DAAoB;IAApB,6EAAoB;IAoBpB,0DAAoB;IAApB,6EAAoB;IAmBpB,0DAAoB;IAApB,6EAAoB;;;;IAmD9B,0EAA0B;IACiB,iFAAsB;IAAA,4DAAK;IACpE,6EAMC;IADC,yRAAS,4EAAc,aAAa,CAAC,KAAC;IAEtC,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAG3C,0EAAwB;IAEZ,uDAAkB;IAAA,4DAAS;IAGvC,2EAA0B;IAItB,0RAAS,4EAAc,QAAQ,CAAC,KAAC;IAEjC,sEACF;IAAA,4DAAS;IACT,8EAKC;IADC,0RAAS,0EAAY,IAAI,CAAC,KAAC;IAE3B,qEACF;IAAA,4DAAS;;;IAlBC,0DAAkB;IAAlB,oFAAkB;;ADvJzB,MAAM,kBAAkB;IAa7B,YACU,aAA2B,EAC3B,YAAsB,EACtB,MAAqB,EACrB,EAAc;QAHd,kBAAa,GAAb,aAAa,CAAc;QAC3B,iBAAY,GAAZ,YAAY,CAAU;QACtB,WAAM,GAAN,MAAM,CAAe;QACrB,OAAE,GAAF,EAAE,CAAY;QAfxB,sBAAiB,GAAY,KAAK,CAAC;QACnC,cAAS,GAAU,EAAE,CAAC;QACtB,iBAAY,GAAG,KAAK,CAAC;QACrB,kBAAa,GAAuB,IAAI,8DAAkB,EAAE,CAAC;QAC7D,kBAAa,GAAU,EAAE,CAAC;QAC1B,gBAAW,GAAG,CAAC,CAAC,CAAC,2CAA2C;QAC5D,iBAAY,GAAG,CAAC,CAAC,CAAC,gCAAgC;QAElD,gBAAW,GAAY,KAAK,CAAC;IAQ1B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CACxC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAC9C,UAAU,CAAC,GAAG,EAAE;gBACd,MAAM,gBAAgB,GACpB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;gBACrD,IAAI,gBAAgB,EAAE;oBACpB,MAAM,SAAS,GAAG,gBAAgB,CAAC,SAAS,CAAC;oBAC7C,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;oBACnE,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,SAAS,CAAC,CAAC;iBACtD;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,2CAA2C;YACxE,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,CACF,CAAC;IACJ,CAAC;IAKD,eAAe;QACb,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACxC,MAAM,aAAa,GAAG,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QAE1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACzB;QAED,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3B,sBAAsB;YACtB,MAAM,UAAU,GACd,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YAEtE,wDAAwD;YACxD,IAAI,UAAU,KAAK,CAAC,EAAE;gBACpB,OAAO,UAAU,CAAC;aACnB;YAED,iDAAiD;YACjD,OAAO,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gEAAgE;IAChE,aAAa,CAAC,KAAa;QACzB,iEAAiE;QACjE,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,QAAQ;QACN,MAAM,UAAU,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QAC9D,IAAI,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAE9C,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAExE,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,EAAE;YACnC,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;YAChE,IAAI,aAAa,GAAG,CAAC,EAAE;gBACrB,QAAQ,GAAG,UAAU,GAAG,aAAa,CAAC;aACvC;SACF;QAED,iEAAiE;QACjE,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;QACrC,QAAQ,IAAI,SAAS,CAAC;QAEtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAEhE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IACnC,CAAC;IAED,YAAY,CAAC,KAAU;QACrB,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAID,SAAS,CAAC,MAAc,EAAE,SAAiB;QACzC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAE1B,IAAI,SAAS,IAAI,QAAQ,EAAE;YACzB,IAAI,CAAC,YAAY,GAAG,gDAAgD,CAAC;SACtE;aAAM,IAAI,SAAS,IAAI,UAAU,EAAE;YAClC,IAAI,CAAC,YAAY,GAAG,6CAA6C,CAAC;SACnE;QAED,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAC9C,CAAC,IAAI,EAAE,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,YAAY;qBACd,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;qBACjD,MAAM,CAAC,IAAI,CACV,CAAC,MAAM,EAAE,EAAE;oBACT,IAAI,MAAM,KAAK,IAAI,EAAE;wBACnB,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;wBACrC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,SAAS,CACnD,CAAC,IAAI,EAAE,EAAE;4BACP,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;4BAC1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CACjB,uCAAuC,EACvC,oBAAoB,EACpB;gCACE,WAAW,EAAE,IAAI;gCACjB,OAAO,EAAE,IAAI;6BACd,CACF,CAAC;4BACF,UAAU,CAAC,GAAG,EAAE;gCACd,IAAI,CAAC,QAAQ,EAAE,CAAC;gCAChB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;gCAC/B,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;4BACvC,CAAC,EAAE,IAAI,CAAC,CAAC;wBACX,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;4BACR,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;4BAC/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,wCAAwC,EACxC,OAAO,EACP;gCACE,WAAW,EAAE,IAAI;gCACjB,OAAO,EAAE,IAAI;6BACd,CACF,CAAC;4BACF,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;wBACtD,CAAC,CACF,CAAC;qBACH;yBAAM,IAAI,MAAM,KAAK,QAAQ,EAAE;wBAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;wBAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;wBAChB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;qBAChC;gBACH,CAAC,EACD,CAAC,MAAM,EAAE,EAAE;oBACT,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;gBACjC,CAAC,CACF,CAAC;aACL;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;YACjD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,MAAc;QAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC;QACpE,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC;SACxE;IACH,CAAC;;oFAlMU,kBAAkB;gHAAlB,kBAAkB;kEAkDlB,uEAAkB;;;;;;;QC9D/B,yEAAwB;QAClB,gEAAK;QAAA,4DAAK;QACd,qEAAI;QACE,0EAAe;QAAA,4DAAK;QACxB,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QAIlB,oEAAmD;QAEnD,8GAIM;QAEN,kHAkIM;QAEN,6MAmCc;;QA7KR,0DAAuB;QAAvB,uFAAuB;QAMvB,0DAAgC;QAAhC,gGAAgC;;;;;;;;;;;;;;;;;;;;ACfiB;AACgB;AACM;;;AAE7E,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAkB;KAChC;IACD;QACI,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,sFAAoB;KAClC;IACD;QACI,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,sFAAoB;KAClC;IACD;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,sFAAoB;KAClC;CACJ;AAMM,MAAM,kBAAkB;;oFAAlB,kBAAkB;+GAAlB,kBAAkB;mHAHjB,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEb,kBAAkB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;ACzBqB;AAEa;AACW;AAChB;AACW;AACL;AAC+B;AACf;;AActE,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;4GAVpB,yDAAY;QACZ,uDAAW;QACX,uEAAkB;QAClB,+DAAmB;QACnB,sGAAsB;QACtB,iEAAS;QACT,qEAAkB;mIAIT,WAAW,mBAFN,gFAAkB,EAAE,sFAAoB,aARtD,yDAAY;QACZ,uDAAW;QACX,uEAAkB;QAClB,+DAAmB;QACnB,sGAAsB;QACtB,iEAAS;QACT,qEAAkB","sources":["./src/app/shared/services/roles.service.ts","./src/app/views/roles/roles-detail/roles-detail.component.ts","./src/app/views/roles/roles-detail/roles-detail.component.html","./src/app/views/roles/roles-list/roles-list.component.ts","./src/app/views/roles/roles-list/roles-list.component.html","./src/app/views/roles/roles-routing.module.ts","./src/app/views/roles/roles.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs-compat';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RolesService {\r\n\r\n  url = 'https://api-cosmetic-w32d.onrender.com/api/roles';\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getAllRoles(): Observable<any> {\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  getRoleById(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id);\r\n  }\r\n\r\n  createRole(roleData: any): Observable<any> {\r\n    return this.http.post(this.url + '/', roleData);\r\n  }\r\n\r\n  editRole(id: any, roleData: any): Observable<any> {\r\n    return this.http.put(this.url + '/update/' + id, roleData);\r\n  }\r\n\r\n  updateRoleStatus(id: any): Observable<any> {\r\n    return this.http.put(this.url + '/updateStatus/' + id, {});\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { UntypedFormGroup, UntypedFormBuilder } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { RolesService } from \"src/app/shared/services/roles.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { FormBuilder, FormGroup, Validator } from \"@angular/forms\";\r\nimport { viewport } from \"@popperjs/core\";\r\n\r\ninterface Role {\r\n  name_role: string;\r\n  state_role: string;\r\n  modules_role: string[];\r\n}\r\n@Component({\r\n  selector: \"app-roles-detail\",\r\n  templateUrl: \"./roles-detail.component.html\",\r\n  styleUrls: [\"./roles-detail.component.scss\"],\r\n})\r\nexport class RolesDetailComponent implements OnInit {\r\n  loading: boolean;\r\n  showLoadingScreen: boolean = false;\r\n  formBasic: FormGroup;\r\n  viewMode: \"new\" | \"edit\" | \"print\" = \"new\";\r\n  id: string;\r\n  nameErrorMessage: string = \"\";\r\n  isNew: boolean;\r\n  roles: any = {};\r\n  rolesForm: UntypedFormGroup;\r\n  rolesFormSub: Subscription;\r\n  subTotal: number;\r\n  saving: boolean;\r\n  showErrorMessageModules: boolean = false;\r\n  showErrorMessageName: boolean = false;\r\n  role: Role = {\r\n    name_role: \"\",\r\n    state_role: \"Activo\",\r\n    modules_role: [],\r\n  };\r\n  selected_modules = [];\r\n  new_role = {\r\n    name_role: \"\",\r\n    state_role: \"Activo\",\r\n    modules_role: [],\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private _rolesService: RolesService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.formBasic = this.formBuilder.group({});\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params[\"id_role\"];\r\n    this.isNew = !this.id;\r\n    this.buildRolesForm(this.roles);\r\n    this.setViewMode();\r\n    this.getRole();\r\n  }\r\n\r\n  buildRolesForm(i: any = {}) {\r\n    this.rolesForm = this.fb.group({\r\n      id: [i.id],\r\n      nombreRol: [i.nombre_rol],\r\n      modulosRol: [i.nombre_rol],\r\n    });\r\n  }\r\n\r\n  setViewMode() {\r\n    const currentRoute = this.router.url;\r\n    if (currentRoute.includes(\"/new\")) {\r\n      this.viewMode = \"new\";\r\n    } else if (currentRoute.includes(\"/edit/\")) {\r\n      this.viewMode = \"edit\";\r\n    } else if (currentRoute.includes(\"/detail/\")) {\r\n      this.viewMode = \"print\";\r\n    }\r\n  }\r\n\r\n  getRole() {\r\n    this.showLoadingScreen = true;\r\n    const currentRoute = this.router.url;\r\n    if (currentRoute.includes(\"/edit/\") || currentRoute.includes(\"/detail/\")) {\r\n      this.id = this.route.snapshot.params[\"id_role\"];\r\n      console.log(this.id);\r\n      this._rolesService.getRoleById(this.id).subscribe(\r\n        (data) => {\r\n          this.role = data;\r\n          this.selected_modules = this.role.modules_role;\r\n          this.new_role.name_role = this.role.name_role;\r\n          console.log(this.selected_modules);\r\n          console.log(this.role);\r\n          this.showLoadingScreen = false;\r\n        },\r\n        (error) => {\r\n          console.error(\"Error al obtener rol:\", error);\r\n          this.showLoadingScreen = false;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleModuleSelection(module: string) {\r\n    if (this.selected_modules.includes(module)) {\r\n      this.selected_modules = this.selected_modules.filter(\r\n        (item) => item !== module\r\n      );\r\n      this.new_role.modules_role = this.selected_modules;\r\n    } else {\r\n      this.selected_modules.push(module);\r\n    }\r\n    const moduleCount = this.selected_modules.length;\r\n    console.log(moduleCount);\r\n    this.showErrorMessageModules = moduleCount < 1;\r\n    if (moduleCount < 1) {\r\n      console.log(this.showErrorMessageModules);\r\n    }\r\n  }\r\n\r\n  handleNameSelection(event: any) {\r\n    this.showErrorMessageName = false; // Reiniciar el estado de error\r\n\r\n    const inputValue = event.target.value;\r\n\r\n    // Validar la cantidad de caracteres\r\n    if (inputValue.length < 5) {\r\n      this.showErrorMessageName = true;\r\n      this.nameErrorMessage = \"El nombre del rol debe tener al menos 5 caracteres.\";\r\n      return;\r\n    }\r\n\r\n    // Validar que no haya espacios\r\n    if (/\\s/.test(inputValue)) {\r\n      this.showErrorMessageName = true;\r\n      this.nameErrorMessage = \"El nombre del rol no puede contener espacios.\";\r\n      return;\r\n    }\r\n\r\n    // Validar que no haya números\r\n    if (/\\d/.test(inputValue)) {\r\n      this.showErrorMessageName = true;\r\n      this.nameErrorMessage = \"El nombre del rol no puede contener números.\";\r\n      return;\r\n    }\r\n\r\n    // Validar que no haya símbolos\r\n    if (/[^a-zA-Z]/.test(inputValue)) {\r\n      this.showErrorMessageName = true;\r\n      this.nameErrorMessage = \"El nombre del rol no puede contener símbolos.\";\r\n      return;\r\n    }\r\n\r\n    // Si todas las validaciones pasan, actualizar el valor en tu objeto\r\n    this.new_role.name_role = inputValue;\r\n    console.log(this.new_role.name_role);\r\n  }\r\n\r\n  saveData() {\r\n    if (\r\n      this.selected_modules.length == 0 ||\r\n      this.showErrorMessageModules == true ||\r\n      this.showErrorMessageName == true\r\n    ) {\r\n      if (this.showErrorMessageName == true) {\r\n        this.toastr.error(\"Nombre de rol incorrecto.\", \"Error\", {\r\n          progressBar: true,\r\n        });\r\n      } else if (\r\n        this.selected_modules.length == 0 ||\r\n        this.showErrorMessageModules == true\r\n      ) {\r\n        this.toastr.error(\"Seleccione como mínimo un permiso.\", \"Error\", {\r\n          progressBar: true,\r\n        });\r\n      }\r\n    } else {\r\n      if (this.viewMode == \"new\") {\r\n        this.createRole();\r\n      } else if (this.viewMode == \"edit\") {\r\n        this.editRole();\r\n      }\r\n    }\r\n  }\r\n\r\n  createRole() {\r\n    const currentRoute = this.router.url;\r\n    this.new_role.modules_role = this.selected_modules;\r\n    console.log(currentRoute);\r\n    if (currentRoute.includes(\"/new\")) {\r\n      console.log(this.new_role);\r\n      this._rolesService.createRole(this.new_role).subscribe(\r\n        (data) => {\r\n          this.loading = true;\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.toastr.success(\"Rol creado con éxito.\", \"Proceso Completado\", {\r\n              progressBar: true,\r\n              timeOut: 3000,\r\n            });\r\n            setTimeout(() => {\r\n              this.router.navigate([\"/roles\"]);\r\n            }, 3000);\r\n          }, 3000);\r\n        },\r\n        (error) => {\r\n          this.loading = false;\r\n          this.toastr.error(\"Fallo al crear el rol.\", \"Error\", {\r\n            progressBar: true,\r\n          });\r\n          console.error(\"Error al crear el rol:\", error);\r\n        }\r\n      );\r\n    }\r\n    this.loading = true;\r\n  }\r\n\r\n  editRole() {\r\n    const currentRoute = this.router.url;\r\n    console.log(currentRoute);\r\n    if (currentRoute.includes(\"/edit\")) {\r\n      if (this.id && this.new_role) {\r\n        this.new_role.modules_role = this.selected_modules;\r\n        console.log(this.selected_modules);\r\n        console.log(this.new_role);\r\n        this._rolesService.editRole(this.id, this.new_role).subscribe(\r\n          (data) => {\r\n            this.loading = false;\r\n\r\n            // Asegúrate de que la respuesta del servicio contiene los datos esperados\r\n            console.log(\"Respuesta del servicio editRole:\", data);\r\n\r\n            this.toastr.success(\r\n              \"Rol actualizado con éxito.\",\r\n              \"Proceso Completado\",\r\n              {\r\n                progressBar: true,\r\n                timeOut: 3000,\r\n              }\r\n            );\r\n\r\n            setTimeout(() => {\r\n              this.router.navigate([\"/roles\"]);\r\n            }, 3000);\r\n          },\r\n          (error) => {\r\n            this.loading = false;\r\n            this.toastr.error(\"Fallo al actualizar el rol.\", \"Error\", {\r\n              progressBar: true,\r\n            });\r\n            console.error(\"Error al actualizar el rol:\", error);\r\n          }\r\n        );\r\n      } else {\r\n        console.error(\"ID o new_role no definidos correctamente.\");\r\n      }\r\n    }\r\n\r\n    this.loading = true;\r\n  }\r\n}\r\n","<div class=\"breadcrumb\">\r\n  <h1 *ngIf=\"viewMode === 'new'\">Registrar Rol</h1>\r\n  <h1 *ngIf=\"viewMode === 'edit'\">Editar Rol</h1>\r\n  <h1 *ngIf=\"viewMode === 'print'\">Ver Detalle de Rol</h1>\r\n  <ul>\r\n    <li><a [routerLink]=\"['/roles']\">Roles</a></li>\r\n    <li *ngIf=\"viewMode === 'new'\">Registrar Rol</li>\r\n    <li *ngIf=\"viewMode === 'edit'\">Editar Rol</li>\r\n    <li *ngIf=\"viewMode === 'print'\">Ver Detalle de Rol</li>\r\n  </ul>\r\n</div>\r\n\r\n<div\r\n  *ngIf=\"\r\n    showLoadingScreen == true && (viewMode == 'edit' || viewMode == 'print')\r\n  \"\r\n  class=\"loading-screen\"\r\n>\r\n  <div class=\"loading-content\">\r\n    <div class=\"spinner spinner-primary me-3\"></div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"showLoadingScreen == false || viewMode == 'new'\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-title mb-3\">Formulario de Rol</div>\r\n          <form [formGroup]=\"formBasic\" (ngSubmit)=\"saveData()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6 form-group mb-3\">\r\n                <label for=\"nombre_rol\">Nombre del Rol</label>\r\n                <input\r\n                  *ngIf=\"viewMode === 'edit' || viewMode === 'new'\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"nombre_rol\"\r\n                  (change)=\"handleNameSelection($event)\"\r\n                  [value]=\"role?.name_role\"\r\n                  [placeholder]=\"role?.name_role || 'Ingrese el nombre del rol'\"\r\n                  [readonly]=\"viewMode === 'print'\"\r\n                />\r\n                <input\r\n                  *ngIf=\"viewMode === 'print'\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"nombre_rol\"\r\n                  (touch)=\"handleNameSelection($event)\"\r\n                  [value]=\"role?.name_role || 'Ingrese el nombre del rol'\"\r\n                  [readonly]=\"viewMode === 'print'\"\r\n                />\r\n              </div>\r\n              <div class=\"error-message\" *ngIf=\"showErrorMessageName\">\r\n                <p class=\"text-danger\">{{ nameErrorMessage }}</p>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <div class=\"card mb-4\">\r\n                  <div class=\"card-body\">\r\n                    <div class=\"card-title\">Módulos</div>\r\n                    <div\r\n                      *ngFor=\"\r\n                        let modulo of [\r\n                          'Usuarios',\r\n                          'Categorías de Productos',\r\n                          'Productos',\r\n                          'Proveedores',\r\n                          'Compras',\r\n                          'Empleados',\r\n                          'Clientes',\r\n                          'Pedidos',\r\n                          'Ventas',\r\n                          'Comisiones'\r\n                        ]\r\n                      \"\r\n                    >\r\n                      <label class=\"checkbox checkbox-primary me-3\">\r\n                        <span>{{ modulo }}</span>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          [disabled]=\"viewMode === 'print'\"\r\n                          [checked]=\"role?.modules_role.includes(modulo)\"\r\n                          (change)=\"handleModuleSelection(modulo)\"\r\n                        />\r\n                        <span class=\"checkmark\"></span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"error-message\" *ngIf=\"showErrorMessageModules\">\r\n                <p class=\"text-danger\">Debe agregar al menos un módulo.</p>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <div class=\"d-flex justify-content-end\">\r\n                  <button\r\n                    class=\"btn btn-danger float-right\"\r\n                    [routerLink]=\"['/roles']\"\r\n                  >\r\n                    Volver\r\n                  </button>\r\n                  <div style=\"width: 10px\"></div>\r\n                  <btn-loading\r\n                    *ngIf=\"viewMode === 'new'\"\r\n                    btnClass=\"btn-primary\"\r\n                    [loading]=\"loading\"\r\n                    >Crear Rol</btn-loading\r\n                  >\r\n                  <btn-loading\r\n                    *ngIf=\"viewMode === 'edit'\"\r\n                    btnClass=\"btn-primary\"\r\n                    [loading]=\"loading\"\r\n                    >Editar Rol</btn-loading\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\r\nimport { RolesService } from \"src/app/shared/services/roles.service\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable\";\r\nimport { UntypedFormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-roles-list\",\r\n  templateUrl: \"./roles-list.component.html\",\r\n  styleUrls: [\"./roles-list.component.scss\"],\r\n})\r\nexport class RolesListComponent implements OnInit {\r\n  loading: boolean;\r\n  showLoadingScreen: boolean = false;\r\n  listRoles: any[] = [];\r\n  modalAbierto = false;\r\n  searchControl: UntypedFormControl = new UntypedFormControl();\r\n  filteredRoles: any[] = [];\r\n  currentPage = 1; // Propiedad para rastrear la página actual\r\n  itemsPerPage = 6; // El número de filas por página\r\n  originalRowCount: any;\r\n  activeLayer: boolean = false;\r\n  stateMessage: string;\r\n\r\n  constructor(\r\n    private _rolesService: RolesService,\r\n    private modalService: NgbModal,\r\n    private toastr: ToastrService,\r\n    private el: ElementRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getRoles();\r\n  }\r\n\r\n  getRoles() {\r\n    this.showLoadingScreen = true;\r\n    this._rolesService.getAllRoles().subscribe(\r\n      (data) => {\r\n        this.listRoles = data;\r\n        this.originalRowCount = this.listRoles.length;\r\n        setTimeout(() => {\r\n          const pageCountElement =\r\n            this.el.nativeElement.querySelector(\".page-count\");\r\n          if (pageCountElement) {\r\n            const innerText = pageCountElement.innerText;\r\n            pageCountElement.innerText = this.originalRowCount + \" registros.\";\r\n            console.log(\"Inner text de .page-count:\", innerText);\r\n          }\r\n        });\r\n        this.sortListRolesByState(); // Llama a la nueva función de ordenamiento\r\n        this.adjustListRoles();\r\n        this.showLoadingScreen = false;\r\n      },\r\n      (error) => {\r\n        console.error(\"Error al obtener roles:\", error);\r\n        this.showLoadingScreen = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  @ViewChild(DatatableComponent)\r\n  table: DatatableComponent;\r\n\r\n  adjustListRoles() {\r\n    const totalRows = this.listRoles.length;\r\n    const remainingRows = 6 - (totalRows % 6);\r\n\r\n    for (let i = 0; i < remainingRows; i++) {\r\n      this.listRoles.push({});\r\n    }\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  sortListRolesByState() {\r\n    this.listRoles.sort((a, b) => {\r\n      // Compara los estados\r\n      const stateOrder =\r\n        this.getStateOrder(a.state_role) - this.getStateOrder(b.state_role);\r\n\r\n      // Si los estados son diferentes, ordena según el estado\r\n      if (stateOrder !== 0) {\r\n        return stateOrder;\r\n      }\r\n\r\n      // Si los estados son iguales, ordena por id_role\r\n      return a.id_role - b.id_role;\r\n    });\r\n  }\r\n\r\n  // Función auxiliar para asignar un valor numérico a cada estado\r\n  getStateOrder(state: string): number {\r\n    // Asigna un valor numérico mayor a \"Activo\" y menor a \"Inactivo\"\r\n    return state === \"Activo\" ? 1 : state === \"Inactivo\" ? 2 : 0;\r\n  }\r\n\r\n  loadData() {\r\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n    let endIndex = startIndex + this.itemsPerPage;\r\n\r\n    const totalPages = Math.ceil(this.listRoles.length / this.itemsPerPage);\r\n\r\n    if (this.currentPage === totalPages) {\r\n      const remainingRows = this.listRoles.length % this.itemsPerPage;\r\n      if (remainingRows > 0) {\r\n        endIndex = startIndex + remainingRows;\r\n      }\r\n    }\r\n\r\n    // Ajusta endIndex para que sea el próximo número divisible por 6\r\n    const rowsToAdd = 6 - (endIndex % 6);\r\n    endIndex += rowsToAdd;\r\n\r\n    this.filteredRoles = this.listRoles.slice(startIndex, endIndex);\r\n\r\n    console.log(\"load data charged\");\r\n  }\r\n\r\n  onPageChange(event: any) {\r\n    console.log(\"onPageChange event:\", event);\r\n    this.currentPage = event.offset + 1;\r\n    this.loadData();\r\n  }\r\n\r\n  @ViewChild(\"deleteConfirmModal\", { static: true }) deleteConfirmModal: any;\r\n\r\n  openModal(idRole: number, stateRole: string) {\r\n    console.log(\"Open modal\");\r\n\r\n    if (stateRole == \"Activo\") {\r\n      this.stateMessage = \"¿Está seguro de que desea desactivar éste rol?\";\r\n    } else if (stateRole == \"Inactivo\") {\r\n      this.stateMessage = \"¿Está seguro de que desea activar éste rol?\";\r\n    }\r\n\r\n    this._rolesService.getRoleById(idRole).subscribe(\r\n      (data) => {\r\n        console.log(this.modalAbierto);\r\n        if (!this.modalAbierto) {\r\n          this.modalAbierto = true;\r\n          this.modalService\r\n            .open(this.deleteConfirmModal, { centered: true })\r\n            .result.then(\r\n              (result) => {\r\n                if (result === \"Ok\") {\r\n                  this.activeLayer = !this.activeLayer;\r\n                  this._rolesService.updateRoleStatus(idRole).subscribe(\r\n                    (data) => {\r\n                      this.modalAbierto = false;\r\n                      this.loading = false;\r\n                      this.toastr.success(\r\n                        \"Cambio de estado realizado con éxito.\",\r\n                        \"Proceso Completado\",\r\n                        {\r\n                          progressBar: true,\r\n                          timeOut: 1000,\r\n                        }\r\n                      );\r\n                      setTimeout(() => {\r\n                        this.getRoles();\r\n                        this.updateSwitchState(idRole);\r\n                        this.activeLayer = !this.activeLayer;\r\n                      }, 1000);\r\n                    },\r\n                    (error) => {\r\n                      this.updateSwitchState(idRole);\r\n                      this.loading = false;\r\n                      this.toastr.error(\r\n                        \"Fallo al realizar el cambio de estado.\",\r\n                        \"Error\",\r\n                        {\r\n                          progressBar: true,\r\n                          timeOut: 2000,\r\n                        }\r\n                      );\r\n                      console.error(\"Error al cambiar de estado:\", error);\r\n                    }\r\n                  );\r\n                } else if (result === \"Cancel\") {\r\n                  this.modalAbierto = false;\r\n                  this.getRoles();\r\n                  this.updateSwitchState(idRole);\r\n                }\r\n              },\r\n              (reason) => {\r\n                this.modalAbierto = false;\r\n                this.getRoles();\r\n                this.updateSwitchState(idRole);\r\n              }\r\n            );\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(\"Error al obtener el rol:\", error);\r\n        this.updateSwitchState(idRole);\r\n      }\r\n    );\r\n  }\r\n\r\n  updateSwitchState(idRole: number) {\r\n    const role = this.listRoles.find((role) => role.id_role === idRole);\r\n    if (role) {\r\n      role.state_role = role.state_role === \"Activo\" ? \"Inactivo\" : \"Activo\";\r\n    }\r\n  }\r\n}\r\n","<div class=\"breadcrumb\">\r\n  <h1>Roles</h1>\r\n  <ul>\r\n    <li>Configuraciones</li>\r\n    <li>Roles</li>\r\n  </ul>\r\n</div>\r\n\r\n<div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n<div *ngIf=\"showLoadingScreen\" class=\"loading-screen\">\r\n  <div class=\"loading-content\">\r\n    <div class=\"spinner spinner-primary me-3\"></div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"showLoadingScreen == false\">\r\n  <div class=\"row mb-3\">\r\n    <div\r\n      class=\"col-md-12 mb-3 d-flex justify-content-between align-items-center\"\r\n    >\r\n      <div class=\"col-md-4\">\r\n        <div class=\"form-group\">\r\n          <button class=\"btn btn-primary\" [routerLink]=\"['/roles/new']\">\r\n            Crear nuevo Rol\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"form-group\">\r\n          <input\r\n            id=\"role\"\r\n            placeholder=\"Buscar Rol\"\r\n            [formControl]=\"searchControl\"\r\n            class=\"form-control\"\r\n            type=\"role\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card o-hidden\">\r\n        <ngx-datatable\r\n          class=\"material fullscreen\"\r\n          style=\"height: 460px\"\r\n          [columnMode]=\"'force'\"\r\n          [headerHeight]=\"50\"\r\n          [footerHeight]=\"50\"\r\n          [rowHeight]=\"60\"\r\n          [scrollbarV]=\"true\"\r\n          [rows]=\"listRoles\"\r\n          [externalPaging]=\"true\"\r\n          [count]=\"listRoles.length\"\r\n          [limit]=\"itemsPerPage\"\r\n          [offset]=\"(currentPage - 1) * itemsPerPage\"\r\n          (page)=\"onPageChange($event)\"\r\n        >\r\n          <ngx-datatable-column\r\n            name=\"name_role\"\r\n            [resizeable]=\"false\"\r\n            [canAutoResize]=\"true\"\r\n            [minWidth]=\"450\"\r\n          >\r\n            <ng-template ngx-datatable-header-template>\r\n              Nombre del Rol\r\n            </ng-template>\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n              let-rowIndex=\"rowIndex\"\r\n            >\r\n              <ng-container *ngIf=\"row && row.id_role\">\r\n                {{ row.name_role }}\r\n              </ng-container>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column\r\n            name=\"state_role\"\r\n            [resizeable]=\"false\"\r\n            [canAutoResize]=\"true\"\r\n            [minWidth]=\"450\"\r\n          >\r\n            <ng-template ngx-datatable-header-template>\r\n              Estado del Rol\r\n            </ng-template>\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <ng-container *ngIf=\"row && row.id_role\">\r\n                {{ row.state_role }}\r\n              </ng-container>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column\r\n            name=\"actions\"\r\n            [resizeable]=\"false\"\r\n            [canAutoResize]=\"true\"\r\n            [minWidth]=\"450\"\r\n          >\r\n            <ng-template ngx-datatable-header-template> Acciones </ng-template>\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <ng-container *ngIf=\"row && row.id_role\">\r\n                <button\r\n                  class=\"btn btn-dark m-1\"\r\n                  [routerLink]=\"['/roles/detail', row.id_role]\"\r\n                >\r\n                  <i class=\"i-Eye\"></i>\r\n                </button>\r\n                <button\r\n                  *ngIf=\"\r\n                    row.name_role !== 'Administrador' ||\r\n                    row.name_role == 'Admin'\r\n                  \"\r\n                  class=\"btn btn-info m-1\"\r\n                  [routerLink]=\"['/roles/edit', row.id_role]\"\r\n                >\r\n                  <i class=\"i-Pen-4\"></i>\r\n                </button>\r\n                <label\r\n                  *ngIf=\"\r\n                    row.name_role !== 'Administrador' ||\r\n                    row.name_role == 'Admin'\r\n                  \"\r\n                  class=\"switch switch-success me-3\"\r\n                  (click)=\"openModal(row.id_role, row.state_role)\"\r\n                >\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    [checked]=\"row.state_role === 'Activo'\"\r\n                  />\r\n                  <span class=\"slider\"></span>\r\n                </label>\r\n              </ng-container>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #deleteConfirmModal let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-title\">Cambiar Estado del Rol</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn\"\r\n      aria-label=\"Close button\"\r\n      aria-describedby=\"modal-title\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>\r\n      <strong>{{ stateMessage }}</strong>\r\n    </p>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-secondary btn\"\r\n      (click)=\"modal.dismiss('cancel')\"\r\n    >\r\n      Cancelar\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      ngbAutofocus\r\n      class=\"btn btn-wide btn-danger btn\"\r\n      (click)=\"modal.close('Ok')\"\r\n    >\r\n      Aceptar\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RolesListComponent } from './roles-list/roles-list.component';\r\nimport { RolesDetailComponent } from './roles-detail/roles-detail.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: RolesListComponent\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: RolesDetailComponent\r\n    },\r\n    {\r\n        path: 'edit/:id_role',\r\n        component: RolesDetailComponent\r\n    },\r\n    {\r\n        path: 'detail/:id_role',\r\n        component: RolesDetailComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class RolesRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RolesRoutingModule } from './roles-routing.module';\r\nimport { RolesListComponent } from './roles-list/roles-list.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { RolesDetailComponent } from './roles-detail/roles-detail.component';\r\n\r\n@NgModule({\r\n   imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    SharedComponentsModule,\r\n    NgbModule,\r\n    RolesRoutingModule,\r\n   ],\r\n   declarations: [RolesListComponent, RolesDetailComponent] \r\n})\r\nexport class RolesModule { }"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}