{"version":3,"file":"src_app_views_payments_payment_module_ts.js","mappings":";;;;;;;;;;;;;;;;;AAOO,MAAM,eAAe;IAO1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAL5B,YAAO,GAAG,qDAAqD,CAAC;QAChE,SAAI,GAAG,oDAAoD,CAAC;QAC5D,SAAI,GAAG,kDAAkD,CAAC;QAC1D,SAAI,GAAG,mDAAmD,CAAC;IAE3B,CAAC;IAEzC,aAAa,CAAC,WAAgB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IACnD,CAAC;IACD,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IACD,cAAc,CAAC,SAAiB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,SAAS,EAAE,CAAC,CAAC;IACvD,CAAC;IACD,WAAW,CAAC,MAAc;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,MAAM,EAAE,CAAC,CAAC;IACjD,CAAC;IACD,YAAY,CAAC,QAAgB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,YAAY,QAAQ,EAAE,CAAC,CAAC;IAC9D,CAAC;IACD,gBAAgB,CAAC,QAAgB,EAAE,MAAc;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,YAAY,QAAQ,UAAU,MAAM,EAAE,CAAC,CAAC;IAC9E,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IACD,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAG,CAAC;IACpC,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,iBAAiB,CAAC,CAAC;IACzD,CAAC;;8EAzCU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;;;;;ACJ+C;;;;;;;;;;ICA/D,qEAA+B;IAAA,yEAAc;IAAA,4DAAK;;;IAClD,qEAAiC;IAAA,gFAAqB;IAAA,4DAAK;;;IAGvD,qEAA+B;IAAA,8EAAmB;IAAA,4DAAK;;;IACvD,qEAAiC;IAAA,gFAAqB;IAAA,4DAAK;;;IAmB/B,6EAAsE;IAAA,uDAC7C;IAAA,4DAAS;;;IADS,sFAA0B;IAAC,0DAC7C;IAD6C,sFAC7C;;;IAgBzB,6EAA8D;IAAA,uDAC3C;IAAA,4DAAS;;;IADW,mFAAsB;IAAC,0DAC3C;IAD2C,iFAC3C;;;IA4BnB,kFACwB;IAAA,yEAAc;IAAA,4DAAc;;;IAAhD,mFAAmB;;;;;;IA3D3D,yEAA4C;IAKK,8EAAmB;IAAA,4DAAM;IACtD,0EAAoD;IAAtB,2SAAY,0EAAQ,KAAC;IAC/C,yEAAiB;IAEc,0EAAc;IAAA,4DAAQ;IAC7C,8EAAwE;IACjC,4EAAgB;IAAA,4DAAS;IAC5D,kIACkC;IACtC,4DAAS;IAIb,2EAAsC;IACR,yEAAa;IAAA,4DAAQ;IAC/C,6EAEsC;IADlC,+SAAU,+FAA6B,KAAC;IAD5C,4DAEsC;IAG1C,2EAAsC;IACb,mEAAO;IAAA,4DAAQ;IACpC,8EAAgG;IAA7B,0SAAU,mFAAiB,KAAC;IAC3F,8EAAmC;IAAA,0EAAc;IAAA,4DAAS;IAC1D,kIAC4B;IAChC,4DAAS;IAEb,2EAAsC;IACP,sEAAU;IAAA,4DAAQ;IAC7C,6EAEsC;IADlC,+SAAU,iGAA+B,KAAC;IAD9C,4DAEsC;IAI1C,2EAAsC;IACC,uEAAW;IAAA,4DAAQ;IACtD,wEAC+B;IACjC,4DAAM;IAER,2EAAsC;IACL,0EAAc;IAAA,4DAAQ;IACnD,6EAG4D;IAFxD,+SAAU,oGAAkC,KAAC;IADjD,4DAG4D;IAEhE,0EAAuB;IAEsD,kEAAM;IAAA,4DAAS;IACpF,sEAAgC;IAChC,4IACoD;IACxD,4DAAM;;;IAtDZ,0DAAuB;IAAvB,uFAAuB;IAMc,0DAAc;IAAd,uFAAc;IASA,0DAA+B;IAA/B,wFAA+B;IAQ/C,0DAAY;IAAZ,qFAAY;IAOM,0DAA4B;IAA5B,qFAA4B;IAO/B,0DAAiC;IAAjC,iGAAiC;IAO3B,0DAAgC;IAAhC,yFAAgC;IAMnC,0DAAyB;IAAzB,8IAAyB;IAEtD,0DAAwB;IAAxB,2FAAwB;;;IAqCtD,0EACJ;;;IAEI,uDACJ;;;;IADI,+KACJ;;;IAII,0EACJ;;;IAEI,uDACJ;;;IADI,iGACJ;;;IAII,wEACJ;;;IAEI,uDACJ;;;IADI,2FACJ;;;IAII,oEACJ;;;IAEI,uDACJ;;;IADI,2FACJ;;;IAII,2EACJ;;;IAEI,uDACJ;;;IADI,mGACJ;;;IAKI,qEACJ;;;IAGI,6EAAsD;IAClD,mEAAqB;IACzB,4DAAS;;;;IAxE7B,sEAAkC;IAEtB,uDAA6B;IAAA,4DAAK;IAG1C,qEAAmD;IAEnD,0EAA4B;IAGgE,2EAAgB;IAAA,4DAAS;IAE7G,2EAAiD;IAC7C,wEAAkG;IACtG,4DAAM;IAId,2EAA2B;IAMf,6IAEc;IACd,6IAEc;IAClB,4DAAuB;IACvB,4FAA2C;IACvC,6IAEc;IACd,6IAEc;IAClB,4DAAuB;IACvB,4FAAwC;IACpC,6IAEc;IACd,6IAEc;IAClB,4DAAuB;IACvB,4FAAqC;IACjC,6IAEc;IACd,6IAEc;IAClB,4DAAuB;IACvB,4FAA6C;IACzC,6IAEc;IACd,6IAEc;IAClB,4DAAuB;IAEvB,4FAAoC;IAChC,6IAEc;IACd,6IAKc;IAClB,4DAAuB;;;IAxEvB,0DAA6B;IAA7B,wGAA6B;IAQmB,0DAAmC;IAAnC,8IAAmC;IAStB,0DAAsB;IAAtB,+EAAsB;IA6C7D,2DAAa;IAAb,sEAAa;;AD/HxC,MAAM,uBAAuB;IA0BlC,YACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,gBAAiC,EACjC,MAAqB;QAJrB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,WAAM,GAAN,MAAM,CAAe;QA9B/B,mBAAc,GAAU,EAAE,CAAC;QAK3B,aAAQ,GAA6B,KAAK,CAAC;QAK3C,YAAO,GAAY;YACjB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,IAAI;YACf,aAAa,EAAE,IAAI;YACnB,YAAY,EAAE,EAAE;YAChB,eAAe,EAAE,IAAI;SACtB,CAAC;QACF,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,IAAI;YACf,aAAa,EAAE,IAAI;YACnB,YAAY,EAAE,EAAE;YAChB,eAAe,EAAE,IAAI;SACtB,CAAC;QAiFF,kBAAa,GAAQ,EAAE,CAAC;QAxEtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,QAAQ;QACN,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACrE,MAAM,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,CACpD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,KAAK,CAAC,CAAC;QAClE,CAAC,CACF,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAEzD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IAED,aAAa,CAAC,QAAgB;QAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC;QAC9E,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;IACrD,CAAC;IAED,kBAAkB;QAChB,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACrE,MAAM,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QAExC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,CACpD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,KAAK,CAAC,CAAC;QAClE,CAAC,CACF,CAAC;IAEJ,CAAC;IACD,UAAU;QACR,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAErB,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,gCAAgC;QAEzE,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YAC9B,OAAO;SACR;QAED,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,SAAS,CACvD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC,CACF,CAAC;IACJ,CAAC;IAID,iBAAiB,CAAC,IAAS,EAAE;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;YAClB,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;YACpB,SAAS,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;YACxB,aAAa,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC;YAChC,YAAY,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;YAC9B,eAAe,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC;YACpC,UAAU,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;SAC3B,CAAC,CAAC;IACL,CAAC;IACD,WAAW;QAET,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QAErC,IAAI,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YACvC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;aAAM,IAAI,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YAC7C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;SACzB;QACD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAC7C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACrE,MAAM,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;YACxC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACzD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC;QACtD,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QAChC,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,KAAK,UAAU,CAAC,CAAC;QAChF,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;SACrE;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC/C;IACH,CAAC;IACD,SAAS;QACP,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CAC3C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC,CACF,CAAC;IACJ,CAAC;IACD,uBAAuB,CAAC,KAAU;QAChC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IAClD,CAAC;IACD,qBAAqB,CAAC,KAAU;QAC9B,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IAChD,CAAC;IACD,qBAAqB,CAAC,KAAU;QAC9B,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACrD,CAAC;IACD,uBAAuB,CAAC,KAAU;QAChC,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACtD,CAAC;IACD,0BAA0B,CAAC,KAAU;QACnC,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACxD,CAAC;IAED,aAAa;QACX,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAE1B,IAAI,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE9B,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAC7D,CAAC,IAAI,EAAE,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,wBAAwB,EAAE,oBAAoB,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC1G,UAAU,CAAC,GAAG,EAAE;wBACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACnC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACX,CAAC,EAAE,IAAI,CAAC,CAAC;YACX,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACR,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,yBAAyB,EAAE,OAAO,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC7E,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;YAClD,CAAC,CACF,CAAC;SACH;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;YAC3B,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,qBAAqB;SAC5C;IACH,CAAC;;8FAtNU,uBAAuB;qHAAvB,uBAAuB;QCpBpC,yEAAwB;QACpB,iHAAkD;QAClD,iHAA2D;QAC3D,qEAAI;QACiC,gEAAK;QAAA,4DAAI;QAC1C,iHAAuD;QACvD,iHAA2D;QAC/D,4DAAK;QAMT,qHAoEM;QAEN,uHA6EQ;;QA/JC,0DAAwB;QAAxB,wFAAwB;QACxB,0DAA0B;QAA1B,0FAA0B;QAEpB,0DAAyB;QAAzB,6IAAyB;QAC3B,0DAAwB;QAAxB,wFAAwB;QACxB,0DAA0B;QAA1B,0FAA0B;QAOrB,0DAAwB;QAAxB,wFAAwB;QAsEpC,0DAA0B;QAA1B,0FAA0B;;;;;;;;;;;;;;;;;;;;;;;;;AC/EoB;AAEN;;;;;;;;;ICwB9B,oEACJ;;;IAEI,uDACJ;;;;IADI,6GACJ;;;IAII,0EACJ;;;IAEI,uDACJ;;;;IADI,+KACJ;;;IAII,oEACJ;;;IAEI,uDACJ;;;IADI,2FACJ;;;IAII,uEACJ;;;IAEI,uDACJ;;;IADI,iGACJ;;;IAKI,2EACJ;;;IAEI,uDACJ;;;IADI,mGACJ;;;IAII,qEACJ;;;;IAGI,6EAAgG;IAC5F,mEAAqB;IACzB,4DAAS;;;IAF6B,gKAAyD;;;AD3DxG,MAAM,oBAAoB;IAqB7B,YACY,gBAAiC,EACjC,MAAqB;QADrB,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,WAAM,GAAN,MAAM,CAAe;QArBjC,iBAAY,GAAU,EAAE;QACxB,yBAAoB,GAAU,EAAE,CAAC;QACjC,gBAAW,GAAG,KAAK,CAAC;QACpB,YAAO,GAAQ,EAAE,CAAC;QAClB,kBAAa,GAAuB,IAAI,8DAAkB,EAAE,CAAC;QAI7D,iBAAY,GAAW,qBAAqB,CAAC;QAE7C,gBAAW,GAAW,CAAC,CAAC;QACxB,iBAAY,GAAW,CAAC,CAAC;IAWrB,CAAC;IARL,YAAY,CAAC,KAAU;QACnB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACxD,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAOD,QAAQ;QACJ,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,GAAU,EAAE,EAAE;YAC5D,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YACxB,oDAAoD;YACpD,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,OAAc,EAAE,EAAE;gBAC/D,mEAAmE;gBACnE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBACrB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC;gBACxD,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,aAAa,CAAC,YAAY;iBAC1B,IAAI,CAAC,4DAAY,CAAC,GAAG,CAAC,CAAC;iBACvB,SAAS,CAAC,KAAK,CAAC,EAAE;gBACf,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IACD,kBAAkB;QACd,MAAM,UAAU,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QAC9D,IAAI,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAC9C,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAE3E,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,EAAE;YACjC,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY;YAClE,IAAI,aAAa,GAAG,CAAC,EAAE;gBACnB,QAAQ,GAAG,UAAU,GAAG,aAAa;aACxC;SACJ;QAED,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;QACpC,QAAQ,IAAI,SAAS;QACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC;IACzE,CAAC;IAED,WAAW,CAAC,KAAU;QAClB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED,SAAS,CAAC,GAAG;QACT,IAAI,GAAG,EAAE;YACL,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;SAC3B;aAAM;YACH,OAAO,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;SACrD;QAED,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACjB,OAAO;SACV;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC;YACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;oBACnE,OAAO,IAAI,CAAC;iBACf;aACJ;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,qBAAqB;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC;IAClE,CAAC;IAED,WAAW;QACP,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,SAAS,CAC5C,CAAC,IAAI,EAAE,EAAE;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,QAAQ,CAAC,MAAM,EAAE,CAAC;QACtB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;QAC9D,CAAC,CACJ,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IAClC,CAAC;;wFAzGQ,oBAAoB;kHAApB,oBAAoB;QChBjC,yEAAwB;QAChB,mEAAQ;QAAA,4DAAK;QACjB,qEAAI;QACe,iEAAM;QAAA,4DAAI;QACzB,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QAItB,oEAAmD;QAEnD,0EAA4B;QAGgE,4EAAgB;QAAA,4DAAS;QAE7G,0EAAiD;QAC7C,uEAEwB;QAC5B,4DAAM;QAId,0EAA2B;QAInB,wJAAQ,wBAAoB,IAAC;QAC7B,4FAAuC;QACnC,mIAEc;QACd,mIAEc;QAClB,4DAAuB;QACvB,4FAA0C;QACtC,mIAEc;QACd,mIAEc;QAClB,4DAAuB;QACvB,4FAAqC;QACjC,mIAEc;QACd,mIAEc;QAClB,4DAAuB;QACvB,4FAA2C;QACvC,mIAEc;QACd,mIAEc;QAClB,4DAAuB;QAEvB,4FAA6C;QACzC,mIAEc;QACd,mIAEc;QAClB,4DAAuB;QACvB,4FAAoC;QAChC,mIAEc;QACd,mIAKc;QAClB,4DAAuB;QAK/B,2FAA4E;QAAvD,0KAAc,uBAAmB,IAAC;QACvD,4DAAsB;;QAxEkC,2DAAmC;QAAnC,8IAAmC;QAWrB,0DAAsB;QAAtB,+EAAsB;QA6C9D,2DAAa;QAAb,sEAAa;QAea,0DAAmB;QAAnB,gFAAmB;;;;;;;;;;;;;;;;;;;;ACnFpB;AAC6B;AACP;;;AAG7E,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sFAAoB;KAClC;IACD;QACI,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6FAAuB;KACrC;IACD;QACI,IAAI,EAAE,qBAAqB;QAC3B,SAAS,EAAE,6FAAuB;KACrC;IACD;QACI,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,6FAAuB;KACrC;CACJ,CAAC;AAMK,MAAM,oBAAoB;;wFAApB,oBAAoB;iHAApB,oBAAoB;qHAHrB,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEX,oBAAoB,oFAFrB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;AC3BuB;AAGmB;AACX;AACM;AAC+B;AACR;AACP;AACb;AAEhE,8BAA8B;AACuB;;AAe9C,MAAM,aAAa;;0EAAb,aAAa;0GAAb,aAAa;8GAXtB,yDAAY;QACZ,uDAAW;QACX,uEAAkB;QAClB,+DAAmB;QACnB,sGAAsB;QACtB,iEAAS;QACT,yEAAoB;QACpB,+DAAmB;mIAIV,aAAa,mBAFT,6FAAuB,EAAE,sFAAoB,aAT1D,yDAAY;QACZ,uDAAW;QACX,uEAAkB;QAClB,+DAAmB;QACnB,sGAAsB;QACtB,iEAAS;QACT,yEAAoB;QACpB,+DAAmB","sources":["./src/app/shared/services/payment.service.ts","./src/app/views/payments/payment-detail/payment-detail.component.ts","./src/app/views/payments/payment-detail/payment-detail.component.html","./src/app/views/payments/payment-list/payment-list.component.ts","./src/app/views/payments/payment-list/payment-list.component.html","./src/app/views/payments/payment-routing.module.ts","./src/app/views/payments/payment.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentsService {\r\n\r\n  private baseUrl = 'https://api-cosmetic-w32d.onrender.com/api/payments';\r\n  private url2 = 'https://api-cosmetic-w32d.onrender.com/api/clients';\r\n  private url3 = 'https://api-cosmetic-w32d.onrender.com/api/sales';\r\n  private url4 = 'https://api-cosmetic-w32d.onrender.com/api/orders';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createPayment(paymentData: any): Observable<any> {\r\n    return this.http.post(this.baseUrl, paymentData);\r\n  }\r\n  getAllPayments(): Observable<any> {\r\n    return this.http.get(this.baseUrl);\r\n  }\r\n  getPaymentById(paymentID: number): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/${paymentID}`);\r\n  }\r\n  getSaleById(saleId: number): Observable<any> {\r\n    return this.http.get(`${this.url3}/${saleId}`);\r\n  }\r\n  getPayClient(clientID: number): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/clients/${clientID}`);\r\n  }\r\n  getPayClientSale(clientID: number, saleID: number): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/clients/${clientID}/sales/${saleID}`);\r\n  }\r\n  getAllClients(): Observable<any> {\r\n    return this.http.get(this.url2);\r\n  }\r\n  getAllSales(): Observable<any> {\r\n    return this.http.get(this.url3);\r\n  }\r\n  getAllOrders(): Observable<any> {\r\n    return this.http.get(this.url4  );\r\n  }\r\n  getPayClienSale(): Observable<any> {\r\n    return this.http.get(this.url3);\r\n  }\r\n  getUnpaidClients(): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/unpaid-clients`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validator } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PaymentsService } from 'src/app/shared/services/payment.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\ninterface Payment {\r\n  id_sale: number;\r\n  id_client: number;\r\n  total_payment: number;\r\n  payment_date: string;\r\n  total_remaining: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-payments-detail',\r\n  templateUrl: './payment-detail.component.html',\r\n  styleUrls: ['./payment-detail.component.scss']\r\n})\r\n\r\nexport class PaymentsDetailComponent implements OnInit {\r\n  clientPayments: any[] = [];\r\n  listClients: any[];\r\n  listSales: any[];\r\n  loading: boolean;\r\n  formBasic: FormGroup;\r\n  viewMode: 'new' | 'edit' | 'print' = 'new';\r\n  id_client: string;\r\n  id: string;\r\n  isNew: boolean;\r\n  clientName: string;\r\n  payment: Payment = {\r\n    id_sale: null,\r\n    id_client: null,\r\n    total_payment: null,\r\n    payment_date: '',\r\n    total_remaining: null,\r\n  };\r\n  new_payment = {\r\n    id_sale: null,\r\n    id_client: null,\r\n    total_payment: null,\r\n    payment_date: '',\r\n    total_remaining: null,\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private _paymentsService: PaymentsService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.formBasic = this.formBuilder.group({});\r\n  }\r\n\r\n  ngOnInit() {\r\n    const clientIdString = this.route.snapshot.paramMap.get('id_client');\r\n    const clientId = Number(clientIdString);\r\n    console.log(clientId);\r\n    this._paymentsService.getPayClient(clientId).subscribe(\r\n      (data) => {\r\n        this.payment = data;\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener los pagos del cliente:', error);\r\n      }\r\n    );\r\n    this.id_client = this.route.snapshot.params['id_client'];\r\n\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.isNew = !this.id;\r\n    this.buildPaymentsForm(this.payment);\r\n    this.setViewMode();\r\n    this.getPayment();\r\n    if (!this.isNew) {\r\n      this.getPayment();\r\n    }\r\n    this.loadClients();\r\n    this.loadSales();\r\n    this.loadClientPayments();\r\n    this.getClientName(clientId);\r\n  }\r\n\r\n  getClientName(clientId: number) {\r\n    const client = this.listClients.find(client => client.id_client === clientId);\r\n    this.clientName = client ? client.name_client : '';\r\n  }\r\n\r\n  loadClientPayments() {\r\n    const clientIdString = this.route.snapshot.paramMap.get('id_client');\r\n    const clientId = Number(clientIdString);\r\n\r\n    this._paymentsService.getPayClient(clientId).subscribe(\r\n      (data) => {\r\n        this.clientPayments = data;\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener los pagos del cliente:', error);\r\n      }\r\n    );\r\n\r\n  }\r\n  getPayment() {\r\n    this.id = this.route.snapshot.params['id_payment'];\r\n    console.log(this.id);\r\n\r\n    const paymentID = parseInt(this.id, 10); // Convierte this.id a un número\r\n\r\n    if (isNaN(paymentID)) {\r\n      console.error('ID no válido');\r\n      return;\r\n    }\r\n\r\n    this._paymentsService.getPaymentById(paymentID).subscribe(\r\n      (data) => {\r\n        this.payment = data;\r\n        console.log(this.payment);\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener el pago:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  updatedFields: any = {};\r\n\r\n  buildPaymentsForm(i: any = {}) {\r\n    this.formBasic = this.formBuilder.group({\r\n      id: [i.id_payment],\r\n      id_sale: [i.id_sale],\r\n      id_client: [i.id_client],\r\n      total_payment: [i.total_payment],\r\n      payment_date: [i.payment_date],\r\n      total_remaining: [i.total_remaining],\r\n      total_sale: [i.total_sale]\r\n    });\r\n  }\r\n  setViewMode() {\r\n\r\n    const currentRoute = this.router.url;\r\n\r\n    if (currentRoute.includes('/registrar')) {\r\n      this.viewMode = 'new';\r\n    } else if (currentRoute.includes('/detalle/')) {\r\n      this.viewMode = 'print';\r\n    }\r\n    console.log('viewMode:', this.viewMode);\r\n  }\r\n\r\n  loadClients() {\r\n    this._paymentsService.getAllClients().subscribe(\r\n      (data) => {\r\n        this.listClients = data;\r\n        const clientIdString = this.route.snapshot.paramMap.get('id_client');\r\n        const clientId = Number(clientIdString);\r\n        this.getClientName(clientId);\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener los clientes:', error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  updateTotalSale() {\r\n    console.log(this.listClients)\r\n    let selectedId = this.formBasic.get('id_sale')?.value;\r\n    selectedId = Number(selectedId);\r\n    const selectedSale = this.listSales.find((sale) => sale.id_sale === selectedId);\r\n    if (selectedSale) {\r\n      this.formBasic.get('total_sale')?.setValue(selectedSale.total_sale);\r\n    } else {\r\n      this.formBasic.get('total_sale')?.setValue(0);\r\n    }\r\n  }\r\n  loadSales() {\r\n    this._paymentsService.getAllSales().subscribe(\r\n      (data) => {\r\n        this.listSales = data;\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener la lista de ventas:', error);\r\n      }\r\n    );\r\n  }\r\n  handleIdClientSelection(event: any) {\r\n    this.new_payment.id_client = event.target.value;\r\n  }\r\n  handleIdSaleSelection(event: any) {\r\n    this.new_payment.id_sale = event.target.value;\r\n  }\r\n  handlePayDaySelection(event: any) {\r\n    this.new_payment.payment_date = event.target.value;\r\n  }\r\n  handleTotalPaySelection(event: any) {\r\n    this.new_payment.total_payment = event.target.value;\r\n  }\r\n  handleTotalRemainSelection(event: any) {\r\n    this.new_payment.total_remaining = event.target.value;\r\n  }\r\n\r\n  createPayment() {\r\n    const currentRoute = this.router.url;\r\n    console.log(currentRoute);\r\n\r\n    if (currentRoute.includes('/registrar')) {\r\n      console.log(this.new_payment);\r\n\r\n      this._paymentsService.createPayment(this.new_payment).subscribe(\r\n        (data) => {\r\n          console.log(data);\r\n          this.loading = true;\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.toastr.success('Pago creado con éxito.', 'Proceso Completado', { progressBar: true, timeOut: 3000 });\r\n            setTimeout(() => {\r\n              this.router.navigate(['/pagos']);\r\n            }, 3000);\r\n          }, 3000);\r\n        },\r\n        (error) => {\r\n          this.loading = false;\r\n          this.toastr.error('Fallo al crear el pago.', 'Error', { progressBar: true });\r\n          console.error('Error al crear el pago:', error);\r\n        }\r\n      );\r\n    }\r\n    this.loading = true;\r\n  }\r\n\r\n  submit() {\r\n    if (this.viewMode === 'new') {\r\n      this.createPayment(); // Lógica de creación\r\n    }\r\n  }\r\n  \r\n}\r\n\r\n","<div class=\"breadcrumb\">\r\n    <h1 *ngIf=\"viewMode === 'new'\">Registrar Pago</h1>\r\n    <h1 *ngIf=\"viewMode === 'print'\">Ver Pagos del Cliente</h1>\r\n    <ul>\r\n        <li><a [routerLink]=\"['/pagos']\">Pagos</a></li>\r\n        <li *ngIf=\"viewMode === 'new'\">Registrar Proveedor</li>\r\n        <li *ngIf=\"viewMode === 'print'\">Ver Pagos del Cliente</li>\r\n    </ul>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"row\" *ngIf=\"viewMode === 'new'\"> \r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card mb-4\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"card-title mb-3\">Formulario de Pagos</div>\r\n                    <form [formGroup]=\"formBasic\" (ngSubmit)=\"submit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 form-group mb-3\">\r\n                                <label for=\"id_client\">Nombre cliente</label>\r\n                                <select class=\"form-control\" id=\"id_client\" formControlName=\"id_client\">\r\n                                    <option value=\"\" disabled selected>Elija al cliente</option>\r\n                                    <option *ngFor=\"let client of listClients\" [value]=\"client.id_client\">{{\r\n                                        client.name_client }}</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n    \r\n                            <div class=\"col-md-6 form-group mb-3\">\r\n                                <label for=\"payment_date\">Fecha de pago</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"payment_date\"\r\n                                    (change)=\"handlePayDaySelection($event)\" [placeholder]=\"'Fecha de pago'\"\r\n                                    [readonly]=\"viewMode === 'print'\">\r\n                            </div>\r\n    \r\n                            <div class=\"col-md-6 form-group mb-3\">\r\n                                <label for=\"id_sale\"># Venta</label>\r\n                                <select class=\"form-control\" id=\"id_sale\" formControlName=\"id_sale\"(change)=\"updateTotalSale()\">\r\n                                    <option value=\"\" disabled selected>Elija la venta</option>\r\n                                    <option *ngFor=\"let sale of listSales\" [value]=\"sale.id_sale\">{{\r\n                                        sale.id_sale }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-md-6 form-group mb-3\">\r\n                                <label for=\"total_payment\">Monto pago</label>\r\n                                <input type=\"number\" class=\"form-control\" id=\"total_payment\"\r\n                                    (change)=\"handleTotalPaySelection($event)\" [placeholder]=\"'Monto pago'\"\r\n                                    [readonly]=\"viewMode === 'print'\">\r\n                            </div>\r\n    \r\n    \r\n                            <div class=\"col-md-6 form-group mb-3\">\r\n                                <label for=\"commission_percentage\">Total venta</label>\r\n                                <input class=\"form-control\" id=\"total_sale\" [readonly]=\"viewMode === 'print'\"\r\n                                  formControlName=\"total_sale\">\r\n                              </div>\r\n    \r\n                            <div class=\"col-md-6 form-group mb-3\">\r\n                                <label for=\"total_remaining\">Total restante</label>\r\n                                <input type=\"number\" class=\"form-control\" id=\"total_remaining\"\r\n                                    (change)=\"handleTotalRemainSelection($event)\" [placeholder]=\"'Total restante'\"\r\n                                    [readonly]=\"viewMode === 'print'\"\r\n                                    [ngClass]=\"{'placeholder-black': viewMode === 'print'}\">\r\n                            </div>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"d-flex justify-content-end\">\r\n                                    <button class=\"btn btn-danger float-right\" [routerLink]=\"['/pagos']\">Volver</button>\r\n                                    <div style=\"width: 10px;\"></div>\r\n                                    <btn-loading *ngIf=\"viewMode === 'new'\" btnClass=\"btn-primary\"\r\n                                        [loading]=\"loading\">Registrar Pago</btn-loading>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"viewMode === 'print'\">\r\n    <div class=\"breadcrumb\">\r\n        <h1>Ver pagos de {{ clientName }}</h1>\r\n    </div>\r\n    \r\n    <div class=\"separator-breadcrumb border-top\"></div>\r\n    \r\n    <div class=\"col-md-12 mb-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <button class=\"btn btn-primary float-right\" [routerLink]=\"['/pagos/registrar']\">Crear nuevo pago</button>\r\n            </div>\r\n            <div class=\"col-md-6 d-flex justify-content-end\">\r\n                <input id=\"email\" placeholder=\"Buscar Pagos\" type=\"text\" class=\"form-control\" style=\"width: 50%;\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"card o-hidden\">\r\n        <ngx-datatable class=\"material fullscreen\" style=\"height: 460px\" [columnMode]=\"'force'\" [headerHeight]=\"50\"\r\n            [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\" [rows]=\"clientPayments\" [externalPaging]=\"true\"\r\n            [count]=\"clientPayments.length\" [limit]=\"10\" [offset]=\"0\">\r\n        \r\n            <ngx-datatable-column name=\"payment_date\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    Fecha de Pago\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-row=\"row\">\r\n                    {{ row.payment_date | date: 'yyyy-MM-dd' }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"total_payment\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    Total de Pago\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-row=\"row\">\r\n                    {{ row.total_payment }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"total_sale\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    Total Venta\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-row=\"row\">\r\n                    {{ row.id_sale }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"id_sale\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    # Venta\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-row=\"row\">\r\n                    {{ row.id_sale }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"total_remaining\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    Total Restante\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-row=\"row\">\r\n                    {{ row.total_remaining }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <!-- Agregar las columnas adicionales según tus datos -->\r\n            <ngx-datatable-column [width]=\"120\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    Acciones\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-row=\"row\">\r\n                    <!-- Agregar botones de acciones si es necesario -->\r\n                    <button class=\"btn btn-dark m-1 me-3\" [routerLink]=\"\">\r\n                        <i class=\"i-Eye\"></i>\r\n                    </button>\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n        </ngx-datatable>\r\n    </div>\r\n  </div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DataLayerService } from 'src/app/shared/services/data-layer.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { PaginationControlsComponent } from 'ngx-pagination';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { PaymentsService } from 'src/app/shared/services/payment.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n@Component({\r\n    selector: 'app-payment-list',\r\n    templateUrl: './payment-list.component.html',\r\n    styleUrls: ['./payment-list.component.scss']\r\n})\r\nexport class PaymentListComponent implements OnInit {\r\n    loading: boolean;\r\n    listPayments: any[] = []\r\n    originalListPayments: any[] = [];\r\n    openedModal = false;\r\n    clients: any = {};\r\n    searchControl: UntypedFormControl = new UntypedFormControl();\r\n    payments;\r\n    providers: [DatePipe]\r\n    filteredPayments;\r\n    paginationId: string = 'payments-pagination';\r\n\r\n    currentPage: number = 1;\r\n    itemsPerPage: number = 6;\r\n\r\n\r\n    onPageChange(event: any) {\r\n        this.currentPage = event.offset / this.itemsPerPage + 1;\r\n        this.updateListPayments();\r\n    }\r\n\r\n    constructor(\r\n        private _paymentsService: PaymentsService,\r\n        private toastr: ToastrService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this._paymentsService.getAllPayments().subscribe((res: any[]) => {\r\n            this.listPayments = res;\r\n            // Llamar al servicio para obtener datos de clientes\r\n            this._paymentsService.getAllClients().subscribe((clients: any[]) => {\r\n                // Mapear los datos de clientes en un objeto para búsquedas rápidas\r\n                clients.forEach(client => {\r\n                    this.clients[client.id_client] = client.name_client;\r\n                });\r\n            });\r\n\r\n            this.searchControl.valueChanges\r\n                .pipe(debounceTime(200))\r\n                .subscribe(value => {\r\n                    this.filerData(value);\r\n                });\r\n        });\r\n    }\r\n    updateListPayments() {\r\n        const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n        let endIndex = startIndex + this.itemsPerPage;\r\n        const totalPages = Math.ceil(this.listPayments.length / this.itemsPerPage);\r\n\r\n        if (this.currentPage === totalPages) {\r\n            const remainingRows = this.listPayments.length % this.itemsPerPage\r\n            if (remainingRows > 0) {\r\n                endIndex = startIndex + remainingRows\r\n            }\r\n        }\r\n\r\n        const rowsToAdd = 6 - (endIndex % 6)\r\n        endIndex += rowsToAdd\r\n        this.filteredPayments = this.listPayments.slice(startIndex, endIndex)\r\n    }\r\n\r\n    pageChanged(event: any) {\r\n        this.currentPage = event.page;\r\n        this.updateListPayments();\r\n    }\r\n\r\n    filerData(val) {\r\n        if (val) {\r\n            val = val.toLowerCase();\r\n        } else {\r\n            return this.filteredPayments = [...this.payments];\r\n        }\r\n\r\n        const columns = Object.keys(this.payments[0]);\r\n        if (!columns.length) {\r\n            return;\r\n        }\r\n\r\n        const rows = this.payments.filter(function (d) {\r\n            for (let i = 0; i <= columns.length; i++) {\r\n                const column = columns[i];\r\n                if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n        });\r\n        this.filteredPayments = rows;\r\n    }\r\n\r\n    sortListPaymentssById() {\r\n        this.listPayments.sort((a, b) => a.id_payment - b.id_payment);\r\n    }\r\n\r\n    getPayments() {\r\n        this._paymentsService.getAllPayments().subscribe(\r\n            (data) => {\r\n                this.listPayments = data;\r\n                this.sortListPaymentssById();\r\n                location.reload();\r\n            },\r\n            (error) => {\r\n                console.error('Error al obtener los proveedores:', error);\r\n            }\r\n        );\r\n        console.log(this.listPayments)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"breadcrumb\">\r\n    <h1>CosmeTic</h1>\r\n    <ul>\r\n        <li><a href=\"\">Ventas</a></li>\r\n        <li>Pagos</li>\r\n    </ul>\r\n</div>\r\n\r\n<div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n<div class=\"col-md-12 mb-3\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <button class=\"btn btn-primary float-right\" [routerLink]=\"['/pagos/registrar']\">Crear nuevo pago</button>\r\n        </div>\r\n        <div class=\"col-md-6 d-flex justify-content-end\">\r\n            <input _ngcontent-vet-c167=\"\" id=\"email\" placeholder=\"Buscar Pagos\" type=\"text\"\r\n                class=\"form-control  ng-valid ng-touched ng-dirty\" ng-reflect-form=\"[object Object]\"\r\n                style=\"width: 50%;\">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"card o-hidden\">\r\n    <ngx-datatable class=\"material fullscreen\" style=\"height: 460px;\" [columnMode]=\"'force'\" [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\" [rows]=\"listPayments\" [externalPaging]=\"true\"\r\n        [count]=\"listPayments.length\" [limit]=\"itemsPerPage\" [offset]=\"(currentPage - 1) * itemsPerPage\"\r\n        (page)=\"onPageChange($event)\">\r\n        <ngx-datatable-column name=\"id_client\">\r\n            <ng-template ngx-datatable-header-template>\r\n                Cliente\r\n            </ng-template>\r\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                {{ clients[row.id_client] }}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"payment_date\">\r\n            <ng-template ngx-datatable-header-template>\r\n                Fecha de pago\r\n            </ng-template>\r\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                {{ row.payment_date | date: 'yyyy-MM-dd' }}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"id_sale\">\r\n            <ng-template ngx-datatable-header-template>\r\n                # venta\r\n            </ng-template>\r\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                {{ row.id_sale }}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"total_payment\">\r\n            <ng-template ngx-datatable-header-template>\r\n                Total pago\r\n            </ng-template>\r\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                {{ row.total_payment }}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"total_remaining\">\r\n            <ng-template ngx-datatable-header-template>\r\n                Total restante\r\n            </ng-template>\r\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                {{ row.total_remaining }}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column [width]=\"120\">\r\n            <ng-template ngx-datatable-header-template>\r\n                Acciones\r\n            </ng-template>\r\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                \r\n                <button class=\"btn btn-dark m-1 me-3\" [routerLink]=\"['/pagos/detalle/clientes', row.id_client]\">\r\n                    <i class=\"i-Eye\"></i>\r\n                </button>\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n    </ngx-datatable>\r\n</div>\r\n\r\n<!-- Agrega los controles de paginación justo debajo de la tabla -->\r\n<pagination-template (pageChange)=\"pageChanged($event)\" [id]=\"paginationId\">\r\n</pagination-template>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PaymentsDetailComponent } from './payment-detail/payment-detail.component';\r\nimport { PaymentListComponent } from './payment-list/payment-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: PaymentListComponent\r\n    },\r\n    {\r\n        path: 'registrar', \r\n        component: PaymentsDetailComponent\r\n    },\r\n    {\r\n        path: 'detalle/:id_payment',\r\n        component: PaymentsDetailComponent\r\n    },\r\n    {\r\n        path: 'detalle/clientes/:id_client',\r\n        component: PaymentsDetailComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { PaymentsDetailComponent } from './payment-detail/payment-detail.component';\r\nimport { PaymentListComponent } from './payment-list/payment-list.component';\r\nimport { PaymentRoutingModule } from './payment-routing.module';\r\n\r\n// Importa NgxPaginationModule\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    SharedComponentsModule,\r\n    NgbModule,\r\n    PaymentRoutingModule,\r\n    NgxPaginationModule, // Agrega esta línea\r\n  ],\r\n  declarations: [PaymentsDetailComponent, PaymentListComponent]\r\n})\r\nexport class PaymentModule { }\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}