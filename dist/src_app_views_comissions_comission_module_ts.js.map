{"version":3,"file":"src_app_views_comissions_comission_module_ts.js","mappings":"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","sources":["./src/app/shared/services/comission.service.ts","./src/app/views/comissions/comission-detail/comission-detail.component.ts","./src/app/views/comissions/comission-detail/comission-detail.component.html","./src/app/views/comissions/comission-list/comission-list.component.ts","./src/app/views/comissions/comission-list/comission-list.component.html","./src/app/views/comissions/comission-routing.module.ts","./src/app/views/comissions/comission.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComissionsService {\r\n\r\n  private baseUrl = 'https://api-cosmetic-w32d.onrender.com/commissions';\r\n  private url2 = 'https://api-cosmetic-w32d.onrender.com/detailComs';\r\n  private url3 = 'https://api-cosmetic-w32d.onrender.com/api/employees';\r\n  private url4 = 'https://api-cosmetic-w32d.onrender.com/api/sales';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSalesByEmployeeAndMonth(idEmployee: number, month: string): Observable<any> {\r\n    const url = `${this.baseUrl}/sales/${idEmployee}/${month}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getAllEmployees(): Observable<any> {\r\n    return this.http.get(this.url3);\r\n  }\r\n\r\n  getAllSales(): Observable<any> {\r\n    return this.http.get(this.url4);\r\n  }\r\n\r\n  getComsById(comsId: number): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/${comsId}`);\r\n  }\r\n\r\n  getAllComsDetail(): Observable<any> {\r\n    return this.http.get(this.url2);\r\n  }\r\n\r\n  createComs(comisionData: any): Observable<any> {\r\n    return this.http.post(this.baseUrl, comisionData);\r\n  }\r\n  getAllComs(): Observable<any> {\r\n    return this.http.get(this.baseUrl);\r\n  }\r\n\r\n  getComsEmploy(employeID: number): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/employee/${employeID}`);\r\n  }\r\n\r\n  getComissionDetailById(idComissionDetail: number): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/detail/${idComissionDetail}`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ComissionsService } from 'src/app/shared/services/comission.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgZone } from '@angular/core';\r\n\r\ninterface Comission {\r\n  id_employee: number;\r\n  total_commission: number;\r\n  id_commission_detail: number;\r\n  total_sales: number;\r\n  month_commission: string;\r\n  commission_percentage: number;\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-comissions-detail',\r\n  templateUrl: './comission-detail.component.html',\r\n  styleUrls: ['./comission-detail.component.scss']\r\n})\r\nexport class ComissionsDetailComponent implements OnInit {\r\n  listEmployees: any[];\r\n  listSales: any[];\r\n  listComisionDetail: any[];\r\n  totalCommissions: number\r\n  loadingData: boolean;\r\n  loading: boolean;\r\n  formBasic: FormGroup;\r\n  sales: any[];\r\n  totalComs: number;\r\n  month: string;\r\n  commissionPercentage: number;\r\n  totalSales: number;\r\n  selectedEmployee: string;\r\n  selectedMonth: Date;\r\n  selectedPercentage: number;\r\n  totalSale: number;\r\n  viewMode: 'new' | 'print' = 'new';\r\n  id: string;\r\n  isNew: boolean;\r\n  comission: any = {};\r\n  new_comission: Comission = {\r\n    id_employee: 0,\r\n    total_commission: 0,\r\n    id_commission_detail: 0,\r\n    total_sales: 0,\r\n    month_commission: '',\r\n    commission_percentage: 0,\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private ngZone: NgZone,\r\n    private router: Router,\r\n    private _comissionsService: ComissionsService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.formBasic = this.formBuilder.group({});\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isNew = !this.id;\r\n    this.loadSales();\r\n    this.loadEmployees();\r\n    this.loadComissionDetail();\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.buildProvidersForm(this.comission);\r\n    this.setViewMode();\r\n    this.getComission();\r\n    if (!this.isNew) {\r\n      this.getComission();\r\n    }\r\n  }\r\n  setViewMode() {\r\n    const currentRoute = this.router.url;\r\n    if (currentRoute.includes('/registrar')) {\r\n      this.viewMode = 'new';\r\n    } else if (currentRoute.includes('/detalle/')) {\r\n      this.viewMode = 'print';\r\n    }\r\n    console.log('viewMode:', this.viewMode);\r\n  }\r\n\r\n  loadEmployees() {\r\n    this._comissionsService.getAllEmployees().subscribe(\r\n      (data) => {\r\n        this.listEmployees = data;\r\n        console.log('Lista de empleados cargada:', this.listEmployees);\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener la lista de empleados:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  loadComissionDetail() {\r\n    this._comissionsService.getAllComsDetail().subscribe(\r\n      (data) => {\r\n        this.listComisionDetail = data;\r\n        console.log('Lista de detalles de comisiones cargada:', this.listComisionDetail);\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener la lista de detalle de comisiones:', error);\r\n      }\r\n    );\r\n  }\r\n  loadSales() {\r\n    this._comissionsService.getAllSales().subscribe(\r\n      (data) => {\r\n        this.listSales = data;\r\n        console.log('Lista de ventas cargada:', this.listSales);\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener la lista de ventas:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  salesTotal() {\r\n    const Iddetail = this.formBasic.get('id_commission_detail')?.value;\r\n    let idEmployee = this.formBasic.get('id_employee')?.value;\r\n    idEmployee = Number(idEmployee);\r\n    console.log('Iddetail:', Iddetail);\r\n    console.log('idEmployee:', idEmployee);\r\n    const selectedCommission = this.listComisionDetail.find(\r\n      (commission) => commission.id_commission_detail === parseInt(Iddetail, 10)\r\n    );\r\n    this.month = selectedCommission.month_commission;\r\n    console.log(this.month);\r\n  \r\n    this._comissionsService.getSalesByEmployeeAndMonth(idEmployee, this.month).subscribe(\r\n      (data) => {\r\n        this.sales = data;\r\n        console.log(this.sales);\r\n  \r\n        // Inicializar totalSale antes de la iteración\r\n        this.totalSale = 0;\r\n  \r\n        // Iterar sobre los valores usando for...of\r\n        for (let sale of this.sales) {\r\n          // Convertir el total_sale a número antes de sumarlo\r\n          this.totalSale += parseFloat(sale.total_sale);\r\n        }\r\n        //Calcular el total\r\n        this.totalCommissions = this.totalSale * (this.commissionPercentage/100);\r\n        console.log('Total de ventas:', this.totalSale);\r\n        console.log('Total de comisiones:', this.totalCommissions);\r\n      \r\n        // Actualizar el valor utilizando patchValue y NgZone\r\n        this.ngZone.run(() => {\r\n          this.formBasic.get('total_sales')?.patchValue(this.totalSale);\r\n          this.formBasic.get('total_commission')?.patchValue(this.totalCommissions);\r\n        });\r\n  \r\n        console.log('Total de ventas:', this.totalSale);\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener la lista de empleados:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  findComsData(idComissionDetail: number, idEmployee: number) {\r\n    console.log(idComissionDetail + \" \" + idEmployee + \" \");\r\n\r\n    if (!this.listComisionDetail || !this.listEmployees) {\r\n      console.error('Error: Listas no definidas correctamente.');\r\n      return;\r\n    }\r\n\r\n    const detail = this.listComisionDetail.find(detail => detail.id_commission_detail === idComissionDetail);\r\n\r\n    const employee = this.listEmployees.find(employee => employee.id_employee === idEmployee);\r\n\r\n    if (detail && employee) {\r\n      this.selectedMonth = detail.month_commission;\r\n      this.selectedPercentage = detail.commission_percentage;\r\n      this.selectedEmployee = employee.name_employee;\r\n    } else {\r\n      console.error('Error: No se pudo encontrar detalle de comisión o empleado.');\r\n      return;\r\n    }\r\n\r\n    console.log(this.selectedEmployee);\r\n    console.log(this.selectedPercentage);\r\n    console.log(this.selectedMonth);\r\n  }\r\n\r\n  updateCommissionPercentage() {\r\n    let selectedId = this.formBasic.get('id_commission_detail')?.value;\r\n    selectedId = Number(selectedId);\r\n    const selectedCommission = this.listComisionDetail.find((commission) => commission.id_commission_detail === selectedId);\r\n    if (selectedCommission) {\r\n      this.commissionPercentage = selectedCommission.commission_percentage\r\n      console.log(this.commissionPercentage)\r\n      this.formBasic.get('commission_percentage')?.setValue(selectedCommission.commission_percentage);\r\n    } else {\r\n      this.formBasic.get('commission_percentage')?.setValue(0);\r\n    }\r\n  }\r\n  buildProvidersForm(i: any = {}) {\r\n    this.formBasic = this.formBuilder.group({\r\n      id: [i.id_commission],\r\n      id_employee: [i.id_employee],\r\n      nit_cedula: [i.nit_cedula],\r\n      total_commission: [i.total_commission],\r\n      id_commission_detail: [i.id_commission_detail],\r\n      total_sales: [i.total_sales],\r\n      month_commission: [i.month_commission],\r\n      commission_percentage: [i.commission_percentage],\r\n    });\r\n  }\r\n  handleStateSelection(event: any) {\r\n    this.new_comission.id_employee = event.target.value;\r\n  }\r\n  handleNameProviderSelection(event: any) {\r\n    this.comission.id_commission_detail = event.target.value;\r\n    // Busca el porcentaje correspondiente en la lista de comisiones\r\n    const selectedCommission = this.listComisionDetail.find((commission) => commission.month_commission === this.comission.month_commission);\r\n    if (selectedCommission) {\r\n      this.comission.commission_percentage = selectedCommission.commission_percentage;\r\n    } else {\r\n      this.comission.commission_percentage = 0;\r\n    }\r\n  }\r\n\r\n  handleNameContactSelection(event: any) {\r\n    this.comission.total_commission = event.target.value;\r\n  }\r\n\r\n  handleNitSelection(event: any) {\r\n    this.comission.total_sales = event.target.value;\r\n  }\r\n\r\n  createComission() {\r\n    const currentRoute = this.router.url;\r\n    console.log(currentRoute);\r\n    if (currentRoute.includes('/registrar')) {\r\n      console.log(this.new_comission);\r\n      this._comissionsService.createComs(this.new_comission).subscribe(\r\n        (data) => {\r\n          console.log(data);\r\n          this.loading = true;\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.toastr.success('Comisión creada con éxito.', 'Proceso Completado', { progressBar: true, timeOut: 3000 });\r\n            setTimeout(() => {\r\n              this.router.navigate(['/comisiones']);\r\n            }, 3000);\r\n          }, 3000);\r\n        },\r\n        (error) => {\r\n          this.loading = false;\r\n          this.toastr.error('Fallo al crear la comisión.', 'Error', { progressBar: true });\r\n          console.error('Error al crear la comisión:', error);\r\n        }\r\n      );\r\n    }\r\n    this.loading = true;\r\n  }\r\n  getComission() {\r\n    if (this.viewMode === \"print\") {\r\n      this.id = this.route.snapshot.params['id_commission'];\r\n      console.log(this.id);\r\n      this.loadingData = true;\r\n      const comissionId = parseInt(this.id, 10); // Convierte this.id a un número\r\n      this._comissionsService.getComsById(comissionId).subscribe(\r\n        (data) => {\r\n          this.comission = data;\r\n          console.log(this.comission);\r\n          if (this.comission && this.comission.comissions) {\r\n            const idComissionDetail = this.comission.comissions.id_commission_detail;\r\n            const idEmployee = this.comission.comissions.id_employee;\r\n            this.totalComs = this.comission.comissions.total_commission;\r\n            this.totalSales = this.comission.comissions.total_sales;\r\n\r\n            if (this.listComisionDetail && this.listEmployees) {\r\n              this.findComsData(idComissionDetail, idEmployee);\r\n            } else {\r\n              console.error('Error: Listas no definidas correctamente.');\r\n            }\r\n\r\n            console.log(idComissionDetail)\r\n            console.log(idEmployee)\r\n            this.loadingData = false;\r\n          } else {\r\n            console.error('Error: Objeto comission o comission.comissions no definidos correctamente.');\r\n            this.loadingData = false;\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error('Error al obtener comisión:', error);\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  submit() {\r\n    if (this.viewMode === 'new') {\r\n      this.createComission(); // Lógica de creación\r\n    }\r\n  }\r\n}\r\n","<div class=\"breadcrumb\">\r\n    <h1 *ngIf=\"viewMode === 'new'\">Registrar Comision</h1>\r\n    <h1 *ngIf=\"viewMode === 'print'\">Ver Detalle de la Comision</h1>\r\n    <ul>\r\n        <li><a [routerLink]=\"['/comisiones']\">Comisiones</a></li>\r\n        <li *ngIf=\"viewMode === 'new'\">Registrar Comision</li>\r\n        <li *ngIf=\"viewMode === 'print'\">Ver Detalle de la Comision</li>\r\n    </ul>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"card mb-4\">\r\n            <div class=\"card-body\">\r\n                <div class=\"card-title mb-3\">Formulario de Comisiones</div>\r\n                <form [formGroup]=\"formBasic\" (ngSubmit)=\"submit()\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"id_employee\">Empleado</label>\r\n                            <div *ngIf=\"viewMode === 'new'\">\r\n                                <select class=\"form-control\" id=\"id_employee\"\r\n                                    formControlName=\"id_employee\" (change) = \"salesTotal()\">\r\n                                    <option value=\"\" disabled selected>Elija el empleado</option>\r\n                                    <option *ngFor=\"let employee of listEmployees\"\r\n                                        [value]=\"employee.id_employee\">\r\n                                        {{ employee.name_employee }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div *ngIf=\"viewMode === 'print'\">\r\n                                <input type=\"text\" class=\"form-control\" [readonly]=\"true\"\r\n                                    [ngClass]=\"{'placeholder-black': viewMode === 'print'}\"\r\n                                    [value]=\"selectedEmployee\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"id_comission_detail\">Mes comisión</label>\r\n                            <div *ngIf=\"viewMode === 'new'\">\r\n                                <select class=\"form-control\" id=\"id_comission_detail\"\r\n                                    formControlName=\"id_commission_detail\" (change)=\"updateCommissionPercentage()\">\r\n                                    <option value=\"\" disabled selected>Elija el mes de la comisión</option>\r\n                                    <option *ngFor=\"let detail of listComisionDetail\"\r\n                                        [value]=\"detail.id_commission_detail\">\r\n                                        {{ detail.month_commission | date: 'yyyy-MM' }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div *ngIf=\"viewMode === 'print'\">\r\n                                <input type=\"text\" class=\"form-control\" [readonly]=\"true\"\r\n                                    [ngClass]=\"{'placeholder-black': viewMode === 'print'}\"\r\n                                    [value]=\"selectedMonth | date: 'yyyy-MM'\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"total_commission\">Total comisión</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"total_commission\"\r\n                              [placeholder]=\"totalComs || 'Total Comisión'\" [readonly]=\"viewMode === 'print'\"\r\n                              [ngClass]=\"{'placeholder-black': viewMode === 'print'}\" formControlName=\"total_commission\">\r\n                          </div>\r\n\r\n                        \r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"commission_percentage\">Porcentaje de comisión</label>\r\n                            <input class=\"form-control\" id=\"commission_percentage\" [readonly]=\"viewMode === 'print'\"\r\n                                formControlName=\"commission_percentage\"\r\n                                [placeholder]=\"selectedPercentage || 'Porcentaje'\"\r\n                                [ngClass]=\"{'placeholder-black': viewMode === 'print'}\">\r\n                        </div>\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"total_sales\">Total ventas</label>\r\n                            <input class=\"form-control\" id=\"total_sales\" [readonly]=\"viewMode === 'print'\"\r\n                                   [ngClass]=\"{'placeholder-black': viewMode === 'print'}\"\r\n                                   [placeholder]=\"totalSales || 'Total ventas'\" formControlName=\"total_sales\">\r\n                         </div>\r\n\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"d-flex justify-content-end\">\r\n                                <button class=\"btn btn-danger float-right\"\r\n                                    [routerLink]=\"['/comisiones']\">Volver</button>\r\n                                <div style=\"width: 10px;\"></div>\r\n                                <btn-loading *ngIf=\"viewMode === 'new'\" btnClass=\"btn-primary\"\r\n                                    [loading]=\"loading\">Registrar\r\n                                    Comisión</btn-loading>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- <div class=\"col-md-6 form-group mb-3\">\r\n    <label for=\"id_comission_detail\">Mes comisión</label>\r\n    <div *ngIf=\"viewMode === 'new'\">\r\n        <select class=\"form-control\" id=\"id_comission_detail\"\r\n            formControlName=\"id_commission_detail\" (change)=\"updateCommissionPercentage()\">\r\n            <option value=\"\" disabled selected>Elija el mes de la comisión</option>\r\n            <option *ngFor=\"let detail of listComisionDetail\"\r\n                [value]=\"detail.id_commission_detail\">\r\n                {{ detail.month_commission | date: 'yyyy-MM' }}</option>\r\n        </select>\r\n    </div>\r\n    <div *ngIf=\"viewMode === 'print'\">\r\n        <input type=\"text\" class=\"form-control\" [readonly]=\"true\"\r\n            [ngClass]=\"{'placeholder-black': viewMode === 'print'}\"\r\n            [value]=\"comission?.month_commission\">\r\n    </div>\r\n</div> -->\r\n\r\n<!-- <div class=\"col-md-6 form-group mb-3\">\r\n    <label for=\"id_comission_detail\">Mes comisión</label>\r\n\r\n    <select class=\"form-control\" id=\"id_comission_detail\" [disabled]=\"viewMode === 'print'\"\r\n        *ngIf=\"viewMode === 'print'; else commisionNewMode\"\r\n        (change)=\"updateCommissionPercentage()\">\r\n        <option>{{ selectedMonth | date: 'yyyy-MM'}}</option>\r\n    </select>\r\n    <ng-template #commisionNewMode>\r\n        <select class=\"form-control\">\r\n            <option *ngFor=\"let detail of listComisionDetail\"\r\n                [value]=\"detail.id_commission_detail\">\r\n                {{ detail.month_commission | date: 'yyyy-MM' }}</option>\r\n        </select>\r\n    </ng-template>\r\n</div> -->","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ComissionsService } from 'src/app/shared/services/comission.service';\r\nimport { UntypedFormControl } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    selector: 'app-comission-list',\r\n    templateUrl: './comission-list.component.html',\r\n    styleUrls: ['./comission-list.component.scss']\r\n})\r\nexport class ComissionListComponent implements OnInit {\r\n    loading: boolean;\r\n    details: any[] = [];\r\n    months = [\r\n        { value: 1, label: 'Enero' },\r\n        { value: 2, label: 'Febrero' },\r\n        { value: 3, label: 'Marzo' },\r\n        { value: 4, label: 'Abril' },\r\n        { value: 5, label: 'Mayo' },\r\n        { value: 6, label: 'Junio' },\r\n        { value: 7, label: 'Julio' },\r\n        { value: 8, label: 'Agosto' },\r\n        { value: 9, label: 'Septiembre' },\r\n        { value: 10, label: 'Octubre' },\r\n        { value: 11, label: 'Noviembre' },\r\n        { value: 12, label: 'Diciembre' },\r\n\r\n    ];\r\n    selectedMonth: number = new Date().getMonth() + 1;\r\n    listComissions: any[] = []\r\n    originalListComissions: any[] = [];\r\n    employees: any = {};\r\n    comissionDetails: any = {};\r\n    openedModal = false;\r\n    searchControl: UntypedFormControl = new UntypedFormControl();\r\n    filteredComissions;\r\n    commissionsMonth;\r\n    constructor(\r\n        private _comissionsService: ComissionsService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this._comissionsService.getAllComs().subscribe((res: any[]) => {\r\n            this.listComissions = res;\r\n            this._comissionsService.getAllEmployees().subscribe((employees: any[]) => {\r\n                employees.forEach(employee => {\r\n                    this.employees[employee.id_employee] = employee.name_employee;\r\n                });\r\n            });\r\n\r\n            this._comissionsService.getAllComsDetail().subscribe((details: any[]) => {\r\n                this.details = details;\r\n                // Crear un objeto que asocie los detalles de comisión con las comisiones principales\r\n                this.listComissions.forEach(comission => {\r\n                    const detail = details.find(detail => detail.id_commission_detail === comission.id_commission_detail);\r\n                    if (detail) {\r\n                        comission.month_commission = detail.month_commission;\r\n                        comission.commission_percentage = detail.commission_percentage;\r\n                    }\r\n                });\r\n                this.originalListComissions = res;\r\n                this.filterComissionsByMonth();\r\n                console.log(this.originalListComissions)\r\n            });\r\n\r\n        });\r\n    }\r\n    filterComissionsByMonth() {\r\n        const currentYear = new Date().getFullYear();\r\n        const selectedDate = `${currentYear}-${this.selectedMonth.toString().padStart(2, '0')}-01`;\r\n        const selectedDetail = this.details.find(detail => detail.month_commission === selectedDate);\r\n        if (selectedDetail) {\r\n            this.listComissions = this.originalListComissions.filter(comission => comission.id_commission_detail === selectedDetail.id_commission_detail);\r\n        } else {\r\n            this.listComissions = [];\r\n        }\r\n    }  \r\n    filterByMonth() {\r\n        this.filterComissionsByMonth();\r\n    }\r\n    paginationId: string = 'comissions-pagination';\r\n    currentPage: number = 1;\r\n    itemsPerPage: number = 6;\r\n    updateListComissions() {\r\n        const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n        let endIndex = startIndex + this.itemsPerPage;\r\n        const totalPages = Math.ceil(this.listComissions.length / this.itemsPerPage);\r\n\r\n        if (this.currentPage === totalPages) {\r\n            const remainingRows = this.listComissions.length % this.itemsPerPage\r\n            if (remainingRows > 0) {\r\n                endIndex = startIndex + remainingRows\r\n            }\r\n        }\r\n        const rowsToAdd = 6 - (endIndex % 6)\r\n        endIndex += rowsToAdd\r\n        this.filteredComissions = this.listComissions.slice(startIndex, endIndex)\r\n    }\r\n    pageChanged(event: any) {\r\n        this.currentPage = event.page;\r\n        this.updateListComissions();\r\n    }\r\n    onPageChange(event: any) {\r\n        this.currentPage = event.offset / this.itemsPerPage + 1;\r\n        this.updateListComissions();\r\n    }\r\n}\r\n","<div class=\"breadcrumb\">\r\n    <h1>CosmeTic</h1>\r\n    <ul>\r\n        <li><a href=\"\">Servicios</a></li>\r\n        <li>Comisiones</li>\r\n    </ul>\r\n</div>\r\n\r\n<div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n<div class=\"row mb-3\">\r\n    <div class=\"col-md-12 mb-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <button class=\"btn btn-primary float-right\" [routerLink]=\"['/comisiones/registrar']\">Crear nueva\r\n                            comisión</button>\r\n                    </div>\r\n                    <div class=\"col-md-5\">\r\n                        <button class=\"btn btn-primary float-right\" [routerLink]=\"['/detalleComs/registrar']\">Crear\r\n                            nuevo detalle de comisión</button>\r\n                    </div>\r\n                    <div class=\"col-md-3\">\r\n                        <select class=\"form-select\" [(ngModel)]=\"selectedMonth\"  (change)=\"filterByMonth()\">\r\n                            <option *ngFor=\"let month of months\" [value]=\"month.value\">{{ month.label }}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 d-flex justify-content-end\">\r\n                <input _ngcontent-vet-c167=\"\" id=\"email\" placeholder=\"Buscar Comisiones\" type=\"text\"\r\n                    class=\"form-control  ng-valid ng-touched ng-dirty\" ng-reflect-form=\"[object Object]\"\r\n                    style=\"width: 50%;\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n        <div class=\"card o-hidden\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card o-hidden\">\r\n                    <ngx-datatable class=\"material fullscreen\" style=\"height: 460px;\" [columnMode]=\"'force'\"\r\n                        [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\"\r\n                        [rows]=\"listComissions\" [externalPaging]=\"true\" [count]=\"listComissions.length\"\r\n                        [limit]=\"itemsPerPage\" [offset]=\"(currentPage - 1) * itemsPerPage\"\r\n                        (page)=\"onPageChange($event)\">\r\n                        <ngx-datatable-column name=\"id_employee\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Empleado\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                {{ employees[row.id_employee] }}\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n                        <ngx-datatable-column name=\"total_commission\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Total Comisión\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                {{ row.total_commission }}\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n                        <ngx-datatable-column name=\"total_sales\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Total Ventas\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                {{ row.total_sales }}\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n                        <ngx-datatable-column name=\"month_commission\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Mes Comisión\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                {{ row.month_commission }}\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n\r\n                        <ngx-datatable-column name=\"commission_percentage\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Porcentaje Comisión\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                {{ row.commission_percentage }}\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n                        <ngx-datatable-column [width]=\"120\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Acciones\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                <button class=\"btn btn-dark m-1 me-3\"\r\n                                    [routerLink]=\"['/comisiones/detalle', row.id_commission]\">\r\n                                    <i class=\"i-Eye\"></i>\r\n                                </button>\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n                    </ngx-datatable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Agrega los controles de paginación justo debajo de la tabla -->\r\n<pagination-template (pageChange)=\"pageChanged($event)\" [id]=\"paginationId\"></pagination-template>\r\n\r\n<ng-template #changeStateModal let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"Cambiar estado\" id=\"modal-title\">Cambiar Estado del Proveedor</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\"\r\n            (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p><strong>¿Está seguro de que desea inhabilitar este proveedor?</strong></p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\"\r\n            (click)=\"modal.dismiss('cancel')\">Cancelar</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\"\r\n            (click)=\"modal.close('Yes')\">Aceptar</button>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ComissionsDetailComponent } from './comission-detail/comission-detail.component';\r\nimport { ComissionListComponent } from './comission-list/comission-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ComissionListComponent\r\n    },\r\n    {\r\n        path: 'registrar', \r\n        component: ComissionsDetailComponent\r\n    },\r\n    {\r\n        path: 'detalle/:id_commission',\r\n        component: ComissionsDetailComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComissionRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { ComissionsDetailComponent } from './comission-detail/comission-detail.component';\r\nimport { ComissionListComponent } from './comission-list/comission-list.component';\r\nimport { ComissionRoutingModule } from './comission-routing.module';\r\n\r\n// Importa NgxPaginationModule\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    SharedComponentsModule,\r\n    NgbModule,\r\n    ComissionRoutingModule,\r\n    NgxPaginationModule, // Agrega esta línea\r\n  ],\r\n  declarations: [ComissionsDetailComponent, ComissionListComponent]\r\n})\r\nexport class ComissionModule { }\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}