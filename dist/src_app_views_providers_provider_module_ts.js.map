{"version":3,"file":"src_app_views_providers_provider_module_ts.js","mappings":"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","sources":["./src/app/shared/services/provider.service.ts","./src/app/views/providers/provider-detail/provider-detail.component.ts","./src/app/views/providers/provider-detail/provider-detail.component.html","./src/app/views/providers/provider-list/provider-list.component.ts","./src/app/views/providers/provider-list/provider-list.component.html","./src/app/views/providers/provider-routing.module.ts","./src/app/views/providers/provider.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProvidersService {\r\n\r\n  private baseUrl = 'https://api-cosmetic-w32d.onrender.com/api/providers';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createProvider(providerData: any): Observable<any> {\r\n    return this.http.post(this.baseUrl, providerData);\r\n  }\r\n  \r\n  getAllProviders(): Observable<any> {\r\n    return this.http.get(this.baseUrl);\r\n  }\r\n\r\n  getProviderById(providerId: number): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/${providerId}`);\r\n  }\r\n\r\n  updateProviderStatus(providerId: any): Observable<any> {\r\n    return this.http.put(`${this.baseUrl}/state/${providerId}`, null);\r\n  }\r\n\r\n  updateProvider(providerId: any, updatedProviderData: any):\r\n  Observable<any> {\r\n    return this.http.put(`${this.baseUrl}/${providerId}`, updatedProviderData);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validator } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProvidersService } from 'src/app/shared/services/provider.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\ninterface Provider {\r\n  name_provider: string;\r\n  nit_cedula: string;\r\n  email_provider: string;\r\n  address_provider: string;\r\n  phone_provider: string;\r\n  state_provider: string;\r\n  observation_provider: string;\r\n  name_contact: string;\r\n  creation_date_provider: Date;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-providers-detail',\r\n  templateUrl: './provider-detail.component.html',\r\n  styleUrls: ['./provider-detail.component.scss']\r\n})\r\n\r\nexport class ProvidersDetailComponent implements OnInit {\r\n  loading: boolean;\r\n  formBasic: FormGroup;\r\n  viewMode: 'new' | 'edit' | 'print' = 'new';\r\n  id: string;\r\n  isNew: boolean;\r\n  provider: Provider = {\r\n    name_provider: '',\r\n    state_provider: 'Activo',\r\n    nit_cedula: '',\r\n    email_provider: '',\r\n    address_provider: '',\r\n    phone_provider: '',\r\n    observation_provider: '',\r\n    name_contact: '',\r\n    creation_date_provider: new Date(),\r\n  };\r\n  new_provider = {\r\n    name_provider: '',\r\n    state_provider: 'Activo',\r\n    nit_cedula: '',\r\n    email_provider: '',\r\n    address_provider: '',\r\n    phone_provider: '',\r\n    observation_provider: '',\r\n    name_contact: '',\r\n    creation_date_provider: new Date(),\r\n  };\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private _providersService: ProvidersService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.formBasic = this.formBuilder.group({});\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.isNew = !this.id;\r\n    this.buildProvidersForm(this.provider);\r\n    this.setViewMode();\r\n    this.getProvider();\r\n    if (!this.isNew) {\r\n      this.getProvider();\r\n    }\r\n  }\r\n\r\n  updatedFields: any = {};\r\n\r\n  buildProvidersForm(i: any = {}) {\r\n    this.formBasic = this.formBuilder.group({\r\n      id: [i.id_provider],\r\n      name_provider: [i.name_provider],\r\n      nit_cedula: [i.nit_cedula],\r\n      email_provider: [i.email_provider],\r\n      address_provider: [i.address_provider],\r\n      phone_provider: [i.phone_provider],\r\n      state_provider: [i.state_provider],\r\n      observation_provider: [i.observation_provider],\r\n      name_contact: [i.name_contact],\r\n      creation_date_provider: [i.creation_date_provider],\r\n    });\r\n  }\r\n  setViewMode() {\r\n\r\n    const currentRoute = this.router.url;\r\n\r\n    if (currentRoute.includes('/registrar')) {\r\n      this.viewMode = 'new';\r\n    } else if (currentRoute.includes('/editar/')) {\r\n      this.viewMode = 'edit';\r\n\r\n    } else if (currentRoute.includes('/detalle/')) {\r\n      this.viewMode = 'print';\r\n    }\r\n    console.log('viewMode:', this.viewMode);\r\n  }\r\n  getProvider() {\r\n    this.id = this.route.snapshot.params['id_provider'];\r\n    console.log(this.id);\r\n\r\n    const providerId = parseInt(this.id, 10); // Convierte this.id a un número\r\n\r\n    this._providersService.getProviderById(providerId).subscribe(\r\n      (data) => {\r\n        this.provider = data;\r\n        console.log(this.provider);\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener proveedor:', error);\r\n      }\r\n    );\r\n  }\r\n  handleStateSelection(event: any) {\r\n    this.new_provider.state_provider = event.target.value;\r\n  }\r\n  handleNameProviderSelection(event: any) {\r\n    this.new_provider.name_provider = event.target.value;\r\n    this.updatedFields.name_provider = event.target.value;\r\n  }\r\n  handleNameContactSelection(event: any) {\r\n    this.new_provider.name_contact = event.target.value;\r\n    this.updatedFields.name_contact = event.target.value;\r\n  }\r\n  handleNitSelection(event: any) {\r\n    this.new_provider.nit_cedula = event.target.value;\r\n  }\r\n  handleMailSelection(event: any) {\r\n    this.new_provider.email_provider = event.target.value;\r\n    this.updatedFields.email_provider = event.target.value;\r\n  }\r\n  handleAddressSelection(event: any) {\r\n    this.new_provider.address_provider = event.target.value;\r\n    this.updatedFields.address_provider = event.target.value;\r\n  }\r\n  handleObservationSelection(event: any) {\r\n    this.new_provider.observation_provider = event.target.value;\r\n    this.updatedFields.observation_provider = event.target.value;\r\n  }\r\n  handlePhoneSelection(event: any) {\r\n    this.new_provider.phone_provider = event.target.value;\r\n    this.updatedFields.phone_provider = event.target.value;\r\n  }\r\n  \r\n\r\n  createProvider() {\r\n    const currentRoute = this.router.url;\r\n    console.log(currentRoute);\r\n  \r\n    if (currentRoute.includes('/registrar')) {\r\n      console.log(this.new_provider);\r\n      \r\n      this._providersService.createProvider(this.new_provider).subscribe(\r\n        (data) => {\r\n          console.log(data);\r\n          this.loading = true;\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.toastr.success('Proveedor creado con éxito.', 'Proceso Completado', { progressBar: true, timeOut: 3000 });\r\n            setTimeout(() => {\r\n              this.router.navigate(['/proveedores']);\r\n            }, 3000);\r\n          }, 3000);\r\n        },\r\n        (error) => {\r\n          this.loading = false;\r\n          this.toastr.error('Fallo al crear el proveedor.', 'Error', { progressBar: true });\r\n          console.error('Error al crear el proveedor:', error);\r\n        }\r\n      );\r\n    }\r\n    this.loading = true;\r\n  }\r\n\r\n  updateProvider() {\r\n    const currentRoute = this.router.url;\r\n    if (currentRoute.includes('/editar')) {\r\n      this._providersService.updateProvider(this.id, this.updatedFields).subscribe(\r\n        (data) => {\r\n          console.log(data);\r\n          this.loading = true;\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.toastr.success('Proveedor actualizado con éxito.', 'Proceso Completado', { progressBar: true, timeOut: 3000 });\r\n            setTimeout(() => {\r\n              this.router.navigate(['/proveedores']);\r\n            }, 3000);\r\n          }, 3000);\r\n        },\r\n        (error) => {\r\n          this.loading = false;\r\n          this.toastr.error('Fallo al actualizar el proveedor.', 'Error', { progressBar: true });\r\n          console.error('Error al actualizar el proveedor:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    if (this.viewMode === 'new') {\r\n      this.createProvider(); // Lógica de creación\r\n    } else if (this.viewMode === 'edit') {\r\n      this.updateProvider(); // Lógica de edición\r\n    }\r\n  }\r\n}\r\n","<div class=\"breadcrumb\">\r\n    <h1 *ngIf=\"viewMode === 'new'\">Registrar Proveedor</h1>\r\n    <h1 *ngIf=\"viewMode === 'edit'\">Editar Proveedor</h1>\r\n    <h1 *ngIf=\"viewMode === 'print'\">Ver Detalle de Proveedor</h1>\r\n    <ul>\r\n        <li><a [routerLink]=\"['/proveedores']\">Proveedores</a></li>\r\n        <li *ngIf=\"viewMode === 'new'\">Registrar Proveedor</li>\r\n        <li *ngIf=\"viewMode === 'edit'\">Editar Proveedor</li>\r\n        <li *ngIf=\"viewMode === 'print'\">Ver Detalle de Proveedor</li>\r\n    </ul>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"card mb-4\">\r\n            <div class=\"card-body\">\r\n                <div class=\"card-title mb-3\">Formulario de Proveedor</div>\r\n                <form [formGroup]=\"formBasic\" (ngSubmit)=\"submit()\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"nit_cedula\">Cédula o NIT del proveedor</label>\r\n\r\n                            <input type=\"number\" class=\"form-control\" id=\"nit_cedula\" (change)=\"handleNitSelection($event)\"\r\n                              [placeholder]=\"provider?.nit_cedula || 'Ingrese la cédula o NIT'\" \r\n                              [readonly]=\"viewMode === 'print' || viewMode === 'edit'\"\r\n                              [ngClass]=\"{'placeholder-black': viewMode === 'print'}\">  \r\n                          </div>\r\n\r\n\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"name_provider\">Nombre del proveedor</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"name_provider\"(change)=\"handleNameProviderSelection($event)\"\r\n                                [placeholder]=\"provider?.name_provider || 'Nombre del proveedor'\"\r\n                                [readonly]=\"viewMode === 'print'\"\r\n                                [ngClass]=\"{'placeholder-black': viewMode === 'print'}\">\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"email_provider\">Correo del proveedor</label>\r\n                            <input type=\"email\" class=\"form-control\" id=\"email_provider\"(change)=\"handleMailSelection($event)\"\r\n                                [placeholder]=\"provider?.email_provider || 'Correo del proveedor'\"\r\n                                [readonly]=\"viewMode === 'print'\"\r\n                                [ngClass]=\"{'placeholder-black': viewMode === 'print'}\">\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"address_provider\">Dirección del proveedor</label>\r\n                            <input class=\"form-control\" id=\"address_provider\"(change)=\"handleAddressSelection($event)\"\r\n                                [placeholder]=\"provider?.address_provider || 'Dirección del proveedor'\"\r\n                                [readonly]=\"viewMode === 'print'\"\r\n                                [ngClass]=\"{'placeholder-black': viewMode === 'print'}\">\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"phone_provider\">Teléfono del proveedor</label>\r\n                            <input class=\"form-control\" id=\"phone_provider\"(change)=\"handlePhoneSelection($event)\"\r\n                                [placeholder]=\"provider?.phone_provider || 'Teléfono del proveedor'\"\r\n                                [readonly]=\"viewMode === 'print'\"\r\n                                [ngClass]=\"{'placeholder-black': viewMode === 'print'}\">\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-md-6 form-group mb-3\" *ngIf=\"viewMode !== 'new' && viewMode !== 'edit'\">\r\n                            <label for=\"creation_date_provider\">Fecha de creación</label>\r\n                            <input type=\"date\" class=\"form-control\" id=\"creation_date_provider\"\r\n                                [placeholder]=\"viewMode === 'print' ? 'Fecha de creación' : ''\"\r\n                                [readonly]=\"viewMode === 'print' || viewMode === 'edit'\"\r\n                                [ngClass]=\"{'gray-text': viewMode === 'edit'}\"\r\n                                [value]=\"provider?.creation_date_provider | date:'yyyy-MM-dd'\">\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"name_contact\">Nombre del contacto</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"name_contact\"(change)=\"handleNameContactSelection($event)\"\r\n                                [placeholder]=\"provider?.name_contact || 'Nombre del contacto'\"\r\n                                [readonly]=\"viewMode === 'print'\"\r\n                                [ngClass]=\"{'placeholder-black': viewMode === 'print'}\">\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6 form-group mb-3\" *ngIf=\"viewMode !== 'new' && viewMode !== 'edit'\">\r\n                            <label for=\"state_provider\">Estado del proveedor</label>\r\n                            <ng-container *ngIf=\"viewMode === 'edit'; else viewModeDisplay\">\r\n                                <select class=\"form-control\" id=\"state_provider\" (change)=\"handleStateSelection($event)\">\r\n                                    <option value=\"Activo\">Activo</option>\r\n                                    <option value=\"Inactivo\">Inactivo</option>\r\n                                </select>\r\n                            </ng-container>\r\n                            <ng-template #viewModeDisplay>\r\n                                <input type=\"text\" class=\"form-control\" id=\"state_provider\"\r\n                                    [placeholder]=\"provider?.state_provider || 'Estado del proveedor'\"\r\n                                    [readonly]=\"viewMode === 'print'\"\r\n                                    [ngClass]=\"{'placeholder-black': viewMode === 'print'}\">\r\n                            </ng-template>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-12 form-group mb-3\">\r\n                            <label for=\"observation_provider\">Observación del proveedor</label>\r\n                            <textarea class=\"form-control\" id=\"observation_provider\"(change)=\"handleObservationSelection($event)\"\r\n                                [placeholder]=\"provider?.observation_provider || 'Observación del proveedor'\"\r\n                                [readonly]=\"viewMode === 'print'\"\r\n                                [ngClass]=\"{'placeholder-black': viewMode === 'print'}\" style=\"resize: none;\" rows=\"6\"></textarea>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"d-flex justify-content-end\">\r\n                                <button class=\"btn btn-danger float-right\"\r\n                                    [routerLink]=\"['/proveedores']\">Volver</button>\r\n                                <div style=\"width: 10px;\"></div>\r\n                                <btn-loading *ngIf=\"viewMode === 'new'\" btnClass=\"btn-primary\"\r\n                                    [loading]=\"loading\">Registrar\r\n                                    Proveedor</btn-loading>\r\n                                <btn-loading *ngIf=\"viewMode === 'edit'\" btnClass=\"btn-primary\"\r\n                                    [loading]=\"loading\">Editar\r\n                                    Proveedor</btn-loading>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DataLayerService } from 'src/app/shared/services/data-layer.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ProvidersService } from 'src/app/shared/services/provider.service';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { PaginationControlsComponent } from 'ngx-pagination';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n    selector: 'app-provider-list',\r\n    templateUrl: './provider-list.component.html',\r\n    styleUrls: ['./provider-list.component.scss']\r\n})\r\nexport class ProviderListComponent implements OnInit {\r\n    loading: boolean;\r\n    listProviders: any[] = []\r\n    originalListProviders: any[] = [];\r\n    openedModal = false;\r\n    searchControl: UntypedFormControl = new UntypedFormControl();\r\n    providers;\r\n    filteredProviders;\r\n    paginationId: string = 'providers-pagination';\r\n\r\n    currentPage: number = 1;\r\n    itemsPerPage: number = 6;\r\n\r\n\r\n    onPageChange(event: any) {\r\n        this.currentPage = event.offset / this.itemsPerPage + 1;\r\n        this.updateListProviders();\r\n    }\r\n\r\n    constructor(\r\n        private _providersService: ProvidersService,\r\n        private modalService: NgbModal,\r\n        private toastr: ToastrService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this._providersService.getAllProviders()\r\n            .subscribe((res: any[]) => {\r\n                this.listProviders = [...res];\r\n                this.filteredProviders = res;\r\n                this.originalListProviders = [...res];\r\n            });\r\n\r\n        this.searchControl.valueChanges\r\n            .pipe(debounceTime(200))\r\n            .subscribe(value => {\r\n                this.filerData(value);\r\n            });\r\n    }\r\n\r\n    \r\n    updateListProviders() {\r\n        const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n        let endIndex = startIndex + this.itemsPerPage;\r\n        const totalPages = Math.ceil(this.listProviders.length / this.itemsPerPage);\r\n\r\n        if (this.currentPage === totalPages) {\r\n            const remainingRows = this.listProviders.length%this.itemsPerPage\r\n            if (remainingRows > 0) {\r\n                endIndex = startIndex + remainingRows\r\n            }\r\n        }\r\n\r\n        const rowsToAdd = 6 -(endIndex % 6)\r\n        endIndex += rowsToAdd\r\n        this.filteredProviders = this.listProviders.slice(startIndex, endIndex)\r\n    }\r\n\r\n    pageChanged(event: any) {\r\n        this.currentPage = event.page;\r\n        this.updateListProviders();\r\n    }\r\n\r\n    filerData(val) {\r\n        if (val) {\r\n            val = val.toLowerCase();\r\n        } else {\r\n            return this.filteredProviders = [...this.providers];\r\n        }\r\n\r\n        const columns = Object.keys(this.providers[0]);\r\n        if (!columns.length) {\r\n            return;\r\n        }\r\n\r\n        const rows = this.providers.filter(function (d) {\r\n            for (let i = 0; i <= columns.length; i++) {\r\n                const column = columns[i];\r\n                if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n        });\r\n        this.filteredProviders = rows;\r\n    }\r\n\r\n    sortListProvidersById() {\r\n        this.listProviders.sort((a, b) => a.id_provider - b.id_provider);\r\n    }\r\n\r\n    getProviders() {\r\n        this._providersService.getAllProviders().subscribe(\r\n            (data) => {\r\n                this.listProviders = data;\r\n                this.sortListProvidersById();\r\n                location.reload();\r\n            },\r\n            (error) => {\r\n                console.error('Error al obtener los proveedores:', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    @ViewChild('changeStateModal', { static: true }) changeStateModal: any;\r\n\r\n    openModal(idProvider: number) {\r\n        this._providersService.getProviderById(idProvider).subscribe\r\n        if (!this.openedModal) {\r\n            this.openedModal = true;\r\n            this.modalService.open(this.changeStateModal, { centered: true }).result.then(\r\n                (result) => {\r\n                    if (result === 'Yes') {\r\n                        this._providersService.updateProviderStatus(idProvider).subscribe(\r\n                            (data) => {\r\n\r\n                                this.loading = false;\r\n                                this.toastr.success('Cambio de estado realizado con éxito.', 'Proceso Completado', { progressBar: true, timeOut: 2000 });\r\n                                console.log(data);\r\n\r\n                                setTimeout(() => {\r\n                                    location.reload();\r\n                                }, 2000);\r\n                            },\r\n                            (error) => {\r\n                                this.loading = false;\r\n                                this.toastr.error('Fallo al realizar el cambio de estado.', 'Error', { progressBar: true, timeOut: 2000 });\r\n                                console.error('Error al cambiar de estado:', error);\r\n                            }\r\n                        );\r\n                    } else if (result === 'Cancel') {\r\n                        this.openedModal = false;\r\n                        setTimeout(() => {\r\n                            location.reload();\r\n                        }, 2000);\r\n                    }\r\n                },\r\n                (reason) => {\r\n                    this.openedModal = false;\r\n                    location.reload();\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"breadcrumb\">\r\n    <h1>CosmeTic</h1>\r\n    <ul>\r\n        <li><a href=\"\">Compras</a></li>\r\n        <li>Proveedores</li>\r\n    </ul>\r\n</div>\r\n\r\n<div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n<div class=\"row mb-3\">\r\n    <div class=\"col-md-12 mb-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <button class=\"btn btn-primary float-right\" [routerLink]=\"['/proveedores/registrar']\">Crear nuevo proveedor</button>\r\n            </div>\r\n            <div class=\"col-md-6 d-flex justify-content-end\">\r\n                <input _ngcontent-vet-c167=\"\" id=\"email\" placeholder=\"Buscar Proveedires\" type=\"text\" class=\"form-control  ng-valid ng-touched ng-dirty\" ng-reflect-form=\"[object Object]\" style=\"width: 50%;\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <div class=\"col-md-12\">\r\n        <div class=\"card o-hidden\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card o-hidden\">\r\n                    <ngx-datatable\r\n                        class=\"material fullscreen\"\r\n                        style=\"height: 460px;\"\r\n                        [columnMode]=\"'force'\"\r\n                        [headerHeight]=\"50\"\r\n                        [footerHeight]=\"50\"\r\n                        [rowHeight]=\"60\"\r\n                        [scrollbarV]=\"true\"\r\n                        [rows]=\"listProviders\"\r\n                        [externalPaging]=\"true\"\r\n                        [count]=\"listProviders.length\"\r\n                        [limit]=\"itemsPerPage\"\r\n                        [offset]=\"(currentPage - 1) * itemsPerPage\"\r\n                        (page)=\"onPageChange($event)\">\r\n                        <!-- <ngx-datatable-column name=\"nit_cedula\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Cédula-NIT\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                {{ row.nit_cedula }}\r\n                            </ng-template>\r\n                        </ngx-datatable-column> -->\r\n                        <ngx-datatable-column name=\"name_provider\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Nombre proveedor\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                {{ row.name_provider }}\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n                        <!-- <ngx-datatable-column name=\"email_provider\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Correo\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                {{ row.email_provider }}\r\n                            </ng-template>\r\n                        </ngx-datatable-column> -->\r\n                        <!-- <ngx-datatable-column name=\"address_provider\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Dirección\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                {{ row.address_provider }}\r\n                            </ng-template>\r\n                        </ngx-datatable-column> -->\r\n                        <ngx-datatable-column name=\"phone_provider\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Teléfono\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                {{ row.phone_provider }}\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n                        <ngx-datatable-column name=\"name_contact\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Nombre contacto\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                {{ row.name_contact }}\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n                        <ngx-datatable-column name=\"state_provider\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Estado\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                {{ row.state_provider }}\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n                        <ngx-datatable-column [width]=\"120\">\r\n                            <ng-template ngx-datatable-header-template>\r\n                                Acciones\r\n                            </ng-template>\r\n                            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                                <button class=\"btn btn-dark m-1 me-3\" [routerLink]=\"['/proveedores/detalle', row.id_provider]\">\r\n                                    <i class=\"i-Eye\"></i> \r\n                                </button>\r\n                                <button class=\"btn btn-info m-1 me-3\" [routerLink]=\"['/proveedores/editar', row.id_provider]\">\r\n                                    <i class=\"i-Pen-4\"></i> \r\n                                </button>\r\n                                <label class=\"switch switch-success me-3\" (click)=\"openModal(row.id_provider)\">\r\n                                    <input type=\"checkbox\" [checked]=\"row.state_provider === 'Activo' || row.state_provider === 'Active'\">\r\n                                    <span class=\"slider\"></span>\r\n                                </label>\r\n                            </ng-template>\r\n                        </ngx-datatable-column>\r\n                    </ngx-datatable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Agrega los controles de paginación justo debajo de la tabla -->\r\n<pagination-template\r\n    (pageChange)=\"pageChanged($event)\"\r\n    [id]=\"paginationId\"\r\n    \r\n></pagination-template>\r\n\r\n<ng-template #changeStateModal let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"Cambiar estado\" id=\"modal-title\">Cambiar Estado del Proveedor</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\"\r\n            (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p><strong>¿Está seguro de que desea inhabilitar este proveedor?</strong></p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\"\r\n            (click)=\"modal.dismiss('cancel')\">Cancelar</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\"\r\n            (click)=\"modal.close('Yes')\">Aceptar</button>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProvidersDetailComponent } from './provider-detail/provider-detail.component';\r\nimport { ProviderListComponent } from './provider-list/provider-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ProviderListComponent\r\n    },\r\n    {\r\n        path: 'registrar', \r\n        component: ProvidersDetailComponent\r\n    },\r\n    {\r\n        path: 'editar/:id_provider',\r\n        component: ProvidersDetailComponent\r\n    },\r\n    {\r\n        path: 'detalle/:id_provider',\r\n        component: ProvidersDetailComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProviderRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { ProvidersDetailComponent } from './provider-detail/provider-detail.component';\r\nimport { ProviderListComponent } from './provider-list/provider-list.component';\r\nimport { ProviderRoutingModule } from './provider-routing.module';\r\n\r\n// Importa NgxPaginationModule\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    SharedComponentsModule,\r\n    NgbModule,\r\n    ProviderRoutingModule,\r\n    NgxPaginationModule, // Agrega esta línea\r\n  ],\r\n  declarations: [ProvidersDetailComponent, ProviderListComponent]\r\n})\r\nexport class ProviderModule { }\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}