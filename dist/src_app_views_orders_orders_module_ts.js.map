{"version":3,"file":"src_app_views_orders_orders_module_ts.js","mappings":";;;;;;;;;;;;;;;;;AAOO,MAAM,aAAa;IAGxB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF1B,QAAG,GAAG,mDAAmD,CAAC;IAGtD,CAAC;IAEL,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oDAAoD,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;IAC/E,CAAC;IAED,cAAc;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;IAC9E,CAAC;IAED,YAAY,CAAC,EAAO;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,iBAAiB,CAAC,EAAO;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,gBAAgB,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7D,CAAC;;0EA7BU,aAAa;8GAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IELpB,yEAA2C;IAEpB,sEAAW;IAAA,4DAAM;;;IAKpC,qEAA+B;IAAA,2EAAgB;IAAA,4DAAK;;;IACpD,qEAAkC;IAAA,gFAAqB;IAAA,4DAAK;;;IAG1D,qEAA+B;IAAA,2EAAgB;IAAA,4DAAK;;;IACpD,qEAAkC;IAAA,gFAAqB;IAAA,4DAAK;;;IAalD,6EAKC;IACS,uDAAqB;IAAA,4DAAS;;;IAHtC,kGAAkC;IAG1B,0DAAqB;IAArB,uFAAqB;;;IAK3B,6EAGC;IACC,uDACF;IAAA,4DAAS;;;IAHP,uFAA0B;IAE1B,0DACF;IADE,kGACF;;;IAPF,6EAA6B;IACR,2FAAgC;IAAA,4DAAS;IAC5D,6IAKS;IACX,4DAAS;;;IALc,0DAAc;IAAd,uFAAc;;;IAWvC,6EAKC;IACS,uDAAuB;IAAA,4DAAS;;;IAHxC,kGAAkC;IAG1B,0DAAuB;IAAvB,yFAAuB;;;IAO7B,6EAGC;IACC,uDACF;IAAA,4DAAS;;;IAHP,2FAA8B;IAE9B,0DACF;IADE,sGACF;;;IATF,6EAA6B;IAEzB,8FACF;IAAA,4DAAS;IACT,6IAKS;IACX,4DAAS;;;IALgB,0DAAgB;IAAhB,0FAAgB;;;IAW3C,6EAKC;IACS,uDAA2B;IAAA,4DAAS;;;IAH5C,mGAAkC;IAG1B,0DAA2B;IAA3B,8FAA2B;;;IAGnC,6EAA+C;IACnB,kEAAO;IAAA,4DAAS;IAC1C,6EAA0B;IAAA,uEAAO;IAAA,4DAAS;;;IADlC,0DAAiB;IAAjB,kFAAiB;IACjB,0DAAiB;IAAjB,kFAAiB;;;IAmCnB,6EAGC;IACC,uDACF;IAAA,4DAAS;;;IAHP,yFAA4B;IAE5B,0DACF;IADE,oGACF;;;IAIF,uEAQE;;IAFA,0EAAiB;;;;IAqBnB,6EAIC;IADC,wZAAS,sFAAgB,KAAC;IAE1B,mEAA6B;IAC/B,4DAAS;;;;IACT,0EAGC;IAGG,kUAAS,8EAAY,KAAC;IAEtB,8DACF;IAAA,4DAAS;;;;IAnEf,yEAMC;IACiB,uDAAW;IAAA,4DAAK;IAChC,qEAAI;IAKA,wXAAU,uGAAiC,KAAC;IAE5C,mJAKS;IACX,4DAAS;IAEX,qEAAI;IACF,iJAQE;IACJ,4DAAK;IACL,qEAAI;IAKA,uXAAU,uGAAiC,KAAC;IAJ9C,4DAKE;IAEJ,sEAAI;IACF,wEAKE;IACJ,4DAAK;IACL,0EAA2C;IACzC,qJAMS;IACT,+IAUM;IACR,4DAAK;;;;IAhEL,gFAAmB;IAEH,0DAAW;IAAX,0EAAW;IASD,0DAAe;IAAf,yFAAe;IAepC,0DAAwB;IAAxB,4FAAwB;IAgBzB,0DAAiB;IAAjB,0EAAiB;IAKhB,0DAA0B;IAA1B,8FAA0B;IAQ1B,0DAAiD;IAAjD,yHAAiD;;;IA7D1D,wEAA0D;IACxD,uIAsEK;IACP,qEAAe;;;IArE4B,0DAEpD;IAFoD,uGAEpD;;;IAqEW,qEAKC;IACiB,uDAAW;IAAA,4DAAK;IAChC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IAAA,uDAA2B;IAAA,4DAAK;IACpC,qEAAI;IAAA,uDAA8B;IAAA,4DAAK;IACvC,qEAAI;IAAA,wDAA8B;IAAA,4DAAK;;;;IAJvB,0DAAW;IAAX,0EAAW;IACvB,0DAAwB;IAAxB,uFAAwB;IACxB,0DAA2B;IAA3B,0FAA2B;IAC3B,0DAA8B;IAA9B,6FAA8B;IAC9B,0DAA8B;IAA9B,6FAA8B;;;IAVpC,sIAWK;;;IAToC,kGAEpD;;;IA6BO,qEAA0D;;;IAC1D,kFAIG;IAAA,uEAAY;IAAA,4DACd;;;IAFC,oFAAmB;;;;;IAjNrC,yEAAuD;IAEnD,qHAAoD;IACpD,qHAA4D;IAC5D,qEAAI;IACgC,kEAAO;IAAA,4DAAI;IAC7C,qHAAoD;IACpD,qHAA4D;IAC9D,4DAAK;IAGP,0EAAiB;IAIoB,gFAAoB;IAAA,4DAAM;IACvD,4EAAyD;IAA3B,0SAAY,+EAAa,KAAC;IACtD,0EAAiB;IAEU,mEAAO;IAAA,4DAAQ;IACtC,gIAOS;IACT,sNAUc;IAChB,4DAAM;IAEN,2EAAsC;IACX,oEAAQ;IAAA,4DAAQ;IACzC,gIAOS;IACT,sNAYc;IAChB,4DAAM;IAEN,2EAAsC;IACV,wEAAY;IAAA,4DAAQ;IAC9C,gIAOS;IACT,sNAKc;IAChB,4DAAM;IAGR,2EAAyC;IAIjB,6DAAC;IAAA,4DAAK;IACtB,0EAAgB;IAAA,+EAAmB;IAAA,4DAAK;IACxC,0EAAgB;IAAA,2EAAe;IAAA,4DAAK;IACpC,0EAAgB;IAAA,oEAAQ;IAAA,4DAAK;IAC7B,0EAAgB;IAAA,oEAAQ;IAAA,4DAAK;IAC7B,0EAAgB;IAAA,oEAAQ;IAAA,4DAAK;IAGjC,6EAAgC;IAC9B,4IAwEe;IACf,sNAac;IAChB,4DAAQ;IAEV,2EAA0B;IACxB,sEAA4B;IAC5B,2EAAsB;IAElB,wDAEF;IAAA,4DAAM;IAIZ,2EAAgD;IAM1C,oEACF;IAAA,4DAAS;IACT,0HAA0D;IAC1D,0IAKC;IACH,4DAAM;;;;;;;IAlNX,0DAAwB;IAAxB,2FAAwB;IACxB,0DAA2B;IAA3B,8FAA2B;IAEvB,0DAA0B;IAA1B,8IAA0B;IAC5B,0DAAwB;IAAxB,2FAAwB;IACxB,0DAA2B;IAA3B,8FAA2B;IAStB,0DAAuB;IAAvB,uFAAuB;IAQpB,0DAA6B;IAA7B,8FAA6B;IAuB7B,0DAA6B;IAA7B,8FAA6B;IAyB7B,0DAA6B;IAA7B,8FAA6B;IA0Bf,2DAA0B;IAA1B,2FAA0B;IA6FvC,0DAEF;IAFE,yJAEF;IAQA,0DAA0B;IAA1B,8IAA0B;IAItB,0DAAwB;IAAxB,2FAAwB;IAE3B,0DAAwB;IAAxB,2FAAwB;;ADzMpC,MAAM,qBAAqB;IA0BhC,YACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,cAA6B,EAC7B,MAAqB;QAJrB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAe;QAC7B,WAAM,GAAN,MAAM,CAAe;QArB/B,oCAAoC;QACpC,aAAQ,GAAqB,KAAK,CAAC;QAInC,WAAM,GAAQ,EAAE,CAAC;QACjB,UAAK,GAAQ,EAAE,CAAC;QAChB,gBAAW,GAAU,EAAE,CAAC;QACxB,kBAAa,GAAU,EAAE,CAAC;QAC1B,iBAAY,GAAU,EAAE,CAAC;QACzB,0BAAqB,GAAU,EAAE,CAAC;QAClC,qBAAgB,GAAW,CAAC,CAAC;QAY3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,QAAQ;QACN,MAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC/C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC1C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAChE,CAAC;IAED,gFAAgF;IAEhF,+EAA+E;IAC/E,WAAW;QACT,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QACrC,IAAI,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;aAAM,IAAI,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC5C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;IACH,CAAC;IAED,sEAAsE;IAEtE,+CAA+C;IAC/C,QAAQ;QACN,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QACrC,IAAI,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YACrC,2DAA2D;YAC3D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CACjD,CAAC,IAAI,EAAE,EAAE;gBACP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC;gBAC5C,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC;gBAChD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAE/C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;gBAE3D,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;gBAEtD,8DAA8D;gBAC9D,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACR,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;gBACpD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,iEAAiE;YAC7F,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAED,6FAA6F;IAC7F,aAAa,CAAC,QAAgB,EAAE,UAAkB,EAAE,QAAa;QAC/D,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC;QAE1D,8BAA8B;QAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAClC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,SAAS,KAAK,QAAQ,CAC1C,CAAC;QACF,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,WAAW,CAAC;SAC3C;QAED,+BAA+B;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CACtC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,WAAW,KAAK,UAAU,CAClD,CAAC;QACF,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC;SACjD;QAED,4CAA4C;QAC5C,IAAI,QAAQ,CAAC,YAAY,EAAE;YACzB,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC,YAAY,CAAC;SACpD;aAAM;YACL,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC;SACvC;QAED,mDAAmD;QACnD,IACE,IAAI,CAAC,iBAAiB,KAAK,SAAS;YACpC,IAAI,CAAC,eAAe,KAAK,SAAS,EAClC;YACA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,QAAQ,CAAC,MAAM,EAAE,CAAC;SACnB;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC1C,CAAC;IAED,yCAAyC;IACzC,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAC3C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;QACrD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,0CAA0C;IAC1C,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,SAAS,CAC7C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAClC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACtD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,0CAA0C;IAC1C,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAC5C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACtD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,kEAAkE;IAClE,eAAe,CAAC,SAAiB;QAC/B,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC;QAC1E,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;IACjD,CAAC;IAED,8EAA8E;IAE9E,kDAAkD;IAClD,kBAAkB;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,QAAQ,EAAE,CAAC,EAAE,CAAC;SACf,CAAC,CAAC;IACL,CAAC;IAED,kDAAkD;IAClD,sBAAsB,CAAC,KAAU,EAAE,CAAS;QAC1C,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB;aAC7C,EAAE,CAAC,CAAC,CAAC;aACL,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAE3B,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAC5C,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,UAAU,IAAI,iBAAiB,CACrD,CAAC;QACF,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,iBAAiB;iBACnB,EAAE,CAAC,CAAC,CAAC;iBACL,GAAG,CAAC,WAAW,CAAC;iBAChB,QAAQ,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;YAE3C,kCAAkC;YAClC,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YAEjE,qEAAqE;YACrE,MAAM,QAAQ,GAAG,eAAe,CAAC,aAAa,GAAG,SAAS,CAAC;YAE3D,wDAAwD;YACxD,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SACjE;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;YACvC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC9D;IACH,CAAC;IAED,sDAAsD;IACtD,UAAU;QACR,MAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC/C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC1C,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;QAC5E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACrC,CAAC;IAED,kDAAkD;IAClD,aAAa,CAAC,KAAa;QACzB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;QAC5E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACrC,CAAC;IAED,cAAc;QACZ,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;YACpE,IAAI,QAAQ,EAAE;gBACZ,KAAK,IAAI,QAAQ,CAAC;aACnB;SACF;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpC,OAAO,KAAK,CAAC;IACf,CAAC;IAED,8EAA8E;IAE9E,WAAW;QACT,4CAA4C;IAC9C,CAAC;;0FA1PU,qBAAqB;mHAArB,qBAAqB;QCXlC,iHAGM;QAEN,mHA2NM;;QAhOkB,iFAAiB;QAKvB,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;;;;;;;;;;;ACLyC;AAIZ;AACT;;;;;;;;;;;ICKpD,yEAAsD;IAElD,oEAAgD;IAClD,4DAAM;;;IAmDM,wEAA2B;IAAA,kEAAE;IAAA,4DAAI;;;IAOjC,wEAA0C;IACxC,wEAEC;IACC,uDACF;IAAA,4DAAI;IACN,qEAAe;;;IAFX,0DACF;IADE,gGACF;;;IALF,uJAMe;;;IANA,6FAAyB;;;IAgBxC,wEAAgD;IAAA,kEAAO;IAAA,4DAAI;;;IAO3D,wEAA0C;IACxC,wEAEC;IACC,uDACF;IAAA,4DAAI;IACN,qEAAe;;;IAFX,0DACF;IADE,6FACF;;;IALF,uJAMe;;;IANA,6FAAyB;;;IAgBxC,wEAAgD;IAAA,0EAAe;IAAA,4DAAI;;;IAOnE,wEAA0C;IACxC,wEAEC;IACC,uDACF;IAAA,4DAAI;IACN,qEAAe;;;IAFX,0DACF;IADE,8FACF;;;IALF,uJAMe;;;IANA,6FAAyB;;;IAgBxC,wEAA2B;IAAA,2EAAgB;IAAA,4DAAI;;;IAO/C,wEAA0C;IACxC,wEAEC;IACC,uDACF;IAAA,4DAAI;IACN,qEAAe;;;IAFX,0DACF;IADE,+FACF;;;IALF,uJAMe;;;IANA,6FAAyB;;;IAgBxC,wEAAgD;IAAA,4EAAiB;IAAA,4DAAI;;;IAOrE,wEAA0C;IACxC,wEAEC;IACC,uDACF;IAAA,4DAAI;IACN,qEAAe;;;IAFX,0DACF;IADE,kGACF;;;IALF,uJAMe;;;IANA,6FAAyB;;;IAgBxC,wEAA2B;IAAA,yEAAc;IAAA,4DAAI;;;IAO7C,wEAA0C;IACxC,wEAEC;IACC,uDACF;IAAA,4DAAI;IACN,qEAAe;;;IAFX,0DACF;IADE,iGACF;;;IALF,uJAMe;;;IANA,6FAAyB;;;IAgBxC,wEAA+C;IAAA,uEAAY;IAAA,4DAAI;;;IAO/D,wEAA0C;IACxC,wEAEC;IACC,uDACF;IAAA,4DAAI;IACN,qEAAe;;;IAFX,0DACF;IADE,+FACF;;;IALF,uJAMe;;;IANA,6FAAyB;;;IAgBxC,wEAA2B;IAAA,mEAAQ;IAAA,4DAAI;;;;;;IAOvC,4EAGC;IACC,6EAOC;IACC,mEAA6C;IAC/C,4DAAS;IACT,6EAMC;IACC,mEAAmD;IACrD,4DAAS;IACT,6EAMC;IADC,sZAAS,4FAAsB,KAAC;IAEhC,mEAA8C;IAChD,4DAAS;IACT,6EAMC;IADC,sZAAS,4FAAsB,KAAC;IAEhC,mEAA+C;IACjD,4DAAS;IACX,qEAAe;;;IA/BX,0DAA+C;IAA/C,+JAA+C;IAS/C,0DAA8C;IAA9C,+JAA8C;;;IAnBlD,wJAyCe;;;IAxCZ,6FAAyB;;;;;IAzN1C,sEAAwC;IAQ5B,+EACF;IAAA,4DAAS;IAGb,0EAAsB;IAElB,uEAME;IACJ,4DAAM;IAGV,2EAAuB;IAejB,gTAAQ,sFAAoB,KAAC;IAE7B,4FAKC;IACC,yIAEc;IACd,yIAYc;IAChB,4DAAuB;IACvB,4FAKC;IACC,yIAEc;IACd,yIAYc;IAChB,4DAAuB;IACvB,4FAKC;IACC,yIAEc;IACd,yIAYc;IAChB,4DAAuB;IACvB,4FAKC;IACC,yIAEc;IACd,yIAYc;IAChB,4DAAuB;IACvB,4FAKC;IACC,yIAEc;IACd,yIAYc;IAChB,4DAAuB;IACvB,4FAKC;IACC,yIAEc;IACd,yIAYc;IAChB,4DAAuB;IACvB,4FAKC;IACC,yIAEc;IACd,yIAYc;IAChB,4DAAuB;IACvB,4FAKC;IACC,yIAEc;IACd,yIA+Cc;IAChB,4DAAuB;;;IA5PS,0DAA8B;IAA9B,8IAA8B;IAU5D,0DAA6B;IAA7B,6FAA6B;IAY/B,0DAAsB;IAAtB,+EAAsB;IAcpB,0DAAoB;IAApB,6EAAoB;IAuBpB,0DAAoB;IAApB,6EAAoB;IAuBpB,0DAAoB;IAApB,6EAAoB;IAuBpB,0DAAoB;IAApB,6EAAoB;IAuBpB,0DAAoB;IAApB,6EAAoB;IAuBpB,0DAAoB;IAApB,6EAAoB;IAuBpB,0DAAoB;IAApB,6EAAoB;IAuBpB,0DAAoB;IAApB,6EAAoB;;;;IA+D9B,0EAA0B;IACiB,iFAAsB;IAAA,4DAAK;IACpE,6EAMC;IADC,0RAAS,4EAAc,aAAa,CAAC,KAAC;IAEtC,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAG3C,0EAAwB;IACX,oHAA+C;IAAA,4DAAS;IAErE,2EAA0B;IAItB,2RAAS,4EAAc,QAAQ,CAAC,KAAC;IAEjC,sEACF;IAAA,4DAAS;IACT,8EAKC;IADC,2RAAS,0EAAY,IAAI,CAAC,KAAC;IAE3B,qEACF;IAAA,4DAAS;;AD7SN,MAAM,mBAAmB;IAY9B,YACU,cAA6B,EAC7B,YAAsB,EACtB,MAAqB,EACrB,EAAc;QAHd,mBAAc,GAAd,cAAc,CAAe;QAC7B,iBAAY,GAAZ,YAAY,CAAU;QACtB,WAAM,GAAN,MAAM,CAAe;QACrB,OAAE,GAAF,EAAE,CAAY;QAdxB,eAAU,GAAU,EAAE,CAAC;QACvB,iBAAY,GAAG,KAAK,CAAC;QACrB,kBAAa,GAAuB,IAAI,8DAAkB,EAAE,CAAC;QAC7D,mBAAc,GAAU,EAAE,CAAC;QAC3B,gBAAW,GAAG,CAAC,CAAC;QAChB,iBAAY,GAAG,CAAC,CAAC;QAGjB,sBAAiB,GAAY,KAAK,CAAC;IAOhC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAC1C,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;YAC/C,UAAU,CAAC,GAAG,EAAE;gBACd,MAAM,gBAAgB,GACpB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;gBACrD,IAAI,gBAAgB,EAAE;oBACpB,MAAM,SAAS,GAAG,gBAAgB,CAAC,SAAS,CAAC;oBAC7C,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;oBACnE,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,SAAS,CAAC,CAAC;iBACtD;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;YAClD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC,CACF,CAAC;IACJ,CAAC;IAKD,oBAAoB;QAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;IAC3C,CAAC;IAED,gBAAgB;QACd,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QACzC,MAAM,aAAa,GAAG,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QAE1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,sBAAsB;SACjD;QAED,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC5B,IAAI,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,EAAE;gBACnC,OAAO,CAAC,CAAC,CAAC;aACX;YACD,IAAI,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,EAAE;gBACnC,OAAO,CAAC,CAAC;aACV;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,MAAM,UAAU,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QAC9D,IAAI,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QAE9C,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAEzE,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,EAAE;YACnC,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;YACjE,IAAI,aAAa,GAAG,CAAC,EAAE;gBACrB,QAAQ,GAAG,UAAU,GAAG,aAAa,CAAC;aACvC;SACF;QAED,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;QACrC,QAAQ,IAAI,SAAS,CAAC;QAEtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAElE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IACnC,CAAC;IAED,YAAY,CAAC,KAAU;QACrB,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAID,SAAS,CAAC,MAAc;QACtB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAChD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,YAAY;qBACd,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;qBACjD,MAAM,CAAC,IAAI,CACV,CAAC,MAAM,EAAE,EAAE;oBACT,IAAI,MAAM,KAAK,IAAI,EAAE;wBACnB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,SAAS,CACrD,CAAC,IAAI,EAAE,EAAE;4BACP,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CACjB,uCAAuC,EACvC,oBAAoB,EACpB;gCACE,WAAW,EAAE,IAAI;gCACjB,OAAO,EAAE,IAAI;6BACd,CACF,CAAC;4BACF,UAAU,CAAC,GAAG,EAAE;gCACd,QAAQ,CAAC,MAAM,EAAE,CAAC;4BACpB,CAAC,EAAE,IAAI,CAAC,CAAC;wBACX,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;4BACR,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,wCAAwC,EACxC,OAAO,EACP;gCACE,WAAW,EAAE,IAAI;gCACjB,OAAO,EAAE,IAAI;6BACd,CACF,CAAC;4BACF,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;wBACtD,CAAC,CACF,CAAC;qBACH;yBAAM,IAAI,MAAM,KAAK,QAAQ,EAAE;wBAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;wBAC1B,UAAU,CAAC,GAAG,EAAE;4BACd,QAAQ,CAAC,MAAM,EAAE,CAAC;wBACpB,CAAC,EAAE,IAAI,CAAC,CAAC;qBACV;gBACH,CAAC,EACD,CAAC,MAAM,EAAE,EAAE;oBACT,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACpB,CAAC,CACF,CAAC;aACL;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACtD,CAAC,CACF,CAAC;IACJ,CAAC;;sFArKU,mBAAmB;iHAAnB,mBAAmB;kEAkDnB,uEAAkB;;;;;;;QC9D/B,yEAAwB;QAClB,kEAAO;QAAA,4DAAK;QAChB,qEAAI;QACE,iEAAM;QAAA,4DAAK;QACf,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAIpB,oEAAmD;QAEnD,+GAIM;QAEN,mHAwQM;QAEN,8MAiCc;;QAjTR,0DAAuB;QAAvB,uFAAuB;QAMvB,0DAAgC;QAAhC,gGAAgC;;;;;;;;;;;;;;;;;;;;ACfiB;AACmB;AACM;;;AAEhF,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mFAAmB;KACjC;IACD;QACI,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,yFAAqB;KACnC;IACD;QACI,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,yFAAqB;KACnC;CACJ;AAMM,MAAM,mBAAmB;;sFAAnB,mBAAmB;gHAAnB,mBAAmB;oHAHlB,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEb,mBAAmB,oFAFlB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;ACrBqB;AAEe;AACY;AACnB;AACW;AACL;AAC+B;AACZ;;AAczE,MAAM,YAAY;;wEAAZ,YAAY;yGAAZ,YAAY;6GAVrB,yDAAY;QACZ,uDAAW;QACX,uEAAkB;QAClB,+DAAmB;QACnB,sGAAsB;QACtB,iEAAS;QACT,uEAAmB;mIAIV,YAAY,mBAFP,mFAAmB,EAAE,yFAAqB,aARxD,yDAAY;QACZ,uDAAW;QACX,uEAAkB;QAClB,+DAAmB;QACnB,sGAAsB;QACtB,iEAAS;QACT,uEAAmB","sources":["./src/app/shared/services/orders.service.ts","./src/app/views/orders/orders-detail/orders-detail.component.ts","./src/app/views/orders/orders-detail/orders-detail.component.html","./src/app/views/orders/orders-list/orders-list.component.ts","./src/app/views/orders/orders-list/orders-list.component.html","./src/app/views/orders/orders-routing.module.ts","./src/app/views/orders/orders.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs-compat';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersService {\r\n\r\n  url = 'https://api-cosmetic-w32d.onrender.com/api/orders';\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getAllOrders(): Observable<any> {\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  getAllClients(): Observable<any> {\r\n    return this.http.get('https://api-cosmetic-w32d.onrender.com/api/clients');\r\n  }\r\n\r\n  getAllEmployees(): Observable<any> {\r\n    return this.http.get('https://api-cosmetic-w32d.onrender.com/api/employees');\r\n  }\r\n\r\n  getAllProducts(): Observable<any> {\r\n   return this.http.get('https://api-cosmetic-w32d.onrender.com/api/productcs');\r\n  }\r\n\r\n  getOrderById(id: any): Observable<any> {\r\n    return this.http.get(this.url + '/' + id);\r\n  }\r\n\r\n  updateOrderStatus(id: any): Observable<any> {\r\n    return this.http.put(this.url + '/updateStatus/' + id, {});\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, FormArray } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { OrdersService } from \"src/app/shared/services/orders.service\";\r\n\r\n@Component({\r\n  selector: \"app-orders-detail\",\r\n  templateUrl: \"./orders-detail.component.html\",\r\n  styleUrls: [\"./orders-detail.component.scss\"],\r\n})\r\nexport class OrdersDetailComponent implements OnInit {\r\n  // Propiedades booleanas\r\n  loading: boolean;\r\n  loadingData: boolean;\r\n  isNew: boolean;\r\n\r\n  // Propiedades de formulario\r\n  formBasic: FormGroup;\r\n  productsFormArray: FormArray;\r\n\r\n  // Propiedades para el modo de vista\r\n  viewMode: \"new\" | \"detail\" = \"new\";\r\n\r\n  // Otras propiedades\r\n  id: string;\r\n  orders: any = {};\r\n  order: any = {};\r\n  listClients: any[] = [];\r\n  listEmployees: any[] = [];\r\n  listProducts: any[] = [];\r\n  order_detail_products: any[] = [];\r\n  numberOfProducts: number = 0;\r\n  selected_employee: string;\r\n  selected_client: string;\r\n  selected_payment_type: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private _ordersService: OrdersService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.productsFormArray = this.formBuilder.array([]);\r\n  }\r\n\r\n  ngOnInit() {\r\n    const productGroup = this.createProductGroup();\r\n    this.productsFormArray.push(productGroup);\r\n    this.id = this.route.snapshot.params[\"id_order\"];\r\n    this.isNew = !this.id;\r\n    this.setViewMode();\r\n    this.getClients();\r\n    this.getEmployees();\r\n    this.getProducts();\r\n    this.getOrder();\r\n    this.formBasic = this.formBuilder.group({});\r\n    this.formBasic.addControl(\"products\", this.productsFormArray);\r\n  }\r\n\r\n  // -------------- INICIO: Método para definir el tipo de vista -------------- //\r\n\r\n  // Método que determina el modo de vista (nuevo o detalle) según la ruta actual\r\n  setViewMode() {\r\n    const currentRoute = this.router.url;\r\n    if (currentRoute.includes(\"/new\")) {\r\n      this.viewMode = \"new\";\r\n    } else if (currentRoute.includes(\"/detail/\")) {\r\n      this.viewMode = \"detail\";\r\n    }\r\n  }\r\n\r\n  // -------------- INICIO: Métodos para obtener datos -------------- //\r\n\r\n  // Método para obtener un pedido y sus detalles\r\n  getOrder() {\r\n    const currentRoute = this.router.url;\r\n    if (currentRoute.includes(\"/detail/\")) {\r\n      // Antes de cargar los datos, establece loadingData en true\r\n      this.loadingData = true;\r\n      this._ordersService.getOrderById(this.id).subscribe(\r\n        (data) => {\r\n          this.order = data;\r\n          const idClient = this.order.order.id_client;\r\n          const idEmployee = this.order.order.id_employee;\r\n          const orderDetail = this.order.order_detail[0];\r\n\r\n          this.selected_payment_type = this.order.order.payment_type;\r\n\r\n          this.findOrderData(idClient, idEmployee, orderDetail);\r\n\r\n          // Después de cargar los datos, establece loadingData en false\r\n          this.loadingData = false;\r\n        },\r\n        (error) => {\r\n          console.error(\"Error al obtener el pedido:\", error);\r\n          this.loadingData = false; // En caso de error, asegúrate de desactivar la pantalla de carga\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // Método para encontrar información relacionada con el pedido (cliente, empleado, productos)\r\n  findOrderData(clientId: number, employeeId: number, products: any) {\r\n    console.log(clientId + \" \" + employeeId + \" \" + products);\r\n\r\n    // Busca el nombre del cliente\r\n    const client = this.listClients.find(\r\n      (client) => client.id_client === clientId\r\n    );\r\n    if (client) {\r\n      this.selected_client = client.name_client;\r\n    }\r\n\r\n    // Busca el nombre del empleado\r\n    const employee = this.listEmployees.find(\r\n      (employee) => employee.id_employee === employeeId\r\n    );\r\n    if (employee) {\r\n      this.selected_employee = employee.name_employee;\r\n    }\r\n\r\n    // Asigna el detalle de productos del pedido\r\n    if (products.order_detail) {\r\n      this.order_detail_products = products.order_detail;\r\n    } else {\r\n      this.order_detail_products = products;\r\n    }\r\n\r\n    // Si falta información esencial, recarga la página\r\n    if (\r\n      this.selected_employee === undefined ||\r\n      this.selected_client === undefined\r\n    ) {\r\n      this.loadingData = true;\r\n      location.reload();\r\n    }\r\n\r\n    console.log(this.selected_client);\r\n    console.log(this.selected_employee);\r\n    console.log(this.order_detail_products);\r\n  }\r\n\r\n  // Método para obtener todos los clientes\r\n  getClients() {\r\n    this._ordersService.getAllClients().subscribe(\r\n      (data) => {\r\n        this.listClients = data;\r\n        console.log(this.listClients);\r\n      },\r\n      (error) => {\r\n        console.error(\"Error al obtener Clientes:\", error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Método para obtener todos los empleados\r\n  getEmployees() {\r\n    this._ordersService.getAllEmployees().subscribe(\r\n      (data) => {\r\n        this.listEmployees = data;\r\n        console.log(this.listEmployees);\r\n      },\r\n      (error) => {\r\n        console.error(\"Error al obtener Empleados:\", error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Método para obtener todos los productos\r\n  getProducts() {\r\n    this._ordersService.getAllProducts().subscribe(\r\n      (data) => {\r\n        this.listProducts = data;\r\n        console.log(this.listProducts);\r\n      },\r\n      (error) => {\r\n        console.error(\"Error al obtener Productos:\", error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Método para obtener el precio unitario de un producto por su ID\r\n  getProductPrice(idProduct: number): number | undefined {\r\n    const product = this.listProducts.find((p) => p.id_product === idProduct);\r\n    return product ? product.unitPrice : undefined;\r\n  }\r\n\r\n  // -------------- INICIO: Funciones para manipular Productos -------------- //\r\n\r\n  // Método para crear un FormGroup para un producto\r\n  createProductGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      id_product: [\"\"],\r\n      unitPrice: [\"\"],\r\n      unit: [\"\"],\r\n      subtotal: [\"\"],\r\n    });\r\n  }\r\n\r\n  // Método para manejar la selección de un producto\r\n  handleProductSelection(event: any, i: number) {\r\n    const selectedProductId = this.productsFormArray\r\n      .at(i)\r\n      .get(\"id_product\").value;\r\n\r\n    const selectedProduct = this.listProducts.find(\r\n      (product) => product.id_product == selectedProductId\r\n    );\r\n    if (selectedProduct) {\r\n      this.productsFormArray\r\n        .at(i)\r\n        .get(\"unitPrice\")\r\n        .setValue(selectedProduct.selling_price);\r\n\r\n      // Obtén el valor del campo \"unit\"\r\n      const unitValue = this.productsFormArray.at(i).get(\"unit\").value;\r\n\r\n      // Calcula el subtotal en función de la cantidad y el precio unitario\r\n      const subtotal = selectedProduct.selling_price * unitValue;\r\n\r\n      // Asigna el subtotal al campo \"subtotal\" del formulario\r\n      this.productsFormArray.at(i).get(\"subtotal\").setValue(subtotal);\r\n    } else {\r\n      console.log(\"Producto no encontrado.\");\r\n      this.productsFormArray.at(i).get(\"unitPrice\").setValue(null);\r\n    }\r\n  }\r\n\r\n  // Función para agregar un nuevo producto al FormArray\r\n  addProduct() {\r\n    const productGroup = this.createProductGroup();\r\n    this.productsFormArray.push(productGroup);\r\n    this.numberOfProducts = Object.keys(this.productsFormArray.controls).length;\r\n    console.log(this.numberOfProducts);\r\n  }\r\n\r\n  // Función para eliminar un producto del FormArray\r\n  removeProduct(index: number) {\r\n    this.productsFormArray.removeAt(index);\r\n    this.numberOfProducts = Object.keys(this.productsFormArray.controls).length;\r\n    console.log(this.numberOfProducts);\r\n  }\r\n\r\n  calculateTotal() {\r\n    let total = 0;\r\n    for (let i = 0; i < this.productsFormArray.length; i++) {\r\n      const subtotal = this.productsFormArray.at(i).get(\"subtotal\").value;\r\n      if (subtotal) {\r\n        total += subtotal;\r\n      }\r\n    }\r\n    console.log(this.productsFormArray);\r\n    return total;\r\n  }\r\n\r\n  // -------------- INICIO: Métodos para crear un nuevo Pedido -------------- //\r\n\r\n  createOrder() {\r\n    // Implementa la lógica para crear un pedido\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf=\"loadingData\">\r\n  <!-- Pantalla de carga -->\r\n  <div class=\"loading\">Cargando...</div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"!loading\" style=\"width: 100%;\">\r\n  <div class=\"breadcrumb\">\r\n    <h1 *ngIf=\"viewMode === 'new'\">Registrar Pedido</h1>\r\n    <h1 *ngIf=\"viewMode === 'detail'\">Ver Detalle de Pedido</h1>\r\n    <ul>\r\n      <li><a [routerLink]=\"['/orders']\">Pedidos</a></li>\r\n      <li *ngIf=\"viewMode === 'new'\">Registrar Pedido</li>\r\n      <li *ngIf=\"viewMode === 'detail'\">Ver Detalle de Pedido</li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-title mb-3\">Formulario de Pedido</div>\r\n          <form [formGroup]=\"formBasic\" (ngSubmit)=\"createOrder()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-5 form-group mb-3\">\r\n                <label for=\"id_client\">Cliente</label>\r\n                <select\r\n                  class=\"form-control\"\r\n                  id=\"id_client\"\r\n                  [disabled]=\"viewMode === 'detail'\"\r\n                  *ngIf=\"viewMode === 'detail'; else clientNewMode\"\r\n                >\r\n                  <option>{{ selected_client }}</option>\r\n                </select>\r\n                <ng-template #clientNewMode>\r\n                  <select class=\"form-control\">\r\n                    <option [value]=\"\">Seleccione el nombre del cliente</option>\r\n                    <option\r\n                      *ngFor=\"let client of listClients\"\r\n                      [value]=\"client.id_client\"\r\n                    >\r\n                      {{ client.name_client }}\r\n                    </option>\r\n                  </select>\r\n                </ng-template>\r\n              </div>\r\n\r\n              <div class=\"col-md-5 form-group mb-3\">\r\n                <label for=\"id_employee\">Empleado</label>\r\n                <select\r\n                  class=\"form-control\"\r\n                  id=\"id_employee\"\r\n                  [disabled]=\"viewMode === 'detail'\"\r\n                  *ngIf=\"viewMode === 'detail'; else employeeNewMode\"\r\n                >\r\n                  <option>{{ selected_employee }}</option>\r\n                </select>\r\n                <ng-template #employeeNewMode>\r\n                  <select class=\"form-control\">\r\n                    <option [value]=\"\">\r\n                      Seleccione el nombre del empleado\r\n                    </option>\r\n                    <option\r\n                      *ngFor=\"let employee of listEmployees\"\r\n                      [value]=\"employee.id_employee\"\r\n                    >\r\n                      {{ employee.name_employee }}\r\n                    </option>\r\n                  </select>\r\n                </ng-template>\r\n              </div>\r\n\r\n              <div class=\"col-md-2 form-group mb-3\">\r\n                <label for=\"payment_type\">Tipo de Pago</label>\r\n                <select\r\n                  class=\"form-control\"\r\n                  id=\"payment_type\"\r\n                  [disabled]=\"viewMode === 'detail'\"\r\n                  *ngIf=\"viewMode === 'detail'; else paymentTypeNewMode\"\r\n                >\r\n                  <option>{{ selected_payment_type }}</option>\r\n                </select>\r\n                <ng-template #paymentTypeNewMode>\r\n                  <select class=\"form-control\" id=\"payment_type\">\r\n                    <option [value]=\"Contado\">Contado</option>\r\n                    <option [value]=\"Credito\">Crédito</option>\r\n                  </select>\r\n                </ng-template>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-12 mt-4 table-border\">\r\n              <table class=\"table table-hover mb-4\">\r\n                <thead class=\"bg-gray-300\">\r\n                  <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Nombre del Producto</th>\r\n                    <th scope=\"col\">Precio Unitario</th>\r\n                    <th scope=\"col\">Unidades</th>\r\n                    <th scope=\"col\">Subtotal</th>\r\n                    <th scope=\"col\">Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody formArrayName=\"products\">\r\n                  <ng-container *ngIf=\"viewMode === 'new'; else detailView\">\r\n                    <tr\r\n                      *ngFor=\"\r\n                        let product of productsFormArray.controls;\r\n                        let i = index\r\n                      \"\r\n                      [formGroupName]=\"i\"\r\n                    >\r\n                      <th scope=\"row\">{{ i + 1 }}</th>\r\n                      <td>\r\n                        <select\r\n                          class=\"form-control\"\r\n                          id=\"id_product\"\r\n                          formControlName=\"id_product\"\r\n                          (change)=\"handleProductSelection($event, i)\"\r\n                        >\r\n                          <option\r\n                            *ngFor=\"let product of listProducts\"\r\n                            [value]=\"product.id_product\"\r\n                          >\r\n                            {{ product.name_product }}\r\n                          </option>\r\n                        </select>\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          name=\"unitPrice\"\r\n                          id=\"unitPrice\"\r\n                          class=\"form-control\"\r\n                          formControlName=\"unitPrice\"\r\n                          [readonly]=\"true\"\r\n                          *ngIf=\"viewMode === 'new'\"\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          class=\"form-control\"\r\n                          formControlName=\"unit\"\r\n                          (change)=\"handleProductSelection($event, i)\"\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          class=\"form-control\"\r\n                          formControlName=\"subtotal\"\r\n                          [readonly]=\"true\"\r\n                        />\r\n                      </td>\r\n                      <td class=\"d-flex justify-content-between\">\r\n                        <button\r\n                          *ngIf=\"numberOfProducts > 1\"\r\n                          class=\"btn btn-danger\"\r\n                          (click)=\"removeProduct(i)\"\r\n                        >\r\n                          <i class=\"i-Remove-Cart\"></i>\r\n                        </button>\r\n                        <div\r\n                          class=\"button_container\"\r\n                          *ngIf=\"i === productsFormArray.controls.length - 1\"\r\n                        >\r\n                          <button\r\n                            class=\"btn btn-primary\"\r\n                            (click)=\"addProduct()\"\r\n                          >\r\n                            +\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </ng-container>\r\n                  <ng-template #detailView>\r\n                    <tr\r\n                      *ngFor=\"\r\n                        let product of order_detail_products;\r\n                        let i = index\r\n                      \"\r\n                    >\r\n                      <th scope=\"row\">{{ i + 1 }}</th>\r\n                      <td>{{ product.id_product }}</td>\r\n                      <td>{{ product.product_price }}</td>\r\n                      <td>{{ product.product_quantity }}</td>\r\n                      <td>{{ product.product_quantity }}</td>\r\n                    </tr>\r\n                  </ng-template>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"table-footer\">\r\n                <div class=\"col-md-8\"></div>\r\n                <div class=\"col-md-8\">\r\n                  <div class=\"total\">\r\n                    Total:\r\n                    {{ viewMode == \"new\" ? calculateTotal() : orderTotal }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12\" style=\"margin-top: 20px\">\r\n              <div class=\"d-flex justify-content-end\">\r\n                <button\r\n                  class=\"btn btn-danger float-right\"\r\n                  [routerLink]=\"['/orders']\"\r\n                >\r\n                  Volver\r\n                </button>\r\n                <div *ngIf=\"viewMode === 'new'\" style=\"width: 10px\"></div>\r\n                <btn-loading\r\n                  *ngIf=\"viewMode === 'new'\"\r\n                  btnClass=\"btn-primary\"\r\n                  [loading]=\"loading\"\r\n                  >Crear Pedido</btn-loading\r\n                >\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\r\nimport { OrdersService } from \"src/app/shared/services/orders.service\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { DatatableComponent } from \"@swimlane/ngx-datatable\";\r\nimport { UntypedFormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-orders-list\",\r\n  templateUrl: \"./orders-list.component.html\",\r\n  styleUrls: [\"./orders-list.component.scss\"],\r\n})\r\nexport class OrdersListComponent implements OnInit {\r\n  loading: boolean;\r\n  listOrders: any[] = [];\r\n  modalAbierto = false;\r\n  searchControl: UntypedFormControl = new UntypedFormControl();\r\n  filteredOrders: any[] = [];\r\n  currentPage = 1;\r\n  itemsPerPage = 6;\r\n  countLabel: number;\r\n  originalRowCount: any;\r\n  showLoadingScreen: boolean = false;\r\n\r\n  constructor(\r\n    private _ordersService: OrdersService,\r\n    private modalService: NgbModal,\r\n    private toastr: ToastrService,\r\n    private el: ElementRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getOrders();\r\n  }\r\n\r\n  getOrders() {\r\n    this.showLoadingScreen = true;\r\n    this._ordersService.getAllOrders().subscribe(\r\n      (data) => {\r\n        this.listOrders = data;\r\n        console.log(this.listOrders);\r\n        this.originalRowCount = this.listOrders.length;\r\n        setTimeout(() => {\r\n          const pageCountElement =\r\n            this.el.nativeElement.querySelector(\".page-count\");\r\n          if (pageCountElement) {\r\n            const innerText = pageCountElement.innerText;\r\n            pageCountElement.innerText = this.originalRowCount + \" registros.\";\r\n            console.log(\"Inner text de .page-count:\", innerText);\r\n          }\r\n        });\r\n        this.sortListOrdersById();\r\n        this.adjustListOrders();\r\n        this.showLoadingScreen = false;\r\n      },\r\n      (error) => {\r\n        console.error(\"Error al obtener pedidos:\", error);\r\n        this.showLoadingScreen = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  @ViewChild(DatatableComponent)\r\n  table: DatatableComponent;\r\n\r\n  actualizarCountLabel() {\r\n    this.countLabel = this.listOrders.length;\r\n  }\r\n\r\n  adjustListOrders() {\r\n    const totalRows = this.listOrders.length;\r\n    const remainingRows = 6 - (totalRows % 6);\r\n\r\n    for (let i = 0; i < remainingRows; i++) {\r\n      this.listOrders.push({}); // Agrega filas vacías\r\n    }\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  sortListOrdersById() {\r\n    this.listOrders.sort((a, b) => {\r\n      if (a.order_number < b.order_number) {\r\n        return -1;\r\n      }\r\n      if (a.order_number > b.order_number) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  loadData() {\r\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n    let endIndex = startIndex + this.itemsPerPage;\r\n\r\n    const totalPages = Math.ceil(this.listOrders.length / this.itemsPerPage);\r\n\r\n    if (this.currentPage === totalPages) {\r\n      const remainingRows = this.listOrders.length % this.itemsPerPage;\r\n      if (remainingRows > 0) {\r\n        endIndex = startIndex + remainingRows;\r\n      }\r\n    }\r\n\r\n    const rowsToAdd = 6 - (endIndex % 6);\r\n    endIndex += rowsToAdd;\r\n\r\n    this.filteredOrders = this.listOrders.slice(startIndex, endIndex);\r\n\r\n    console.log(\"load data charged\");\r\n  }\r\n\r\n  onPageChange(event: any) {\r\n    console.log(\"onPageChange event:\", event);\r\n    this.currentPage = event.offset + 1;\r\n    this.loadData();\r\n  }\r\n\r\n  @ViewChild(\"deleteConfirmModal\", { static: true }) deleteConfirmModal: any;\r\n\r\n  openModal(idRole: number) {\r\n    this._ordersService.getOrderById(idRole).subscribe(\r\n      (data) => {\r\n        if (!this.modalAbierto) {\r\n          this.modalAbierto = true;\r\n          this.modalService\r\n            .open(this.deleteConfirmModal, { centered: true })\r\n            .result.then(\r\n              (result) => {\r\n                if (result === \"Ok\") {\r\n                  this._ordersService.updateOrderStatus(idRole).subscribe(\r\n                    (data) => {\r\n                      this.loading = false;\r\n                      this.toastr.success(\r\n                        \"Cambio de estado realizado con éxito.\",\r\n                        \"Proceso Completado\",\r\n                        {\r\n                          progressBar: true,\r\n                          timeOut: 2000,\r\n                        }\r\n                      );\r\n                      setTimeout(() => {\r\n                        location.reload();\r\n                      }, 2000);\r\n                    },\r\n                    (error) => {\r\n                      this.loading = false;\r\n                      this.toastr.error(\r\n                        \"Fallo al realizar el cambio de estado.\",\r\n                        \"Error\",\r\n                        {\r\n                          progressBar: true,\r\n                          timeOut: 2000,\r\n                        }\r\n                      );\r\n                      console.error(\"Error al cambiar de estado:\", error);\r\n                    }\r\n                  );\r\n                } else if (result === \"Cancel\") {\r\n                  this.modalAbierto = false;\r\n                  setTimeout(() => {\r\n                    location.reload();\r\n                  }, 2000);\r\n                }\r\n              },\r\n              (reason) => {\r\n                this.modalAbierto = false;\r\n                location.reload();\r\n              }\r\n            );\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(\"Error al obtener el pedido:\", error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"breadcrumb\">\r\n  <h1>Pedidos</h1>\r\n  <ul>\r\n    <li>Ventas</li>\r\n    <li>Pedidos</li>\r\n  </ul>\r\n</div>\r\n\r\n<div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n<div *ngIf=\"showLoadingScreen\" class=\"loading-screen\">\r\n  <div class=\"loading-content\">\r\n    <div class=\"spinner spinner-primary me-3\"></div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"showLoadingScreen == false\">\r\n  <div class=\"row mb-3\">\r\n    <div\r\n      class=\"col-md-12 mb-3 d-flex justify-content-between align-items-center\"\r\n    >\r\n      <div class=\"col-md-4\">\r\n        <div class=\"form-group\">\r\n          <button class=\"btn btn-primary\" [routerLink]=\"['/orders/new']\">\r\n            Crear nuevo Pedido\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"form-group\">\r\n          <input\r\n            id=\"role\"\r\n            placeholder=\"Buscar Pedido\"\r\n            [formControl]=\"searchControl\"\r\n            class=\"form-control\"\r\n            type=\"role\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card o-hidden\">\r\n        <ngx-datatable\r\n          class=\"material fullscreen\"\r\n          style=\"height: 460px\"\r\n          [columnMode]=\"'force'\"\r\n          [headerHeight]=\"50\"\r\n          [footerHeight]=\"50\"\r\n          [rowHeight]=\"60\"\r\n          [scrollbarV]=\"true\"\r\n          [rows]=\"listOrders\"\r\n          [externalPaging]=\"true\"\r\n          [count]=\"listOrders.length\"\r\n          [limit]=\"itemsPerPage\"\r\n          [offset]=\"(currentPage - 1) * itemsPerPage\"\r\n          (page)=\"onPageChange($event)\"\r\n        >\r\n          <ngx-datatable-column\r\n            name=\"order_number\"\r\n            [resizeable]=\"false\"\r\n            [canAutoResize]=\"true\"\r\n            [maxWidth]=\"60\"\r\n          >\r\n            <ng-template ngx-datatable-header-template>\r\n              <p style=\"font-size: 10px\">N°</p>\r\n            </ng-template>\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <ng-container *ngIf=\"row && row.id_order\">\r\n                <p\r\n                  style=\"font-size: 10px; text-align: center; margin-top: 12px\"\r\n                >\r\n                  {{ row.order_number }}\r\n                </p>\r\n              </ng-container>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column\r\n            name=\"client\"\r\n            [resizeable]=\"false\"\r\n            [canAutoResize]=\"true\"\r\n            [maxWidth]=\"120\"\r\n          >\r\n            <ng-template ngx-datatable-header-template>\r\n              <p style=\"font-size: 10px; text-align: center;\">Cliente</p>\r\n            </ng-template>\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <ng-container *ngIf=\"row && row.id_order\">\r\n                <p\r\n                  style=\"font-size: 10px; text-align: center; margin-top: 12px\"\r\n                >\r\n                  {{ row.id_client }}\r\n                </p>\r\n              </ng-container>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column\r\n            name=\"order_date\"\r\n            [resizeable]=\"false\"\r\n            [canAutoResize]=\"true\"\r\n            [maxWidth]=\"260\"\r\n          >\r\n            <ng-template ngx-datatable-header-template>\r\n              <p style=\"font-size: 12px; text-align: center;\">Fecha de Pedido</p>\r\n            </ng-template>\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <ng-container *ngIf=\"row && row.id_order\">\r\n                <p\r\n                  style=\"font-size: 10px; text-align: center; margin-top: 12px\"\r\n                >\r\n                  {{ row.order_date }}\r\n                </p>\r\n              </ng-container>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column\r\n            name=\"order_state\"\r\n            [resizeable]=\"false\"\r\n            [canAutoResize]=\"true\"\r\n            [maxWidth]=\"120\"\r\n          >\r\n            <ng-template ngx-datatable-header-template>\r\n              <p style=\"font-size: 12px\">Estado de Pedido</p>\r\n            </ng-template>\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <ng-container *ngIf=\"row && row.id_order\">\r\n                <p\r\n                  style=\"font-size: 10px; text-align: center; margin-top: 12px\"\r\n                >\r\n                  {{ row.order_state }}\r\n                </p>\r\n              </ng-container>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column\r\n            name=\"delivery_state\"\r\n            [resizeable]=\"false\"\r\n            [canAutoResize]=\"true\"\r\n            [maxWidth]=\"130\"\r\n          >\r\n            <ng-template ngx-datatable-header-template>\r\n              <p style=\"font-size: 102x; text-align: center;\">Estado de Entrega</p>\r\n            </ng-template>\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <ng-container *ngIf=\"row && row.id_order\">\r\n                <p\r\n                  style=\"font-size: 10px; text-align: center; margin-top: 12px\"\r\n                >\r\n                  {{ row.delivery_state }}\r\n                </p>\r\n              </ng-container>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column\r\n            name=\"payment_state\"\r\n            [resizeable]=\"false\"\r\n            [canAutoResize]=\"true\"\r\n            [maxWidth]=\"120\"\r\n          >\r\n            <ng-template ngx-datatable-header-template>\r\n              <p style=\"font-size: 12px\">Estado de Pago</p>\r\n            </ng-template>\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <ng-container *ngIf=\"row && row.id_order\">\r\n                <p\r\n                  style=\"font-size: 10px; text-align: center; margin-top: 12px\"\r\n                >\r\n                  {{ row.payment_state }}\r\n                </p>\r\n              </ng-container>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column\r\n            name=\"total_order\"\r\n            [resizeable]=\"false\"\r\n            [canAutoResize]=\"true\"\r\n            [maxWidth]=\"120\"\r\n          >\r\n            <ng-template ngx-datatable-header-template>\r\n              <p style=\"font-size: 12px; text-align: center\">Total Pedido</p>\r\n            </ng-template>\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <ng-container *ngIf=\"row && row.id_order\">\r\n                <p\r\n                  style=\"font-size: 10px; text-align: center; margin-top: 12px\"\r\n                >\r\n                  {{ row.total_order }}\r\n                </p>\r\n              </ng-container>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column\r\n            name=\"actions\"\r\n            [resizeable]=\"false\"\r\n            [canAutoResize]=\"true\"\r\n            [maxWidth]=\"270\"\r\n          >\r\n            <ng-template ngx-datatable-header-template>\r\n              <p style=\"font-size: 12px\">Acciones</p>\r\n            </ng-template>\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-value=\"value\"\r\n              let-row=\"row\"\r\n            >\r\n              <ng-container\r\n                *ngIf=\"row && row.id_order\"\r\n                class=\"d-flex justify-content-center\"\r\n              >\r\n                <button\r\n                  style=\"margin-bottom: 10px\"\r\n                  class=\"btn btn-dark m-1\"\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  title=\"Ver detalle\"\r\n                  [routerLink]=\"['/orders/detail', row.id_order]\"\r\n                >\r\n                  <i class=\"i-Eye\" style=\"font-size: 20px\"></i>\r\n                </button>\r\n                <button\r\n                  class=\"btn btn-success m-1\"\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  title=\"Realizar pago\"\r\n                  [routerLink]=\"['/payments/new', row.id_order]\"\r\n                >\r\n                  <i class=\"i-Financial\" style=\"font-size: 20px\"></i>\r\n                </button>\r\n                <button\r\n                  class=\"btn btn-warning m-1\"\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  title=\"Enviar pedido\"\r\n                  (click)=\"openModal(row.id_role)\"\r\n                >\r\n                  <i class=\"i-Jeep\" style=\"font-size: 20px\"></i>\r\n                </button>\r\n                <button\r\n                  class=\"btn btn-danger m-1\"\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  title=\"Anular pedido\"\r\n                  (click)=\"openModal(row.id_role)\"\r\n                >\r\n                  <i class=\"i-Close\" style=\"font-size: 20px\"></i>\r\n                </button>\r\n              </ng-container>\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #deleteConfirmModal let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-title\">Cambiar Estado del Rol</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      aria-label=\"Close button\"\r\n      aria-describedby=\"modal-title\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p><strong>¿Está seguro de que desea inhabilitar este rol?</strong></p>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-secondary btn-rounded\"\r\n      (click)=\"modal.dismiss('cancel')\"\r\n    >\r\n      Cancelar\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      ngbAutofocus\r\n      class=\"btn btn-wide btn-danger btn-rounded\"\r\n      (click)=\"modal.close('Ok')\"\r\n    >\r\n      Aceptar\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrdersListComponent } from './orders-list/orders-list.component';\r\nimport { OrdersDetailComponent } from './orders-detail/orders-detail.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: OrdersListComponent\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: OrdersDetailComponent\r\n    },\r\n    {\r\n        path: 'detail/:id_order',\r\n        component: OrdersDetailComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class OrdersRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OrdersRoutingModule } from './orders-routing.module';\r\nimport { OrdersListComponent } from './orders-list/orders-list.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { OrdersDetailComponent } from './orders-detail/orders-detail.component';\r\n\r\n@NgModule({\r\n   imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    SharedComponentsModule,\r\n    NgbModule,\r\n    OrdersRoutingModule,\r\n   ],\r\n   declarations: [OrdersListComponent, OrdersDetailComponent] \r\n})\r\nexport class OrdersModule { }"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}