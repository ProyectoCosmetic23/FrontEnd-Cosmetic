{"version":3,"file":"src_app_views_employees_employee_module_ts.js","mappings":"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","sources":["./src/app/shared/services/employee.service.ts","./src/app/views/employees/employee-detail/employee-detail.component.ts","./src/app/views/employees/employee-detail/employee-detail.component.html","./src/app/views/employees/employee-list/employee-list.component.ts","./src/app/views/employees/employee-list/employee-list.component.html","./src/app/views/employees/employee-routing.module.ts","./src/app/views/employees/employee.module.ts","./src/app/views/employees/models/employee.model.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeesService {\r\n  url = 'https://api-cosmetic-w32d.onrender.com/api/employees';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllEmployees():Observable<any>{\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  createEmployee(employee: any): Observable<any> {\r\n    return this.http.post(this.url, employee).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        console.error('Error en la solicitud:', error);\r\n        return throwError('Ocurrió un error al crear el empleado. Por favor, inténtalo de nuevo.');\r\n      })\r\n    );\r\n  }\r\n\r\n  updateEmployee(id: number, updatedData: any): Observable<any> {\r\n    return this.http.put(`${this.url}/${id}`, updatedData).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        console.error('Error en la solicitud:', error);\r\n        return throwError('Ocurrió un error al actualizar el empleado. Por favor, inténtalo de nuevo.');\r\n      })\r\n    );\r\n  }\r\n  \r\n\r\n\r\n\r\ncheckCedulaAvailability(cedula: string): Observable<boolean> {\r\n    return this.http.get<boolean>(`${this.url}-check-cedula?cedula=${cedula}`);\r\n}\r\n\r\ncheckEmailAvailability(email: string): Observable<boolean> {\r\n    return this.http.get<boolean>(`${this.url}-check-email?email=${email}`);\r\n}\r\n\r\ngetEmployeesById(id: number): Observable<any> {\r\n  return this.http.get<any>(`${this.url}/${id}`);\r\n}\r\n\r\n\r\nemployeeChangeStatus(id: any): Observable<any> {\r\n  return this.http.put<boolean>(`${this.url}/changeState/${id}`, {});\r\n\r\n}\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { EmployeesService } from 'src/app/shared/services/employee.service';\r\nimport { EmployeeFormModel } from '../models/employee.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-empleado-detail',\r\n    templateUrl: './employee-detail.component.html',\r\n    styleUrls: ['./employee-detail.component.scss']\r\n})\r\nexport class EmployeeDetailComponent implements OnInit {\r\n\r\n    employeeForm: FormGroup;\r\n    employeeFormSub: Subscription;\r\n    loading: boolean = false;\r\n    formBasic: FormGroup;\r\n    viewMode: 'new' | 'edit' | 'print' = 'new';\r\n    id: string;\r\n    isNew: boolean;\r\n    invoice: any = {};\r\n    invoiceForm: UntypedFormGroup;\r\n    invoiceFormSub: Subscription;\r\n    subTotal: number;\r\n    saving: boolean;\r\n    employeeData: EmployeeFormModel;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private fb: UntypedFormBuilder,\r\n        private toastr: ToastrService,\r\n        private employeesService: EmployeesService\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id_employee'];\r\n        this.isNew = !this.id;\r\n        this.setViewMode();\r\n        this.inicializateForm(Number(this.id));\r\n    }\r\n\r\n    private inicializateForm(id: number): void {\r\n        this.employeeForm = this.formBuilder.group({\r\n            id_card_employee: ['', [Validators.required, Validators.maxLength(10), Validators.minLength(7), Validators.pattern('^[0-9]+$')]],\r\n            name_employee: ['', [Validators.required, Validators.maxLength(80)],[this.validateNameSimbolAndNumber]],\r\n            email: ['', [Validators.required, Validators.email, Validators.maxLength(80)]],\r\n            address: ['', [Validators.required, Validators.maxLength(80)]],\r\n            phone: ['', [Validators.required, Validators.maxLength(80), Validators.pattern('^[0-9]{10}$')]],\r\n            observation: ['', [Validators.required, Validators.maxLength(100)]],\r\n            state_employee: [],\r\n            creation_date_employee: []\r\n        });\r\n\r\n        if (this.viewMode == 'print') {\r\n            this.employeeForm.disable();\r\n        }\r\n\r\n        if (this.viewMode == 'edit') {\r\n            this.cedula.disable();\r\n        }\r\n\r\n        if (this.viewMode != 'new') {\r\n            this.getEmployeeByID(id);\r\n        }\r\n\r\n    }\r\n\r\n    private getEmployeeByID(id: number): void {\r\n        this.loading = true;\r\n        this.employeesService.getEmployeesById(id).subscribe({\r\n            next: (response: any) => {\r\n                this.employeeData = new EmployeeFormModel(response);\r\n                this.setDataEmployee();\r\n            },\r\n            error: (err) => {\r\n                console.log('err', err);\r\n                this.loading = false;\r\n            },\r\n            complete: () => {\r\n                this.loading = false;\r\n            },\r\n        });\r\n    }\r\n\r\n    private setDataEmployee(): void {\r\n        if (this.employeeData) {\r\n            this.cedula.setValue(this.employeeData.id_card_employee)\r\n            this.employeeForm.setValue(this.employeeData)\r\n        }\r\n    }\r\n\r\n    createEmployee() {\r\n        if (this.employeeForm.valid) {\r\n            const employeeData = this.employeeForm.value;\r\n            this.loading = true;\r\n            this.employeesService.createEmployee(employeeData).subscribe(\r\n                (response) => {\r\n                    this.loading = false;\r\n                    console.log(\"Éxito al crear empleado: \", response);\r\n                    this.submit();\r\n                },\r\n                (error) => {\r\n                    this.loading = false;\r\n                    console.error(\"Error al crear empleado: \", this.toastr.error);\r\n                    const errorMessage = error.error ? error.error : 'Ocurrió un error al crear el empleado.';\r\n                    this.toastr.error(errorMessage, 'Error');\r\n                }\r\n            );\r\n        } else {\r\n            this.toastr.error('Por favor, complete todos los campos correctamente.', 'Error de validación', { progressBar: true, timeOut: 3000 });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    validateNameSimbolAndNumber(control: FormControl) {\r\n        const nameValue = control.value;\r\n        const combinedPattern = /^[\\wáéíóúñÑ´\\s]+$/;\r\n    \r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                if (combinedPattern.test(nameValue)) {\r\n                    const numberCount = (nameValue.match(/\\d/g) || []).length;\r\n                    if (numberCount <= 1) {\r\n                        resolve(null); // Válido\r\n                    } else {\r\n                        resolve({ invalidName: true }); // No válido\r\n                    }\r\n                } else {\r\n                    resolve({ invalidName: true }); // No válido\r\n                }\r\n            }, 0);\r\n        });\r\n    }\r\n    \r\n    \r\n    \r\n    public checkEmailAvailability(): void {\r\n        if (this.email && this.email instanceof AbstractControl) {\r\n            this.validateEmail(this.email).then((result) => {\r\n                if (result) {\r\n                    this.email.setErrors(result);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    validateEmail(control: AbstractControl) {\r\n        const email = control.value.toLowerCase();\r\n        const validDomains = ['gmail.com', 'hotmail.com', 'outlook.com', 'yahoo.com'];\r\n        const domain = email.split('@')[1];\r\n\r\n        if (!email) {\r\n            return Promise.resolve(null); // Correo vacío es válido\r\n        }\r\n\r\n        if (validDomains.includes(domain)) {\r\n            return new Promise((resolve) => {\r\n                if (!control.value) {\r\n                    resolve(null);\r\n                } else {\r\n                    this.employeesService.checkEmailAvailability(control.value).subscribe(\r\n                        (isAvailable) => {\r\n                            if (isAvailable) {\r\n                                resolve(null); // El correo es válido y está disponible\r\n                            } else {\r\n                                resolve({ emailTaken: true }); // El correo no está disponible\r\n                            }\r\n                        },\r\n                        (error) => {\r\n                            resolve({ emailTaken: true });\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n        } else {\r\n            return Promise.resolve({ invalidDomain: true }); // No es un correo válido en el dominio permitido\r\n        }\r\n    }\r\n\r\n    public checkCedulaAvailability(): void {\r\n        if (this.cedula && this.cedula instanceof AbstractControl) {\r\n            this.validateCedulaAvailability(this.cedula).then((result) => {\r\n                if (result) {\r\n                    this.cedula.setErrors(result);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    validateCedulaAvailability(control: AbstractControl) {\r\n        return new Promise((resolve) => {\r\n            if (!control.value) {\r\n                resolve(null);\r\n            } else {\r\n                this.employeesService.checkCedulaAvailability(control.value).subscribe(\r\n                    (isAvailable) => {\r\n                        if (isAvailable) {\r\n                            resolve(null);\r\n                        } else {\r\n                            resolve({ cedulaTaken: true });\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        resolve({ cedulaTaken: true });\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    saveEmployeeChanges(id: number, updatedData: any) {\r\n        this.employeesService.updateEmployee(id, updatedData).subscribe(\r\n            (response) => {\r\n                this.loading = false;\r\n                this.submit();\r\n            },\r\n            (error) => {\r\n                this.loading = false;\r\n                console.error(\"Error al crear empleado: \", this.toastr.error);\r\n                const errorMessage = error.error ? error.error : 'Ocurrió un error al crear el empleado.';\r\n                this.toastr.error(errorMessage, 'Error');\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    \r\n    \r\n\r\n    public submitEmployee(): void {\r\n        if (this.viewMode == 'new') {\r\n            this.createEmployee();\r\n        } else if (this.viewMode == 'edit') {\r\n            this.saveChanges();\r\n        }\r\n    }\r\n\r\n\r\n    saveChanges() {\r\n        console.log('editar')\r\n\r\n        if (this.employeeForm.valid) {\r\n          const id = Number(this.id); // Convierte el ID a número\r\n          const updatedData = {\r\n            id_card_employee: this.cedula.value,\r\n            name_employee: this.employeeForm.get('name_employee').value,\r\n            email: this.email.value,\r\n            address: this.employeeForm.get('address').value,\r\n            phone: this.employeeForm.get('phone').value,\r\n            observation: this.employeeForm.get('observation').value,\r\n          };\r\n          this.saveEmployeeChanges(id, updatedData);\r\n        }else {\r\n            this.toastr.error('Por favor, complete todos los campos correctamente.', 'Error de validación', { progressBar: true, timeOut: 3000 });\r\n        }\r\n      }\r\n      \r\n        \r\n\r\n    cancel() {\r\n\r\n        this.router.navigateByUrl('/employees');\r\n    }\r\n\r\n    submit() {\r\n        if (!this.loading) {\r\n            this.loading = true;\r\n            setTimeout(() => {\r\n                this.loading = false;\r\n                this.toastr.success('Empleado registrado con éxito.', 'Éxito', { progressBar: true, timeOut: 3000 });\r\n                setTimeout(() => {\r\n                    this.router.navigateByUrl('/employees');\r\n                }, 3000);\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    setViewMode() {\r\n        const currentRoute = this.router.url;\r\n        if (currentRoute.includes('/new')) {\r\n            this.viewMode = 'new';\r\n        } else if (currentRoute.includes('/edit/')) {\r\n            this.viewMode = 'edit';\r\n        } else if (currentRoute.includes('/print/')) {\r\n            this.viewMode = 'print';\r\n        }\r\n    }\r\n\r\n\r\n\r\n    print() {\r\n        if (window) {\r\n            window.print();\r\n        }\r\n    }\r\n\r\n\r\n    get email() {\r\n        return this.employeeForm.get('email');\r\n    }\r\n\r\n    get cedula() {\r\n        return this.employeeForm.get('id_card_employee');\r\n    }\r\n\r\n}\r\n","    <div class=\"breadcrumb\">\r\n        <h1 *ngIf=\"viewMode === 'new'\">Registrar Empleado</h1>\r\n        <h1 *ngIf=\"viewMode === 'edit'\">Editar Empleado</h1>\r\n        <h1 *ngIf=\"viewMode === 'print'\">Ver Detalle de Empleado</h1>\r\n        <ul>\r\n        <li><a [routerLink]=\"['/employees']\">Empleados</a></li>\r\n        <li *ngIf=\"viewMode === 'new'\">Registrar Empleado</li>\r\n        <li *ngIf=\"viewMode === 'edit'\">Editar Empleado</li>\r\n        <li *ngIf=\"viewMode === 'print'\">Ver Detalle de Empleado</li>\r\n        </ul>\r\n    </div>\r\n\r\n\r\n    <div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n<!-- Contenido común a todas las vistas -->\r\n<div class=\"form-container\">\r\n <!-- Vista de crear empleados -->\r\n <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"card mb-4\">\r\n            <div class=\"card-body\">\r\n                <div class=\"card-title mb-3\">Formulario de Empleados</div>\r\n                <form [formGroup]=\"employeeForm\" (ngSubmit)=\"submitEmployee()\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"id_card_employee\">Cédula de empleado<span class=\"text-danger\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"id_card_employee\" placeholder=\"Cédula de empleado\" formControlName=\"id_card_employee\" (change)=\"checkCedulaAvailability()\">\r\n                            <div *ngIf=\"employeeForm.get('id_card_employee').touched && employeeForm.get('id_card_employee').hasError('required')\" class=\"error-message\">\r\n                                El campo Cédula es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"employeeForm.get('id_card_employee').hasError('minlength')\" class=\"error-message\">\r\n                                La cédula debe contener minimo 7 caracteres.\r\n                            </div>\r\n                            <div *ngIf=\"employeeForm.get('id_card_employee').hasError('maxlength')\" class=\"error-message\">\r\n                                El campo Cédula no puede superar los 10 caracteres.\r\n                            </div>\r\n                            <div *ngIf=\"employeeForm.get('id_card_employee').hasError('pattern')\" class=\"error-message\">\r\n                                El campo Cédula debe contener solo números.\r\n                            </div>\r\n                            <div *ngIf=\"employeeForm.get('id_card_employee').hasError('cedulaTaken')\" class=\"error-message\">La cédula ya está en uso.</div>\r\n                        </div>\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"name_employee\">Nombre de empleado<span class=\"text-danger\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"name_employee\" placeholder=\"Nombre de empleado\" formControlName=\"name_employee\" required>\r\n                            <div *ngIf=\"employeeForm.get('name_employee').touched && employeeForm.get('name_employee').hasError('required')\"class=\"error-message\">\r\n                                El campo Nombre es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"employeeForm.get('name_employee').hasError('invalidName')\"class=\"error-message\">\r\n                                El campo Nombre no puede tener simbolos y solo puede tener 1  numero.\r\n                            </div>\r\n                            \r\n                            <div *ngIf=\"employeeForm.get('name_employee').hasError('maxlength')\"class=\"error-message\">\r\n                                El campo Nombre no puede superar los 80 caracteres.\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"email\">Correo<span class=\"text-danger\">*</span></label>\r\n                            <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Correo\" formControlName=\"email\" (change)=\"checkEmailAvailability\">\r\n                            <div *ngIf=\"employeeForm.get('email').touched && employeeForm.get('email').hasError('required')\"class=\"error-message\">\r\n                                El campo Correo es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"employeeForm.get('email').hasError('email')\"class=\"error-message\">\r\n                                El campo Correo debe ser un formato de correo electrónico válido.\r\n                            </div>\r\n                            <div *ngIf=\"employeeForm.get('email').hasError('invalidDomain')\" class=\"error-message\">El dominio del correo no es válido.</div>\r\n                            <div *ngIf=\"employeeForm.get('email').hasError('maxlength')\"class=\"error-message\">\r\n                                El campo Correo no puede superar los 80 caracteres.\r\n                            </div>\r\n                            <div *ngIf=\"employeeForm.get('email').hasError('emailTaken')\"class=\"error-message\">El correo electrónico ya está en uso.</div>\r\n\r\n                        </div>\r\n                        \r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"address\">Dirección<span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" id=\"address\" placeholder=\"Dirección\" formControlName=\"address\" required>\r\n                            <div *ngIf=\"employeeForm.get('address').touched && employeeForm.get('address').hasError('required')\"class=\"error-message\">\r\n                                El campo Dirección es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"employeeForm.get('address').hasError('maxlength')\"class=\"error-message\">\r\n                                El campo Dirección no puede superar los 80 caracteres.\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"phone\">Teléfono<span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" id=\"phone\" placeholder=\"Teléfono\" formControlName=\"phone\" required>\r\n                            <div *ngIf=\"employeeForm.get('phone').touched && employeeForm.get('phone').hasError('required')\"class=\"error-message\">\r\n                                El campo Teléfono es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"employeeForm.get('phone').hasError('maxlength')\"class=\"error-message\">\r\n                                El campo Teléfono no puede superar los 80 caracteres.\r\n                            </div>\r\n                            <div *ngIf=\"employeeForm.get('phone').hasError('pattern')\"class=\"error-message\">\r\n                                El campo Teléfono debe seguir un formato válido.\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"viewMode == 'print'\" class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"state_employee\">Estado<span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" id=\"state_employee\" placeholder=\"state_employee\" formControlName=\"state_employee\">\r\n                        </div>\r\n\r\n                        \r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"observation\">Observación<span class=\"text-danger\">*</span></label>\r\n                            <textarea class=\"form-control\" id=\"observation\" placeholder=\"Observación\" formControlName=\"observation\" required></textarea>\r\n                            <div *ngIf=\"employeeForm.get('observation').touched && employeeForm.get('observation').hasError('required')\"class=\"error-message\">\r\n                                El campo Observación es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"employeeForm.get('observation').hasError('maxlength')\"class=\"error-message\">\r\n                                El campo Observación no puede superar los 100 caracteres.\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"viewMode == 'print'\" class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"creation_date_employee\">Fecha de creacion<span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" id=\"creation_date_employee\" placeholder=\"Fecha de Creacion\" formControlName=\"creation_date_employee\">\r\n                        </div>\r\n                        \r\n                        <div class=\"form-group text-right\" style=\"text-align: right;\">\r\n                            <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"cancel()\">Cancel</button>\r\n                            <btn-loading *ngIf=\"viewMode !== 'print'\" btnClass=\"btn btn-primary m-1 custom-button\" [loading]=\"loading\"> {{viewMode == 'new' ? 'Registrar Empleado' : 'Editar Empleado' }} \r\n                            </btn-loading>\r\n                           \r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n      </div>\r\n   </div>","import { Component, OnInit,ViewChild  } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { EmployeesService } from 'src/app/shared/services/employee.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-employee-list',\r\n    templateUrl: './employee-list.component.html',\r\n    styleUrls: ['./employee-list.component.scss']\r\n    })\r\n    export class EmployeeListComponent implements OnInit {\r\n        loading: boolean;\r\n        searchControl: UntypedFormControl = new UntypedFormControl();\r\n        listEmployees: any[];\r\n        filteredEmployees: any[];\r\n        pageSize: number = 10;\r\n        currentPage: number = 1;\r\n        modalAbierto = false;\r\n     \r\n\r\n        constructor(\r\n            private _employeeService: EmployeesService,\r\n            private modalService: NgbModal,\r\n            private toastr: ToastrService,) {}\r\n\r\n        ngOnInit(): void {\r\n            this.getEmployees();\r\n            this.searchControl.valueChanges\r\n            .pipe(debounceTime(200))\r\n            .subscribe(value => {\r\n                this.filterData(value);\r\n            });\r\n        }\r\n\r\n        \r\n\r\n        getEmployees() {\r\n            this._employeeService.getAllEmployees().subscribe(data => {\r\n                this.listEmployees = data.sort((a, b) => a.id_employee - b.id_employee);\r\n                this.filteredEmployees = [...this.listEmployees];\r\n                }, error => {\r\n                console.log(error);\r\n                });\r\n            }\r\n\r\n        filterData(value: string) {\r\n            if (value) {\r\n            value = value.toLowerCase();\r\n            } else {\r\n            this.filteredEmployees = [...this.listEmployees];\r\n            return;\r\n            }\r\n\r\n            this.filteredEmployees = this.listEmployees.filter(employee => {\r\n            const cedulaMatch = employee.id_card_employee.toLowerCase().includes(value);\r\n            const nombreMatch = employee.name_employee.toLowerCase().includes(value);\r\n            const correoMatch = employee.email.toLowerCase().includes(value);\r\n            const estadoMatch = employee.state_employee.toLowerCase().includes(value);\r\n\r\n            return cedulaMatch || nombreMatch || correoMatch || estadoMatch;\r\n            });\r\n\r\n            this.currentPage = 1;\r\n        }\r\n\r\n        @ViewChild('deleteConfirmModal', { static: true }) deleteConfirmModal: any;\r\n\r\n        openModal(idEmployee: number) {\r\n            if (!this.modalAbierto) {\r\n                this.modalAbierto = true;\r\n                this.modalService.open(this.deleteConfirmModal, { centered: true }).result.then(\r\n                    (result) => {\r\n                    if (result === 'Ok') {\r\n                        this._employeeService.employeeChangeStatus(idEmployee).subscribe(\r\n                        (data) => {\r\n                            this.loading = false;\r\n                            this.toastr.success('Cambio de estado realizado con éxito.', 'Proceso Completado', { progressBar: true, timeOut: 2000 });\r\n                            console.log(data);\r\n            \r\n                            setTimeout(() => {\r\n                            location.reload();\r\n                            }, 2000);\r\n                        },\r\n                        (error) => {\r\n                            this.loading = false;\r\n                            this.toastr.error('Fallo al realizar el cambio de estado.', 'Error', { progressBar: true, timeOut: 2000 });\r\n                            console.error('Error al cambiar de estado:', error);\r\n                        }\r\n                        );\r\n                    } else if (result === 'Cancel') {\r\n                        this.modalAbierto = false;\r\n                        setTimeout(() => {\r\n                        location.reload();\r\n                        }, 2000);\r\n                    }\r\n                    },\r\n                    (reason) => {\r\n                    this.modalAbierto = false;\r\n                    location.reload();\r\n                    }\r\n                );\r\n                }\r\n            }\r\n            \r\n    }\r\n            \r\n","<div class=\"\">\r\n    <div class=\"breadcrumb\">\r\n        <h1>Listar Empleados</h1>\r\n        <ul>\r\n            <li><a href=\"#\">Servicios</a></li>\r\n            <li>Empleados</li>\r\n        </ul>\r\n        </div>\r\n    \r\n        <div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n        <div class=\"row mb-3\">\r\n        <div class=\"col-md-4\">\r\n            <div class=\"form-group\">\r\n            <input id=\"search\" placeholder=\"Buscar Empleados\" [formControl]=\"searchControl\" class=\"form-control form-control-rounded\" type=\"text\">\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-12 mb-3\">\r\n            <button class=\"btn btn-primary float-right\" [routerLink]=\"['/employees/new']\">Crear nuevo Empleado</button>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card o-hidden\">\r\n                <ngx-datatable style=\"height: 460px;\" class=\"material fullscreen\" [columnMode]=\"'force'\" [headerHeight]=\"50\"\r\n                [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\"[rows]=\"filteredEmployees\">\r\n                <ngx-datatable-column name=\"id_card_employee\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"100\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Cédula\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.id_card_employee }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"name_employee\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"200\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Nombre\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.name_employee }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"email\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"180\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Correo\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.email }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <!--\r\n                <ngx-datatable-column name=\"address\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"180\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Dirección\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.address }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                -->\r\n                <!--\r\n                <ngx-datatable-column name=\"phone\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"110\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Teléfono\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.phone }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                -->\r\n                <ngx-datatable-column name=\"state_employee\"  [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"20\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Estado\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.state_employee }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <!--\r\n                <ngx-datatable-column name=\"observation\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"100\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Observación\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.observation }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>-->\r\n                <!-- Puedes agregar más columnas según tus necesidades -->\r\n                <ngx-datatable-column name=\"actions\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"50\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Acciones\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        <button class=\"btn btn-dark m-1\" [routerLink]=\"['/employees/print', row.id_employee]\">\r\n                            <i class=\"i-Eye\"></i>\r\n                        </button>\r\n                        <button class=\"btn btn-info m-1\" [routerLink]=\"['/employees/edit', row.id_employee]\">\r\n                            <i class=\"i-Pen-4\"></i>\r\n                        </button>\r\n                        <label class=\"switch switch-success me-3\" (click)=\"openModal(row.id_employee)\">\r\n                            <input type=\"checkbox\" [checked]=\"row.state_employee === 'Activo'\">\r\n                            <span class=\"slider\"></span>\r\n                        </label>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                </ngx-datatable>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #deleteConfirmModal let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-title\">Cambiar Estado Empleado</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\"\r\n            (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p><strong>¿Está seguro de que desea inhabilitar este Empleado?</strong></p>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\"\r\n            (click)=\"modal.dismiss('cancel')\">Cancelar</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\"\r\n            (click)=\"modal.close('Ok')\">Aceptar</button>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EmployeeDetailComponent } from './employee-detail/employee-detail.component';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: EmployeeListComponent\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: EmployeeDetailComponent\r\n    },\r\n    {\r\n        path: 'edit/:id_employee',\r\n        component: EmployeeDetailComponent\r\n    },\r\n    {\r\n        path: 'print/:id_employee',\r\n        component: EmployeeDetailComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class EmployeeRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { EmployeeDetailComponent } from './employee-detail/employee-detail.component';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\nimport { EmployeeRoutingModule } from './employee-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    SharedComponentsModule,\r\n    NgbModule,\r\n    EmployeeRoutingModule\r\n  ],\r\n  declarations: [EmployeeDetailComponent, EmployeeListComponent]\r\n})\r\nexport class EmployeeModule { }\r\n","export class EmployeeFormModel {\r\n    id_card_employee: string;\r\n    name_employee: string;\r\n    email: string;\r\n    address: string;\r\n    phone: string;\r\n    state_employee: string;\r\n    observation: string;\r\n    creation_date_employee: Date;\r\n\r\n\r\n    constructor(response) {\r\n        this.id_card_employee = response.id_card_employee;\r\n        this.name_employee = response.name_employee;\r\n        this.email = response.email;\r\n        this.address = response.address;\r\n        this.phone = response.phone;\r\n        this.state_employee = response.state_employee;\r\n        this.observation = response.observation;\r\n        this.creation_date_employee = response.creation_date_employee;\r\n    }\r\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}