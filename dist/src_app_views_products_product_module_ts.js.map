{"version":3,"file":"src_app_views_products_product_module_ts.js","mappings":"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","sources":["./src/app/shared/services/product.service.ts","./src/app/views/products/models/product.model.ts","./src/app/views/products/product-detail/product-detail.component.ts","./src/app/views/products/product-detail/product-detail.component.html","./src/app/views/products/product-list/product-list.component.ts","./src/app/views/products/product-list/product-list.component.html","./src/app/views/products/product-routing.module.ts","./src/app/views/products/product.module.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  url = 'https://api-cosmetic-w32d.onrender.com/api/productcs';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllProducts():Observable<any>{\r\n    return this.http.get(this.url);\r\n  }\r\n\r\n  createProduct(product: any): Observable<any> {\r\n    return this.http.post(this.url, product).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        console.error('Error en la solicitud:', error);\r\n        return throwError('Ocurrió un error al crear el producto. Por favor, inténtalo de nuevo.');\r\n      })\r\n    );\r\n  }\r\n\r\n  updateProduct(id: number, updatedData: any): Observable<any> {\r\n    return this.http.put(`${this.url}/${id}`, updatedData).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        console.error('Error en la solicitud:', error);\r\n        return throwError('Ocurrió un error al actualizar el producto. Por favor, inténtalo de nuevo.');\r\n      })\r\n    );\r\n  }\r\n  \r\n\r\n  getProductsById(id: number): Observable<any> {\r\n    return this.http.get<any>(`${this.url}/${id}`);\r\n  }\r\n  \r\n  \r\n  productChangeStatus(id: any): Observable<any> {\r\n    return this.http.put<boolean>(`${this.url}/changeState/${id}`, {});\r\n  \r\n  }\r\ngetProducts() {\r\n  return this.http.get('api/products');\r\n}\r\n\r\n}\r\n \r\n\r\n","export class ProductFormModel {\r\n    id_product: string;\r\n    id_category: string;\r\n    name_product: string;\r\n    quantity: string;\r\n    max_stock: string;\r\n    min_stock: string;\r\n    cost_price: string;\r\n    selling_price: string;\r\n    profit: string;\r\n    creation_date_product: Date;\r\n    state_product: string;\r\n    observation: string;\r\n\r\n\r\n    constructor(response) {\r\n        this.id_product = response.id_product;\r\n        this.id_category = response.id_category;\r\n        this.name_product = response.name_product;\r\n        this.quantity = response.quantity;\r\n        this.max_stock =response.max_stock;\r\n        this.min_stock = response.min_stock;\r\n        this.cost_price = response.cost_price;\r\n        this.selling_price = response.selling_price;\r\n        this.selling_price = response.selling_price;\r\n        this.profit = response.profit;\r\n        this.state_product = response.state_product;\r\n        this.observation = response.observation;\r\n        this.creation_date_product = new Date(response.creation_date_product);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { ProductFormModel } from '../models/product.model';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n@Component({\r\n    selector: 'app-product-detail',\r\n    templateUrl: './product-detail.component.html',\r\n    styleUrls: ['./product-detail.component.scss']\r\n})\r\nexport class ProductDetailComponent implements OnInit {\r\n\r\n    productForm: FormGroup;\r\n    productFormSub: Subscription;\r\n    loading: boolean = false;\r\n    formBasic: FormGroup;\r\n    viewMode: 'new' | 'edit' | 'print' = 'new';\r\n    id: string;\r\n    isNew: boolean;\r\n    invoice: any = {};\r\n    invoiceForm: UntypedFormGroup;\r\n    invoiceFormSub: Subscription;\r\n    subTotal: number;\r\n    saving: boolean;\r\n    productData: ProductFormModel;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private fb: UntypedFormBuilder,\r\n        private toastr: ToastrService,\r\n        private productsService: ProductService,\r\n        private datePipe: DatePipe\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id_product'];\r\n        this.isNew = !this.id;\r\n        this.setViewMode();\r\n        this.inicializateForm(Number(this.id));\r\n    }\r\n\r\n    private inicializateForm(id: number): void {\r\n        this.productForm = this.formBuilder.group({\r\n            id_product:[],\r\n            id_category: ['', [Validators.required, Validators.maxLength(10), Validators.minLength(7), Validators.pattern('^[0-9]+$')]],\r\n            name_product: ['', [Validators.required, Validators.maxLength(80)],[this.validateNameSimbolAndNumber]],\r\n            quantity: ['', [Validators.required, Validators.email, Validators.maxLength(80)]],\r\n            cost_price: ['', [Validators.required, Validators.maxLength(80)]],\r\n            selling_price: ['', [Validators.required, Validators.maxLength(80), Validators.pattern('^[0-9]{10}$')]],\r\n            max_stock: ['', [Validators.required, Validators.maxLength(100)]],\r\n            min_stock: [],\r\n            profit: [],\r\n            observation: [],\r\n            state_product: [],\r\n            creation_date_product: []\r\n        });\r\n\r\n        if (this.viewMode == 'print') {\r\n            this.productForm.disable();\r\n        }\r\n\r\n        if (this.viewMode == 'edit') {\r\n            this.idProduct.disable();\r\n        }\r\n\r\n        if (this.viewMode != 'new') {\r\n            this.getProductByID(id);\r\n        }\r\n\r\n    }\r\n\r\n    private getProductByID(id: number): void {\r\n        this.loading = true;\r\n        this.productsService.getProductsById(id).subscribe({\r\n            next: (response: any) => {\r\n                this.productData = new ProductFormModel(response);\r\n                this.setDataProduct();\r\n                \r\n            },\r\n            error: (err) => {\r\n                console.log('err', err);\r\n                this.loading = false;\r\n            },\r\n            complete: () => {\r\n                this.loading = false;\r\n            },\r\n        });\r\n    }\r\n\r\n    private setDataProduct(): void {\r\n        if (this.productData) {\r\n            this.idProduct.setValue(this.productData.id_product);\r\n            this.productForm.setValue(this.productData)\r\n            this.dateProduct.setValue( this.datePipe.transform(this.productData.creation_date_product, 'yyyy-MM-dd'));\r\n           ;\r\n        }\r\n    }\r\n\r\n    createProduct() {\r\n        if (this.productForm.valid) {\r\n            const productData = this.productForm.value;\r\n            this.loading = true;\r\n            this.productsService.createProduct(productData).subscribe(\r\n                (response) => {\r\n                    this.loading = false;\r\n                    console.log(\"Éxito al crear el producto: \", response);\r\n                    this.submit();\r\n                },\r\n                (error) => {\r\n                    this.loading = false;\r\n                    console.error(\"Error al crear producto: \", this.toastr.error);\r\n                    const errorMessage = error.error ? error.error : 'Ocurrió un error al crear el producto.';\r\n                    this.toastr.error(errorMessage, 'Error');\r\n                }\r\n            );\r\n        } else {\r\n            this.toastr.error('Por favor, complete todos los campos correctamente.', 'Error de validación', { progressBar: true, timeOut: 3000 });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    validateNameSimbolAndNumber(control: FormControl) {\r\n        const nameValue = control.value;\r\n        const combinedPattern = /^[\\wáéíóúñÑ´\\s]+$/;\r\n    \r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                if (combinedPattern.test(nameValue)) {\r\n                    const numberCount = (nameValue.match(/\\d/g) || []).length;\r\n                    if (numberCount <= 1) {\r\n                        resolve(null); // Válido\r\n                    } else {\r\n                        resolve({ invalidName: true }); // No válido\r\n                    }\r\n                } else {\r\n                    resolve({ invalidName: true }); // No válido\r\n                }\r\n            }, 0);\r\n        });\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n\r\n    saveProductChanges(id: number, updatedData: any) {\r\n        this.productsService.updateProduct(id, updatedData).subscribe(\r\n            (response) => {\r\n                this.loading = false;\r\n                this.submit();\r\n            },\r\n            (error) => {\r\n                this.loading = false;\r\n                console.error(\"Error al crear producto: \", this.toastr.error);\r\n                const errorMessage = error.error ? error.error : 'Ocurrió un error al crear el producto.';\r\n                this.toastr.error(errorMessage, 'Error');\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    \r\n    \r\n\r\n    public submitProduct(): void {\r\n        if (this.viewMode == 'new') {\r\n            this.createProduct();\r\n        } else if (this.viewMode == 'edit') {\r\n            this.saveChanges();\r\n        }\r\n    }\r\n\r\n\r\n    saveChanges() {\r\n        console.log('editar')\r\n\r\n        if (this.productForm.valid) {\r\n          const id = Number(this.id); // Convierte el ID a número\r\n          const updatedData = {\r\n            id_product: this.idProduct.value,\r\n            id_category: this.productForm.get('id_category').value,\r\n            name_product: this.productForm.get('name_product').value,\r\n            cost_price: this.productForm.get('cost_price').value,\r\n            selling_price: this.productForm.get('selling_price').value,\r\n            max_stock: this.productForm.get('max_stock').value,\r\n            min_stock: this.productForm.get('min_stock').value,\r\n            observation: this.productForm.get('observation').value\r\n          };\r\n          this.saveProductChanges(id, updatedData);\r\n        }else {\r\n            this.toastr.error('Por favor, complete todos los campos correctamente.', 'Error de validación', { progressBar: true, timeOut: 3000 });\r\n        }\r\n      }\r\n      \r\n        \r\n\r\n    cancel() {\r\n\r\n        this.router.navigateByUrl('/products');\r\n    }\r\n\r\n    submit() {\r\n        if (!this.loading) {\r\n            this.loading = true;\r\n            setTimeout(() => {\r\n                this.loading = false;\r\n                this.toastr.success('Producto registrado con éxito.', 'Éxito', { progressBar: true, timeOut: 3000 });\r\n                setTimeout(() => {\r\n                    this.router.navigateByUrl('/products');\r\n                }, 3000);\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    setViewMode() {\r\n        const currentRoute = this.router.url;\r\n        if (currentRoute.includes('/new')) {\r\n            this.viewMode = 'new';\r\n        } else if (currentRoute.includes('/edit/')) {\r\n            this.viewMode = 'edit';\r\n        } else if (currentRoute.includes('/print/')) {\r\n            this.viewMode = 'print';\r\n        }\r\n    }\r\n\r\n\r\n\r\n    print() {\r\n        if (window) {\r\n            window.print();\r\n        }\r\n    }\r\n\r\n\r\n   \r\n\r\n    get idProduct() {\r\n        return this.productForm.get('id_product');\r\n    }\r\n\r\n    get dateProduct() {\r\n        return this.productForm.get('creation_date_product');\r\n    }\r\n\r\n}\r\n","    <div class=\"breadcrumb\">\r\n        <h1 *ngIf=\"viewMode === 'new'\">Registrar Producto</h1>\r\n        <h1 *ngIf=\"viewMode === 'edit'\">Editar Producto</h1>\r\n        <h1 *ngIf=\"viewMode === 'print'\">Ver Detalle de Producto</h1>\r\n        <ul>\r\n        <li><a [routerLink]=\"['/products']\">Compras</a></li>\r\n        <li *ngIf=\"viewMode === 'new'\">Registrar Producto</li>\r\n        <li *ngIf=\"viewMode === 'edit'\">Editar Producto</li>\r\n        <li *ngIf=\"viewMode === 'print'\">Ver Detalle de Producto</li>\r\n        </ul>\r\n    </div>\r\n\r\n\r\n    <div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n<!-- Contenido común a todas las vistas -->\r\n<div class=\"form-container\">\r\n <!-- Vista de crear empleados -->\r\n <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"card mb-4\">\r\n            <div class=\"card-body\">\r\n                <div class=\"card-title mb-3\">Formulario de Productos</div>\r\n                <form [formGroup]=\"productForm\" (ngSubmit)=\"submitProduct()\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"id_category\">Categoria<span class=\"text-danger\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"id_category\" placeholder=\"Categoria\" formControlName=\"id_category\">\r\n                            <!--\r\n                            <div *ngIf=\"productForm.get('id_card_employee').touched && productForm.get('id_card_employee').hasError('required')\" class=\"error-message\">\r\n                                El campo Cédula es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('id_card_employee').hasError('minlength')\" class=\"error-message\">\r\n                                La cédula debe contener minimo 7 caracteres.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('id_card_employee').hasError('maxlength')\" class=\"error-message\">\r\n                                El campo Cédula no puede superar los 10 caracteres.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('id_card_employee').hasError('pattern')\" class=\"error-message\">\r\n                                El campo Cédula debe contener solo números.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('id_card_employee').hasError('cedulaTaken')\" class=\"error-message\">La cédula ya está en uso.</div>\r\n                            -->\r\n                        </div>\r\n                        \r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"name_product\">Nombre de producto<span class=\"text-danger\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"name_product\" placeholder=\"Nombre de producto\" formControlName=\"name_product\" required>\r\n                           <!--\r\n                            <div *ngIf=\"productForm.get('name_employee').touched && productForm.get('name_employee').hasError('required')\"class=\"error-message\">\r\n                                El campo Nombre es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('name_employee').hasError('invalidName')\"class=\"error-message\">\r\n                                El campo Nombre no puede tener simbolos y solo puede tener 1  numero.\r\n                            </div>\r\n                            \r\n                            <div *ngIf=\"productForm.get('name_employee').hasError('maxlength')\"class=\"error-message\">\r\n                                El campo Nombre no puede superar los 80 caracteres.\r\n                            </div>\r\n                            -->\r\n                        </div>\r\n                        \r\n                        \r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"quantity\">Cantidad<span class=\"text-danger\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"quantity\" placeholder=\"Cantidad\" formControlName=\"quantity\">\r\n                            <!--\r\n                            <div *ngIf=\"productForm.get('email').touched && productForm.get('email').hasError('required')\"class=\"error-message\">\r\n                                El campo Correo es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('email').hasError('email')\"class=\"error-message\">\r\n                                El campo Correo debe ser un formato de correo electrónico válido.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('email').hasError('invalidDomain')\" class=\"error-message\">El dominio del correo no es válido.</div>\r\n                            <div *ngIf=\"productForm.get('email').hasError('maxlength')\"class=\"error-message\">\r\n                                El campo Correo no puede superar los 80 caracteres.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('email').hasError('emailTaken')\"class=\"error-message\">El correo electrónico ya está en uso.</div>\r\n                        -->\r\n                        </div>\r\n                        \r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"max_stock\">Stock Maximo<span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" id=\"max_stock\" placeholder=\"Stock Maximo\" formControlName=\"max_stock\" required>\r\n                            <!--\r\n                            <div *ngIf=\"productForm.get('address').touched && productForm.get('address').hasError('required')\"class=\"error-message\">\r\n                                El campo Dirección es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('address').hasError('maxlength')\"class=\"error-message\">\r\n                                El campo Dirección no puede superar los 80 caracteres.\r\n                            </div>\r\n                            -->\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"min_stock\">Stock Minimo<span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" id=\"min_stock\" placeholder=\"Stock Minimo\" formControlName=\"min_stock\" required>\r\n                            <!--\r\n                            <div *ngIf=\"productForm.get('address').touched && productForm.get('address').hasError('required')\"class=\"error-message\">\r\n                                El campo Dirección es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('address').hasError('maxlength')\"class=\"error-message\">\r\n                                El campo Dirección no puede superar los 80 caracteres.\r\n                            </div>\r\n                            -->\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"cost_price\">Precio Costo<span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" id=\"cost_price\" placeholder=\"Precio Costo\" formControlName=\"cost_price\" required>\r\n                            <!--\r\n                            <div *ngIf=\"productForm.get('address').touched && productForm.get('address').hasError('required')\"class=\"error-message\">\r\n                                El campo Dirección es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('address').hasError('maxlength')\"class=\"error-message\">\r\n                                El campo Dirección no puede superar los 80 caracteres.\r\n                            </div>\r\n                            -->\r\n                        </div>\r\n                        \r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"selling_price\">Precio Venta<span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" id=\"selling_price\" placeholder=\"Precio Venta\" formControlName=\"selling_price\" required>\r\n                            <!--\r\n                            <div *ngIf=\"productForm.get('address').touched && productForm.get('address').hasError('required')\"class=\"error-message\">\r\n                                El campo Dirección es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('address').hasError('maxlength')\"class=\"error-message\">\r\n                                El campo Dirección no puede superar los 80 caracteres.\r\n                            </div>\r\n                            -->\r\n                        </div>\r\n\r\n                        <div *ngIf=\"viewMode == 'print'\" class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"state_product\">Estado<span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" id=\"state_product\" placeholder=\"Estado\" formControlName=\"state_product\">\r\n                        </div>\r\n\r\n                        \r\n                        <div class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"observation\">Observación<span class=\"text-danger\">*</span></label>\r\n                            <textarea class=\"form-control\" id=\"observation\" placeholder=\"Observación\" formControlName=\"observation\" required></textarea>\r\n                            <!--\r\n                            <div *ngIf=\"productForm.get('observation').touched && productForm.get('observation').hasError('required')\"class=\"error-message\">\r\n                                El campo Observación es obligatorio.\r\n                            </div>\r\n                            <div *ngIf=\"productForm.get('observation').hasError('maxlength')\"class=\"error-message\">\r\n                                El campo Observación no puede superar los 100 caracteres.\r\n                            </div>\r\n                            -->\r\n                        </div>\r\n                        <div *ngIf=\"viewMode == 'print'\" class=\"col-md-6 form-group mb-3\">\r\n                            <label for=\"creation_date_product\">Fecha de creacion<span class=\"text-danger\">*</span></label>\r\n                            <input  class=\"form-control\" id=\"creation_date_product\" placeholder=\"Fecha de Creacion\" formControlName=\"creation_date_product\" >\r\n                            \r\n\r\n                        </div>\r\n                        \r\n                        <div class=\"form-group text-right\" style=\"text-align: right;\">\r\n                            <button type=\"button\" class=\"btn btn-danger ml-2\" (click)=\"cancel()\">Cancel</button>\r\n                            <btn-loading *ngIf=\"viewMode !== 'print'\" btnClass=\"btn btn-primary m-1 custom-button\" [loading]=\"loading\"> {{viewMode == 'new' ? 'Registrar Producto' : 'Editar Producto' }} \r\n                            </btn-loading>\r\n                           \r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n      </div>\r\n   </div>","import { Component, OnInit,ViewChild  } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { ProductService } from 'src/app/shared/services/product.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-product-list',\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['./product-list.component.scss']\r\n    })\r\n    export class ProductListComponent implements OnInit {\r\n        loading: boolean;\r\n        searchControl: UntypedFormControl = new UntypedFormControl();\r\n        listProducts: any[];\r\n        filteredProducts: any[];\r\n        pageSize: number = 10;\r\n        currentPage: number = 1;\r\n        modalAbierto = false;\r\n     \r\n\r\n        constructor(\r\n            private _productService: ProductService,\r\n            private modalService: NgbModal,\r\n            private toastr: ToastrService,) {}\r\n\r\n        ngOnInit(): void {\r\n            this.getProducts();\r\n            this.searchControl.valueChanges\r\n            .pipe(debounceTime(200))\r\n            .subscribe(value => {\r\n                this.filterData(value);\r\n            });\r\n        }\r\n\r\n        \r\n\r\n        getProducts() {\r\n            this._productService.getAllProducts().subscribe(data => {\r\n                this.listProducts = data.sort((a, b) => a.id_product - b.id_product);\r\n                this.filteredProducts = [...this.listProducts];\r\n                \r\n                }, error => {\r\n                console.log(error);\r\n                });\r\n            }\r\n\r\n        filterData(value: string) {\r\n            if (value) {\r\n            value = value.toLowerCase();\r\n            } else {\r\n            this.filteredProducts = [...this.listProducts];\r\n            return;\r\n            }\r\n\r\n            this.filteredProducts = this.listProducts.filter(productc => {\r\n            const nombreMatch = productc.name_product.toLowerCase().includes(value);\r\n            const cost_priceMatch = productc.cost_price.toLowerCase().includes(value);\r\n            const estadoMatch = productc.state_product.toLowerCase().includes(value);\r\n\r\n            return nombreMatch || cost_priceMatch || estadoMatch;\r\n            });\r\n\r\n            this.currentPage = 1;\r\n        }\r\n\r\n        @ViewChild('deleteConfirmModal', { static: true }) deleteConfirmModal: any;\r\n\r\n        openModal(idProduct: number) {\r\n            if (!this.modalAbierto) {\r\n                this.modalAbierto = true;\r\n                this.modalService.open(this.deleteConfirmModal, { centered: true }).result.then(\r\n                    (result) => {\r\n                    if (result === 'Ok') {\r\n                        this._productService.productChangeStatus(idProduct).subscribe(\r\n                        (data) => {\r\n                            this.loading = false;\r\n                            this.toastr.success('Cambio de estado realizado con éxito.', 'Proceso Completado', { progressBar: true, timeOut: 2000 });\r\n                            console.log(data);\r\n                        },\r\n                        (error) => {\r\n                            this.loading = false;\r\n                            this.toastr.error('Fallo al realizar el cambio de estado.', 'Error', { progressBar: true, timeOut: 2000 });\r\n                            console.error('Error al cambiar de estado:', error);\r\n                        }\r\n                        );\r\n                    } else if (result === 'Cancel') {\r\n                        this.modalAbierto = false;\r\n                        setTimeout(() => {\r\n                        location.reload();\r\n                        }, 2000);\r\n                    }\r\n                    },\r\n                    (reason) => {\r\n                    this.modalAbierto = false;\r\n                    location.reload();\r\n                    }\r\n                );\r\n                }\r\n            }\r\n            \r\n    }\r\n            \r\n","<div class=\"\">\r\n    <div class=\"breadcrumb\">\r\n        <h1>Listar Productos</h1>\r\n        <ul>\r\n            <li><a href=\"#\">Compras</a></li>\r\n            <li>Productos</li>\r\n        </ul>\r\n        </div>\r\n    \r\n        <div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n        <div class=\"row mb-3\">\r\n        <div class=\"col-md-4\">\r\n            <div class=\"form-group\">\r\n            <input id=\"search\" placeholder=\"Buscar Productos\" [formControl]=\"searchControl\" class=\"form-control form-control-rounded\" type=\"text\">\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-12 mb-3\">\r\n            <button class=\"btn btn-primary float-right\" [routerLink]=\"['/products/new']\">Crear nuevo Producto</button>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card o-hidden\">\r\n                <ngx-datatable style=\"height: 460px;\" class=\"material fullscreen\" [columnMode]=\"'force'\" [headerHeight]=\"50\"\r\n                [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\"[rows]=\"filteredProducts\">\r\n\r\n                <ngx-datatable-column name=\"id_category\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"100\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Categoria\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.id_category }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"name_product\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"200\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Nombre\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.name_product }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"cost_price\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"180\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Precio de costo\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.cost_price }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                \r\n                <ngx-datatable-column name=\"state_product\"  [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"20\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Estado\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{ row.state_product }}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                \r\n                <!-- Puedes agregar más columnas según tus necesidades -->\r\n                <ngx-datatable-column name=\"actions\" [resizeable]=\"false\" [canAutoResize]=\"true\" [minWidth]=\"50\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        Acciones\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        <button class=\"btn btn-dark m-1\" [routerLink]=\"['/products/print', row.id_product]\">\r\n                            <i class=\"i-Eye\"></i>\r\n                        </button>\r\n                        <button class=\"btn btn-info m-1\" [routerLink]=\"['/products/edit', row.id_product]\">\r\n                            <i class=\"i-Pen-4\"></i>\r\n                        </button>\r\n                        <label class=\"switch switch-success me-3\" (click)=\"openModal(row.id_product)\">\r\n                            <input type=\"checkbox\" [checked]=\"row.products === 'Activo'\">\r\n                            <span class=\"slider\"></span>\r\n                        </label>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                </ngx-datatable>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #deleteConfirmModal let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-title\">Cambiar Estado Producto</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\"\r\n            (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p><strong>¿Está seguro de que desea inhabilitar este Producto?</strong></p>\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\"\r\n            (click)=\"modal.dismiss('cancel')\">Cancelar</button>\r\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\"\r\n            (click)=\"modal.close('Ok')\">Aceptar</button>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ProductListComponent\r\n    },\r\n    \r\n    {\r\n        path: 'new',\r\n        component: ProductDetailComponent\r\n    },\r\n    {\r\n        path: 'edit/:id_product',\r\n        component: ProductDetailComponent\r\n    },\r\n    {\r\n        path: 'print/:id_product',\r\n        component: ProductDetailComponent\r\n    }\r\n    \r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProductRoutingModule { }\r\n","import { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductRoutingModule } from './product-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxDatatableModule,\r\n    ReactiveFormsModule,\r\n    SharedComponentsModule,\r\n    NgbModule,\r\n    ProductRoutingModule\r\n  ],\r\n  declarations: [ProductDetailComponent,ProductListComponent],\r\n  providers: [DatePipe]\r\n})\r\nexport class ProductModule { }\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}